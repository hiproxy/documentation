{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/browserconfig.xml","path":"browserconfig.xml","modified":1,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"source/logo-light.svg","path":"logo-light.svg","modified":1,"renderable":0},{"_id":"source/logo.png","path":"logo.png","modified":1,"renderable":0},{"_id":"source/logo.svg","path":"logo.svg","modified":1,"renderable":0},{"_id":"source/icons/android-touch-icon.png","path":"icons/android-touch-icon.png","modified":1,"renderable":0},{"_id":"source/icons/apple-touch-icon-120x120.png","path":"icons/apple-touch-icon-120x120.png","modified":1,"renderable":0},{"_id":"source/icons/apple-touch-icon-152x152.png","path":"icons/apple-touch-icon-152x152.png","modified":1,"renderable":0},{"_id":"source/icons/apple-touch-icon-180x180.png","path":"icons/apple-touch-icon-180x180.png","modified":1,"renderable":0},{"_id":"source/icons/favicon-160x160.png","path":"icons/favicon-160x160.png","modified":1,"renderable":0},{"_id":"source/icons/apple-touch-icon-76x76.png","path":"icons/apple-touch-icon-76x76.png","modified":1,"renderable":0},{"_id":"source/icons/favicon-196x196.png","path":"icons/favicon-196x196.png","modified":1,"renderable":0},{"_id":"source/icons/favicon-32x32.png","path":"icons/favicon-32x32.png","modified":1,"renderable":0},{"_id":"source/icons/favicon-16x16.png","path":"icons/favicon-16x16.png","modified":1,"renderable":0},{"_id":"source/icons/favicon-96x96.png","path":"icons/favicon-96x96.png","modified":1,"renderable":0},{"_id":"source/images/android_install_cert_1.png","path":"images/android_install_cert_1.png","modified":1,"renderable":0},{"_id":"source/images/android_install_cert_2.png","path":"images/android_install_cert_2.png","modified":1,"renderable":0},{"_id":"source/images/android_install_cert_3.png","path":"images/android_install_cert_3.png","modified":1,"renderable":0},{"_id":"source/images/hiproxy_start_page.png","path":"images/hiproxy_start_page.png","modified":1,"renderable":0},{"_id":"source/images/import_root_cert.png","path":"images/import_root_cert.png","modified":1,"renderable":0},{"_id":"source/images/ios_install_cert_1.jpg","path":"images/ios_install_cert_1.jpg","modified":1,"renderable":0},{"_id":"source/images/ios_install_cert_2.jpg","path":"images/ios_install_cert_2.jpg","modified":1,"renderable":0},{"_id":"source/images/ios_install_cert_3.jpg","path":"images/ios_install_cert_3.jpg","modified":1,"renderable":0},{"_id":"source/images/ios_install_cert_4.jpg","path":"images/ios_install_cert_4.jpg","modified":1,"renderable":0},{"_id":"source/images/ios_install_cert_5.jpg","path":"images/ios_install_cert_5.jpg","modified":1,"renderable":0},{"_id":"source/images/root_cert_trusted.png","path":"images/root_cert_trusted.png","modified":1,"renderable":0},{"_id":"source/images/trust_root_cert.png","path":"images/trust_root_cert.png","modified":1,"renderable":0},{"_id":"source/images/windows_install_cert.png","path":"images/windows_install_cert.png","modified":1,"renderable":0},{"_id":"source/images/windows_install_finish.png","path":"images/windows_install_finish.png","modified":1,"renderable":0},{"_id":"source/images/windows_step_2.png","path":"images/windows_step_2.png","modified":1,"renderable":0},{"_id":"source/zh-cn/CNAME","path":"zh-cn/CNAME","modified":1,"renderable":0},{"_id":"source/images/windows_step_1.png","path":"images/windows_step_1.png","modified":1,"renderable":0},{"_id":"source/zh-cn/images/android_install_cert_3.png","path":"zh-cn/images/android_install_cert_3.png","modified":1,"renderable":0},{"_id":"source/zh-cn/images/android_install_cert_1.png","path":"zh-cn/images/android_install_cert_1.png","modified":1,"renderable":0},{"_id":"source/zh-cn/images/android_install_cert_2.png","path":"zh-cn/images/android_install_cert_2.png","modified":1,"renderable":0},{"_id":"source/zh-cn/images/import_root_cert.png","path":"zh-cn/images/import_root_cert.png","modified":1,"renderable":0},{"_id":"source/zh-cn/images/ios_install_cert_1.jpg","path":"zh-cn/images/ios_install_cert_1.jpg","modified":1,"renderable":0},{"_id":"source/zh-cn/images/ios_install_cert_2.jpg","path":"zh-cn/images/ios_install_cert_2.jpg","modified":1,"renderable":0},{"_id":"source/zh-cn/images/hiproxy_start_page.png","path":"zh-cn/images/hiproxy_start_page.png","modified":1,"renderable":0},{"_id":"source/zh-cn/images/ios_install_cert_3.jpg","path":"zh-cn/images/ios_install_cert_3.jpg","modified":1,"renderable":0},{"_id":"source/zh-cn/images/ios_install_cert_4.jpg","path":"zh-cn/images/ios_install_cert_4.jpg","modified":1,"renderable":0},{"_id":"source/zh-cn/images/ios_install_cert_5.jpg","path":"zh-cn/images/ios_install_cert_5.jpg","modified":1,"renderable":0},{"_id":"source/zh-cn/images/root_cert_trusted.png","path":"zh-cn/images/root_cert_trusted.png","modified":1,"renderable":0},{"_id":"source/zh-cn/images/trust_root_cert.png","path":"zh-cn/images/trust_root_cert.png","modified":1,"renderable":0},{"_id":"source/zh-cn/images/windows_install_cert.png","path":"zh-cn/images/windows_install_cert.png","modified":1,"renderable":0},{"_id":"source/zh-cn/images/windows_install_finish.png","path":"zh-cn/images/windows_install_finish.png","modified":1,"renderable":0},{"_id":"source/zh-cn/images/windows_step_2.png","path":"zh-cn/images/windows_step_2.png","modified":1,"renderable":0},{"_id":"themes/navy/source/css/navy.styl","path":"css/navy.styl","modified":1,"renderable":1},{"_id":"themes/navy/source/js/mobile_nav.js","path":"js/mobile_nav.js","modified":1,"renderable":1},{"_id":"themes/navy/source/js/lang_select.js","path":"js/lang_select.js","modified":1,"renderable":1},{"_id":"themes/navy/source/js/toc.js","path":"js/toc.js","modified":1,"renderable":1},{"_id":"themes/navy/source/js/plugins.js","path":"js/plugins.js","modified":1,"renderable":1},{"_id":"source/zh-cn/images/windows_step_1.png","path":"zh-cn/images/windows_step_1.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"10bd5429f34b0282a8d9fc6c5e9369173ca675f6","modified":1505484677000},{"_id":"source/CNAME","hash":"f80acd366a9906a46086557d978ef740ad6cfb60","modified":1505568105000},{"_id":"source/browserconfig.xml","hash":"f54412705ab9eb69b544f438c9a1e15ae57f27c0","modified":1505481702000},{"_id":"source/favicon.ico","hash":"b84cc78ea6e9c111391205fbddb2c570a6ce2738","modified":1505481702000},{"_id":"source/index.jade","hash":"c68834219d61473bcc4867277b59e4962317d40e","modified":1505535946000},{"_id":"source/logo-light.svg","hash":"a32d9883a44b6e59e6fd47965f9bb31a5a3b63c7","modified":1505481702000},{"_id":"source/logo.png","hash":"7a39d92cc406f2c6a4ea8c13772ad7301c2b08fc","modified":1505481702000},{"_id":"source/logo.svg","hash":"8c3f9e5d4435ca6ea2e4778adaee06f7f79f21e9","modified":1505481702000},{"_id":"source/_data/footerlinks.yml","hash":"73ffb60d3e640dc0eeb9b6d646c864f1912d8665","modified":1505567567000},{"_id":"source/_data/nav.yml","hash":"ed68b8c7c27187c5528fb9998c6770d210987184","modified":1505481702000},{"_id":"source/_data/languages.yml","hash":"d6a25e7014fa4ae2c4598a0dae66ecc7208d5b2d","modified":1505481702000},{"_id":"source/_posts/2014-07-13-test.md","hash":"d0af186ccf8b97fb4be660b8d65b7c9f34202a56","modified":1505481702000},{"_id":"source/_data/sidebar.yml","hash":"4956a4513178eba7729da2bc2867fdd14a8aee38","modified":1505572264000},{"_id":"source/api/events.md","hash":"25e752d0c7520ce7a6eae675d2a4bb6035f027af","modified":1505481702000},{"_id":"source/api/index.md","hash":"39f69e5f569d0b31f891c19e0fa17503b3737759","modified":1505481702000},{"_id":"source/configuration/find_conf.md","hash":"9ab6ba3500365d266be0587447d1581e804c6480","modified":1505571294000},{"_id":"source/configuration/hosts.md","hash":"647454cf9fcc002e4cb2f4aed7a9118dd5a1fb8e","modified":1505481702000},{"_id":"source/configuration/index.md","hash":"732ff6d32ea9490b338fa23e3b8b349ee9552740","modified":1505571303000},{"_id":"source/configuration/rewrite.md","hash":"1f45b871af94035d838c0c10fcc31875c72c2d16","modified":1505481702000},{"_id":"source/configuration/ssl_certificate.md","hash":"4457ffca06a11e00b67577415d254881d13ecc6d","modified":1505481702000},{"_id":"source/developers/cli_command.md","hash":"40275a3715fb584a674e3c92623ce4b27544f957","modified":1505576788000},{"_id":"source/developers/index.md","hash":"b9e986030ca9ee8003ab2048c7118967cb8606e4","modified":1505481702000},{"_id":"source/developers/directive.md","hash":"7b67700f7f18dac032e1a5dd120f47d8cc5affa0","modified":1505576792000},{"_id":"source/developers/plugin.md","hash":"2db7e934923ee8a5b898098f4a47f315a868b78f","modified":1505481702000},{"_id":"source/developers/route.md","hash":"ce50285cde1cad54f49a61c73a040a56b1d3be26","modified":1505481702000},{"_id":"source/faqs/index.md","hash":"e5c85857dd70209d52a56cd59993027de843085d","modified":1505481702000},{"_id":"source/get_started/applied_to_existing_projects.md","hash":"1cda233a44b0eec679048953c2e4fa4e679a13b7","modified":1505481702000},{"_id":"source/get_started/cli_options.md","hash":"0a3990544c8fa7a99da7a25baf4f18247cd851cb","modified":1505481702000},{"_id":"source/get_started/index.md","hash":"e23dd378bbfcfe3e8e07ea62dba5844ae49985f3","modified":1505481702000},{"_id":"source/get_started/installation.md","hash":"2ed22db36f4705e3b0f17ffcd2b219bbd5850311","modified":1505481702000},{"_id":"source/get_started/run_example.md","hash":"6108f41c89809a14e64f758e77a8d800223747df","modified":1505576778000},{"_id":"source/icons/android-touch-icon.png","hash":"f88187e32871d336372e0f214b0fd84bd76de78b","modified":1505484382000},{"_id":"source/icons/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1505486875000},{"_id":"source/icons/apple-touch-icon-120x120.png","hash":"8760d0952de5ae941285e22475d402cc0049ad02","modified":1505484380000},{"_id":"source/icons/apple-touch-icon-152x152.png","hash":"25b6c171b2b8839dbf9d787adb15549377b044f8","modified":1505484380000},{"_id":"source/icons/apple-touch-icon-180x180.png","hash":"632e2bcb763893eee913771764d1b289186bc663","modified":1505484382000},{"_id":"source/icons/favicon-160x160.png","hash":"33ae3f3476bf7afb1c224f5a80f2ca53ce25788b","modified":1505484394000},{"_id":"source/icons/apple-touch-icon-76x76.png","hash":"b97fd52e69140c101f1a15687383fc2c9ccf3c83","modified":1505484380000},{"_id":"source/icons/favicon-196x196.png","hash":"d2131739c8b45cb81f9676772b275a3d3b7013c3","modified":1505484394000},{"_id":"source/icons/favicon-32x32.png","hash":"33afaecd001b5f3612015950faf0220f755865d6","modified":1505484392000},{"_id":"source/icons/favicon-16x16.png","hash":"f446797b8a31915693449055e6bad97cba772a0d","modified":1505484390000},{"_id":"source/icons/favicon-96x96.png","hash":"0ef71fa7f3dd2e5795466359c0379058948d7ea8","modified":1505484392000},{"_id":"source/images/android_install_cert_1.png","hash":"fabf72ad70d10893dfbab50c232afe8992ccc7c0","modified":1505481702000},{"_id":"source/images/android_install_cert_2.png","hash":"f1b6466d1fcee034ef093add0738bb4f4c0538e8","modified":1505481702000},{"_id":"source/images/android_install_cert_3.png","hash":"901b67165850a8cb95443ca23c9f4a8d7bf2e5a7","modified":1505481702000},{"_id":"source/images/hiproxy_start_page.png","hash":"d87a1c5443d6686d4c0ce603c27d531da2e47e41","modified":1505481702000},{"_id":"source/images/import_root_cert.png","hash":"cdbdf0a29a55e050042e7416ee11d1adc7127a14","modified":1505481702000},{"_id":"source/images/ios_install_cert_1.jpg","hash":"56a8d73e2cd8f55f0a82d18707d16810732d987d","modified":1505481702000},{"_id":"source/images/ios_install_cert_2.jpg","hash":"b264f24242e8642edf12edaa95ba9d2023ba673b","modified":1505481702000},{"_id":"source/images/ios_install_cert_3.jpg","hash":"629b841e5a351923be09932ef6ac81249ca6ac6d","modified":1505481702000},{"_id":"source/images/ios_install_cert_4.jpg","hash":"e95dff6263a8cd5f25501262d2eba9c85552b603","modified":1505481702000},{"_id":"source/images/ios_install_cert_5.jpg","hash":"4411a970d5f54b9c21e548ae7e98c3f638945da6","modified":1505481702000},{"_id":"source/images/root_cert_trusted.png","hash":"9c3b83c7c7dc0c18920f7e5090eccbd243de84ed","modified":1505481702000},{"_id":"source/images/trust_root_cert.png","hash":"8c9d1835ee58274e690965745f88569576baf726","modified":1505481702000},{"_id":"source/images/windows_install_cert.png","hash":"f5c16607e1894b92badbdeebaef8cba2fd047260","modified":1505481702000},{"_id":"source/images/windows_install_finish.png","hash":"1ec88a434de2e6d86a34e044586146de948ad143","modified":1505481702000},{"_id":"source/images/windows_step_2.png","hash":"bb8f33e91737ac885212eb182a810971881d5a8b","modified":1505481702000},{"_id":"source/rewrite/directive.md","hash":"c14d692ea78f18adccd3c56bda669accf0076ea1","modified":1505481702000},{"_id":"source/rewrite/index.md","hash":"b693009a24dfda6ddc0a0f08656c22e996561c5e","modified":1505481702000},{"_id":"source/rewrite/built_in_variable.md","hash":"3cb4d0e6526900f4b1146ce18e1c0100e99d6e03","modified":1505481702000},{"_id":"source/rewrite/scope.md","hash":"f08d75bb9aeba77df9dc1b8dc8b3fe15980f737e","modified":1505481702000},{"_id":"source/zh-cn/CNAME","hash":"4987d60b1df68612619af9dd05972a6ccd8364e1","modified":1505481702000},{"_id":"source/zh-cn/index.jade","hash":"ed40fe022eb361f12efe1abc995beb8f92b8997b","modified":1505536004000},{"_id":"themes/navy/languages/en.yml","hash":"4bb39f650be5b46955a82e890def62027fb52964","modified":1505567256000},{"_id":"themes/navy/layout/index.swig","hash":"ec8f42d848976e3ffe48c5234daa81920dd56650","modified":1505481702000},{"_id":"themes/navy/layout/page.swig","hash":"3d5da8c6de14ad98d5b4dc4b5346c909ddbac890","modified":1505536578000},{"_id":"themes/navy/layout/layout.swig","hash":"ef28a5f5fc3258622e72ee3a836ff8cf415fb790","modified":1505481702000},{"_id":"themes/navy/languages/zh-cn.yml","hash":"904bf59b71381559dd9b1f1520ed872924dbaf72","modified":1505567215000},{"_id":"themes/navy/layout/post.swig","hash":"0478deebea5fd2dc6c2357edcac1cce4b105f712","modified":1505481702000},{"_id":"themes/navy/layout/archive.swig","hash":"6076f145cb3bcc55353e1c6169f4ea7f42461af2","modified":1505481702000},{"_id":"source/images/windows_step_1.png","hash":"fb54a902d83ac87e6e97983a6c4afc0f2d70a153","modified":1505481702000},{"_id":"source/zh-cn/api/events.md","hash":"25e752d0c7520ce7a6eae675d2a4bb6035f027af","modified":1505481702000},{"_id":"source/zh-cn/api/index.md","hash":"39f69e5f569d0b31f891c19e0fa17503b3737759","modified":1505481702000},{"_id":"source/zh-cn/configuration/find_conf.md","hash":"73a4476b5dc32d7e19705e38e6d6fe737888df49","modified":1505536246000},{"_id":"source/zh-cn/configuration/hosts.md","hash":"afa79625b5ab3792a8e080fc5be7df2a2074c92c","modified":1505481702000},{"_id":"source/zh-cn/configuration/index.md","hash":"59d32f596317dec0ba44425edddbfe619d929613","modified":1505481702000},{"_id":"source/zh-cn/configuration/rewrite.md","hash":"1f45b871af94035d838c0c10fcc31875c72c2d16","modified":1505481702000},{"_id":"source/zh-cn/configuration/ssl_certificate.md","hash":"0d0469c7c0fe120f984dfd2dde8ec7eaa4965629","modified":1505481702000},{"_id":"source/zh-cn/developers/cli_command.md","hash":"55e2d7caf311eaf106df3cc77cd91f440257eeca","modified":1505481702000},{"_id":"source/zh-cn/developers/index.md","hash":"b9e986030ca9ee8003ab2048c7118967cb8606e4","modified":1505481702000},{"_id":"source/zh-cn/developers/directive.md","hash":"b79f542e5fdcb683ebd86742df85bc2249ceaac7","modified":1505481702000},{"_id":"source/zh-cn/developers/plugin.md","hash":"9c7e2c9e9679f4321369439cb3bd8af69e82b04d","modified":1505481702000},{"_id":"source/zh-cn/faqs/index.md","hash":"75748d9876d5f0e9f5d26634a9f7fead97aa1357","modified":1505481702000},{"_id":"source/zh-cn/get_started/applied_to_existing_projects.md","hash":"407765ec336d3235419ebc2db98abbc07cc1aefc","modified":1505576653000},{"_id":"source/zh-cn/developers/route.md","hash":"efbd626887d999df5bbbbe1a96e901ed9d7cffd6","modified":1505481702000},{"_id":"source/zh-cn/get_started/index.md","hash":"c00b624318f7b1f8f1a493dfd2f5e4e356106221","modified":1505576667000},{"_id":"source/zh-cn/get_started/cli_options.md","hash":"b94537551b8f487df3cf8b8f8d54e3d8fda86962","modified":1505576662000},{"_id":"source/zh-cn/get_started/run_example.md","hash":"faac9f8419960223f05d02b2cc8af445fafdd752","modified":1505576693000},{"_id":"source/zh-cn/get_started/installation.md","hash":"dc5c0f761f51cf1a8886e215cdbdaba13553d3a6","modified":1505576674000},{"_id":"source/zh-cn/images/android_install_cert_3.png","hash":"901b67165850a8cb95443ca23c9f4a8d7bf2e5a7","modified":1505481702000},{"_id":"source/zh-cn/images/android_install_cert_1.png","hash":"fabf72ad70d10893dfbab50c232afe8992ccc7c0","modified":1505481702000},{"_id":"source/zh-cn/images/android_install_cert_2.png","hash":"f1b6466d1fcee034ef093add0738bb4f4c0538e8","modified":1505481702000},{"_id":"source/zh-cn/images/import_root_cert.png","hash":"cdbdf0a29a55e050042e7416ee11d1adc7127a14","modified":1505481702000},{"_id":"source/zh-cn/images/ios_install_cert_1.jpg","hash":"56a8d73e2cd8f55f0a82d18707d16810732d987d","modified":1505481702000},{"_id":"source/zh-cn/images/ios_install_cert_2.jpg","hash":"b264f24242e8642edf12edaa95ba9d2023ba673b","modified":1505481702000},{"_id":"source/zh-cn/images/hiproxy_start_page.png","hash":"d87a1c5443d6686d4c0ce603c27d531da2e47e41","modified":1505481702000},{"_id":"source/zh-cn/images/ios_install_cert_3.jpg","hash":"629b841e5a351923be09932ef6ac81249ca6ac6d","modified":1505481702000},{"_id":"source/zh-cn/images/ios_install_cert_4.jpg","hash":"e95dff6263a8cd5f25501262d2eba9c85552b603","modified":1505481702000},{"_id":"source/zh-cn/images/ios_install_cert_5.jpg","hash":"4411a970d5f54b9c21e548ae7e98c3f638945da6","modified":1505481702000},{"_id":"source/zh-cn/images/root_cert_trusted.png","hash":"9c3b83c7c7dc0c18920f7e5090eccbd243de84ed","modified":1505481702000},{"_id":"source/zh-cn/images/trust_root_cert.png","hash":"8c9d1835ee58274e690965745f88569576baf726","modified":1505481702000},{"_id":"source/zh-cn/images/windows_install_cert.png","hash":"f5c16607e1894b92badbdeebaef8cba2fd047260","modified":1505481702000},{"_id":"source/zh-cn/images/windows_install_finish.png","hash":"1ec88a434de2e6d86a34e044586146de948ad143","modified":1505481702000},{"_id":"source/zh-cn/rewrite/built_in_variable.md","hash":"3312e6b66a13899e45a56be79700b7893599ac24","modified":1505576705000},{"_id":"source/zh-cn/images/windows_step_2.png","hash":"bb8f33e91737ac885212eb182a810971881d5a8b","modified":1505481702000},{"_id":"source/zh-cn/rewrite/directive.md","hash":"e131fdfe2827b88d019932e3a392ccba33667535","modified":1505576715000},{"_id":"source/zh-cn/rewrite/index.md","hash":"3cdf05c0caeede0818572b8975612c99bce8512d","modified":1505576724000},{"_id":"source/zh-cn/rewrite/scope.md","hash":"176290a545003a14d3f25ea2179c99e32fc5058d","modified":1505576730000},{"_id":"themes/navy/layout/partial/comment.swig","hash":"6f5494c97586584884ca8d93b9184d4eadbd8e86","modified":1505481702000},{"_id":"themes/navy/layout/partial/after_footer.swig","hash":"dcdda24c42ad25e866ec53cf18a17328356b59c7","modified":1505538922000},{"_id":"themes/navy/layout/partial/google_analytics.swig","hash":"44869c53540e7dfc6dfde2550e3bb94e0693c8a6","modified":1505481702000},{"_id":"themes/navy/layout/partial/head.swig","hash":"3dace3c7b93aa202429005966ff83a8e63cebeaf","modified":1505539540000},{"_id":"themes/navy/layout/partial/header.swig","hash":"146267348c1b8af1f7691ae5289bd3e5d26b29f8","modified":1505572812000},{"_id":"themes/navy/layout/partial/plugin.swig","hash":"17b6c6945e4b1b41dbb10d851f85ca10100c28ea","modified":1505481702000},{"_id":"themes/navy/layout/partial/mobile_nav.swig","hash":"698ed6d1a98b7b4b2b95e9689407c81e32a7e3a7","modified":1505573530000},{"_id":"themes/navy/layout/partial/share.swig","hash":"29b0b5f1371b8143a2e3ce7bf307561aabeb352a","modified":1505481702000},{"_id":"themes/navy/layout/partial/post.swig","hash":"e75df7f513ec321d2a95b8f689470adbab955760","modified":1505481702000},{"_id":"themes/navy/layout/partial/sidebar.swig","hash":"6bb7120a1ab8eadf5089d16f63100ce7f36d7343","modified":1505481702000},{"_id":"themes/navy/layout/partial/theme.swig","hash":"414bd84be19a8c19c0d901a4f2574c8298c4e111","modified":1505481702000},{"_id":"themes/navy/layout/partial/carbonads.swig","hash":"4e9b7df11a85191e8bc3861b140d385f290545de","modified":1505481702000},{"_id":"themes/navy/layout/partial/footer.swig","hash":"4f321ecd6bdff86300fec95507610fed0f0d5b17","modified":1505567369000},{"_id":"themes/navy/source/css/navy.styl","hash":"617912841fc8e2be88e2926845e96f4ad447876f","modified":1505481702000},{"_id":"themes/navy/source/css/_variables.styl","hash":"0c90e53c9ce8347f452c4ec6cb4ee9f71617ba3d","modified":1505534961000},{"_id":"themes/navy/source/js/mobile_nav.js","hash":"f4976aef22eb1e5e06b20c7735f7d3ef29b8956e","modified":1505481702000},{"_id":"themes/navy/source/js/lang_select.js","hash":"f3d61d478e8f7e6d9d661e5e83fdc4450a012e67","modified":1505481702000},{"_id":"themes/navy/source/js/toc.js","hash":"d95c8db8caddf36cada66acf03a2377d28e9c107","modified":1505481702000},{"_id":"themes/navy/source/js/plugins.js","hash":"451c8bdde08255c846e4437d778b2a63dfbfd961","modified":1505481702000},{"_id":"source/zh-cn/images/windows_step_1.png","hash":"fb54a902d83ac87e6e97983a6c4afc0f2d70a153","modified":1505481702000},{"_id":"themes/navy/source/css/_partial/archive.styl","hash":"f7ff7e9eb92f6786ccbf79bb4193a81ab8b49f8b","modified":1505481702000},{"_id":"themes/navy/source/css/_partial/base.styl","hash":"3e87e4c34ff9f902e23739954ddd26d4c331aa3e","modified":1505481702000},{"_id":"themes/navy/source/css/_partial/carbonads.styl","hash":"6c75f5ea02eed9917b3eb17bfc05da3a747ec4fa","modified":1505481702000},{"_id":"themes/navy/source/css/_partial/footer.styl","hash":"efc2cc87ff70ea6228818d2e92e81207856a9eb0","modified":1505564274000},{"_id":"themes/navy/source/css/_partial/header.styl","hash":"2ef809dbfdac1fc1793b4c7d95e792798b7efdf2","modified":1505539591000},{"_id":"themes/navy/source/css/_partial/index.styl","hash":"d92670e9fc80910e5eb227b67675fe9be4257c2f","modified":1505535350000},{"_id":"themes/navy/source/css/_partial/highlight.styl","hash":"049608a56302f5819d1606e65457cc06c274282b","modified":1505487288000},{"_id":"themes/navy/source/css/_partial/page.styl","hash":"3ae39a6e7840f8ae2ad7af5c73ec47cfef5693ed","modified":1505481702000},{"_id":"themes/navy/source/css/_partial/mobile_nav.styl","hash":"855ea0469cf53cce2baf4ce9bdcc83dc79caceba","modified":1505481702000},{"_id":"themes/navy/source/css/_partial/plugins.styl","hash":"f4e4141eb109e177b989d680aa81c5723d9e7b1a","modified":1505481702000},{"_id":"themes/navy/source/css/_partial/post.styl","hash":"037864b22a7775df5086f8977c51d86dd7053625","modified":1505481702000},{"_id":"themes/navy/source/css/_partial/sidebar.styl","hash":"3931a409c73be7777438e03728dffe1394495cbd","modified":1505483830000}],"Category":[],"Data":[{"_id":"footerlinks","data":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}}},{"_id":"nav","data":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}}},{"_id":"languages","data":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}}},{"_id":"sidebar","data":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}],"Page":[{"layout":"index","description":"hiproxy is a lightweight proxy tool for Front-End developers based on Node.js that supports an NGINX-like configuration.","subtitle":"A lightweight proxy tool for Front-End developers based on Node.js","comments":0,"_content":"ul#intro-feature-list\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-bolt\n      h3.intro-feature-title Lightweight and Extensible\n      p.intro-feature-desc\n        | hiproxy dependence on fewer libraries so you can install it quickly, developers can extend hiproxy to support with commands, instructions, and pages.\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-cog\n      h3.intro-feature-title Reuse Existing Development Habits\n      p.intro-feature-desc\n        | Using hosts and Nginx style configuration, reuse the development, configuration habits. It's easy to learn and use.\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-lock\n      h3.intro-feature-title HTTPS Certificate Automatically Generate and Manage\n      p.intro-feature-desc\n        | hiproxy can generate root certificate and automatically generate the domain certificate.\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-chrome\n      h3.intro-feature-title Highly Integrated With the Browser\n      p.intro-feature-desc\n        | hiproxy will open a new browser window and automatically configure the agent for you.\n","source":"index.jade","raw":"\nlayout: index\ndescription: hiproxy is a lightweight proxy tool for Front-End developers based on Node.js that supports an NGINX-like configuration.\nsubtitle: A lightweight proxy tool for Front-End developers based on Node.js\ncomments: false\n---\nul#intro-feature-list\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-bolt\n      h3.intro-feature-title Lightweight and Extensible\n      p.intro-feature-desc\n        | hiproxy dependence on fewer libraries so you can install it quickly, developers can extend hiproxy to support with commands, instructions, and pages.\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-cog\n      h3.intro-feature-title Reuse Existing Development Habits\n      p.intro-feature-desc\n        | Using hosts and Nginx style configuration, reuse the development, configuration habits. It's easy to learn and use.\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-lock\n      h3.intro-feature-title HTTPS Certificate Automatically Generate and Manage\n      p.intro-feature-desc\n        | hiproxy can generate root certificate and automatically generate the domain certificate.\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-chrome\n      h3.intro-feature-title Highly Integrated With the Browser\n      p.intro-feature-desc\n        | hiproxy will open a new browser window and automatically configure the agent for you.\n","date":"2017-09-16T04:25:46.000Z","updated":"2017-09-16T04:25:46.000Z","path":"index.html","title":"","_id":"cj7nia09r0000hy0f29m4l7la","content":"<ul id=\"intro-feature-list\"><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-bolt\"></i></div><h3 class=\"intro-feature-title\">Lightweight and Extensible</h3><p class=\"intro-feature-desc\">hiproxy dependence on fewer libraries so you can install it quickly, developers can extend hiproxy to support with commands, instructions, and pages.</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-cog\"></i></div><h3 class=\"intro-feature-title\">Reuse Existing Development Habits</h3><p class=\"intro-feature-desc\">Using hosts and Nginx style configuration, reuse the development, configuration habits. It's easy to learn and use.</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-lock\"></i></div><h3 class=\"intro-feature-title\">HTTPS Certificate Automatically Generate and Manage</h3><p class=\"intro-feature-desc\">hiproxy can generate root certificate and automatically generate the domain certificate.</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-chrome\"></i></div><h3 class=\"intro-feature-title\">Highly Integrated With the Browser</h3><p class=\"intro-feature-desc\">hiproxy will open a new browser window and automatically configure the agent for you.</p></div></li></ul>","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<ul id=\"intro-feature-list\"><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-bolt\"></i></div><h3 class=\"intro-feature-title\">Lightweight and Extensible</h3><p class=\"intro-feature-desc\">hiproxy dependence on fewer libraries so you can install it quickly, developers can extend hiproxy to support with commands, instructions, and pages.</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-cog\"></i></div><h3 class=\"intro-feature-title\">Reuse Existing Development Habits</h3><p class=\"intro-feature-desc\">Using hosts and Nginx style configuration, reuse the development, configuration habits. It's easy to learn and use.</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-lock\"></i></div><h3 class=\"intro-feature-title\">HTTPS Certificate Automatically Generate and Manage</h3><p class=\"intro-feature-desc\">hiproxy can generate root certificate and automatically generate the domain certificate.</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-chrome\"></i></div><h3 class=\"intro-feature-title\">Highly Integrated With the Browser</h3><p class=\"intro-feature-desc\">hiproxy will open a new browser window and automatically configure the agent for you.</p></div></li></ul>"},{"title":"Events","_content":"\n## ProxyServer ⇐ <code>EventEmitter</code>\n**Kind**: global class  \n**Extends**: <code>EventEmitter</code>  \n\n* [\"start\"](#ProxyServer+event_start)\n* [\"stop\"](#ProxyServer+event_stop)\n* [\"addHostsFile\"](#ProxyServer+event_addHostsFile)\n* [\"addRewriteFile\"](#ProxyServer+event_addRewriteFile)\n* [\"creatPacFile\"](#ProxyServer+event_creatPacFile)\n* [\"httpsRequest\"](#ProxyServer+event_httpsRequest)\n* [\"connect\"](#ProxyServer+event_connect)\n* [\"setResponse\"](#ProxyServer+event_setResponse)\n* [\"request\"](#ProxyServer+event_request)\n* [\"getProxyInfo\"](#ProxyServer+event_getProxyInfo)\n* [\"setRequest\"](#ProxyServer+event_setRequest)\n* [\"setResponse\"](#ProxyServer+event_setResponse)\n* [\"data\"](#ProxyServer+event_data)\n* [\"response\"](#ProxyServer+event_response)\n\n<a name=\"ProxyServer+event_start\"></a>\n\n### \"start\"\nEmitted when the hiproxy server(s) start.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| servers | <code>Array</code> | http/https server |\n| localIP | <code>String</code> | the local ip address |\n\n<a name=\"ProxyServer+event_stop\"></a>\n\n### \"stop\"\nEmitted when the hiproxy server(s) stop.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n<a name=\"ProxyServer+event_addHostsFile\"></a>\n\n### \"addHostsFile\"\nEmitted when add hosts file.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| filePath | <code>Array</code> \\| <code>String</code> | rewrite file path(s) |\n\n<a name=\"ProxyServer+event_addRewriteFile\"></a>\n\n### \"addRewriteFile\"\nEmitted when add rewrite file.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| filePath | <code>Array</code> \\| <code>String</code> | rewrite file path(s) |\n\n<a name=\"ProxyServer+event_creatPacFile\"></a>\n\n### \"creatPacFile\"\nEmitter when the `pac` proxy file is created or updated.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| domains | <code>Object</code> | domain list |\n\n<a name=\"ProxyServer+event_httpsRequest\"></a>\n\n### \"httpsRequest\"\nEmitted each time there is a request to the https server.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| request | <code>http.IncomingMessage</code> | request object |\n| response | <code>http.ServerResponse</code> | response object |\n\n<a name=\"ProxyServer+event_connect\"></a>\n\n### \"connect\"\nEmitted each time the server responds to a request with a `CONNECT` method.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| request | <code>http.IncomingMessage</code> | request object |\n| socket | <code>net.Socket</code> | socket object |\n| head | <code>Buffer</code> | head |\n\n<a name=\"ProxyServer+event_setResponse\"></a>\n\n### \"setResponse\"\nEmitted each time the server set response info (eg: headers).\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| response | <code>http.ServerResponse</code> | request object |\n\n<a name=\"ProxyServer+event_request\"></a>\n\n### \"request\"\nEmitted each time there is a request.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| request | <code>http.IncomingMessage</code> | request object |\n| response | <code>http.ServerResponse</code> | response object |\n\n<a name=\"ProxyServer+event_getProxyInfo\"></a>\n\n### \"getProxyInfo\"\nEmitted each time the hiproxy server get proxy info for current request.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| proxyInfo | <code>Object</code> | proxy info object |\n\n<a name=\"ProxyServer+event_setRequest\"></a>\n\n### \"setRequest\"\nEmitted each time the hiproxy server set request options (eg: headers and host) before request data from remote server\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| request | <code>http.IncomingMessage</code> | request |\n| proxyOptions | <code>Object</code> | the proxy header options |\n\n<a name=\"ProxyServer+event_setResponse\"></a>\n\n### \"setResponse\"\nEmitted each time the server set response info (eg: headers).\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| response | <code>http.ServerResponse</code> | request object |\n\n<a name=\"ProxyServer+event_data\"></a>\n\n### \"data\"\nEmitted whenever the response stream received some chunk of data.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| data | <code>Buffer</code> | response data |\n\n<a name=\"ProxyServer+event_data\"></a>\n\n### \"response\"\nEmitted when a response is end. This event is emitted only once.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| response | <code>http.ServerResponse</code> | response object |","source":"api/events.md","raw":"title: Events\n---\n\n## ProxyServer ⇐ <code>EventEmitter</code>\n**Kind**: global class  \n**Extends**: <code>EventEmitter</code>  \n\n* [\"start\"](#ProxyServer+event_start)\n* [\"stop\"](#ProxyServer+event_stop)\n* [\"addHostsFile\"](#ProxyServer+event_addHostsFile)\n* [\"addRewriteFile\"](#ProxyServer+event_addRewriteFile)\n* [\"creatPacFile\"](#ProxyServer+event_creatPacFile)\n* [\"httpsRequest\"](#ProxyServer+event_httpsRequest)\n* [\"connect\"](#ProxyServer+event_connect)\n* [\"setResponse\"](#ProxyServer+event_setResponse)\n* [\"request\"](#ProxyServer+event_request)\n* [\"getProxyInfo\"](#ProxyServer+event_getProxyInfo)\n* [\"setRequest\"](#ProxyServer+event_setRequest)\n* [\"setResponse\"](#ProxyServer+event_setResponse)\n* [\"data\"](#ProxyServer+event_data)\n* [\"response\"](#ProxyServer+event_response)\n\n<a name=\"ProxyServer+event_start\"></a>\n\n### \"start\"\nEmitted when the hiproxy server(s) start.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| servers | <code>Array</code> | http/https server |\n| localIP | <code>String</code> | the local ip address |\n\n<a name=\"ProxyServer+event_stop\"></a>\n\n### \"stop\"\nEmitted when the hiproxy server(s) stop.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n<a name=\"ProxyServer+event_addHostsFile\"></a>\n\n### \"addHostsFile\"\nEmitted when add hosts file.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| filePath | <code>Array</code> \\| <code>String</code> | rewrite file path(s) |\n\n<a name=\"ProxyServer+event_addRewriteFile\"></a>\n\n### \"addRewriteFile\"\nEmitted when add rewrite file.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| filePath | <code>Array</code> \\| <code>String</code> | rewrite file path(s) |\n\n<a name=\"ProxyServer+event_creatPacFile\"></a>\n\n### \"creatPacFile\"\nEmitter when the `pac` proxy file is created or updated.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| domains | <code>Object</code> | domain list |\n\n<a name=\"ProxyServer+event_httpsRequest\"></a>\n\n### \"httpsRequest\"\nEmitted each time there is a request to the https server.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| request | <code>http.IncomingMessage</code> | request object |\n| response | <code>http.ServerResponse</code> | response object |\n\n<a name=\"ProxyServer+event_connect\"></a>\n\n### \"connect\"\nEmitted each time the server responds to a request with a `CONNECT` method.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| request | <code>http.IncomingMessage</code> | request object |\n| socket | <code>net.Socket</code> | socket object |\n| head | <code>Buffer</code> | head |\n\n<a name=\"ProxyServer+event_setResponse\"></a>\n\n### \"setResponse\"\nEmitted each time the server set response info (eg: headers).\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| response | <code>http.ServerResponse</code> | request object |\n\n<a name=\"ProxyServer+event_request\"></a>\n\n### \"request\"\nEmitted each time there is a request.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| request | <code>http.IncomingMessage</code> | request object |\n| response | <code>http.ServerResponse</code> | response object |\n\n<a name=\"ProxyServer+event_getProxyInfo\"></a>\n\n### \"getProxyInfo\"\nEmitted each time the hiproxy server get proxy info for current request.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| proxyInfo | <code>Object</code> | proxy info object |\n\n<a name=\"ProxyServer+event_setRequest\"></a>\n\n### \"setRequest\"\nEmitted each time the hiproxy server set request options (eg: headers and host) before request data from remote server\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| request | <code>http.IncomingMessage</code> | request |\n| proxyOptions | <code>Object</code> | the proxy header options |\n\n<a name=\"ProxyServer+event_setResponse\"></a>\n\n### \"setResponse\"\nEmitted each time the server set response info (eg: headers).\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| response | <code>http.ServerResponse</code> | request object |\n\n<a name=\"ProxyServer+event_data\"></a>\n\n### \"data\"\nEmitted whenever the response stream received some chunk of data.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| data | <code>Buffer</code> | response data |\n\n<a name=\"ProxyServer+event_data\"></a>\n\n### \"response\"\nEmitted when a response is end. This event is emitted only once.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| response | <code>http.ServerResponse</code> | response object |","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"api/events.html","comments":1,"layout":"page","_id":"cj7nia0dg0002hy0fn2k7r85g","content":"<h2 id=\"ProxyServer-⇐-EventEmitter\"><a href=\"#ProxyServer-⇐-EventEmitter\" class=\"headerlink\" title=\"ProxyServer ⇐ EventEmitter\"></a>ProxyServer ⇐ <code>EventEmitter</code></h2><p><strong>Kind</strong>: global class<br><strong>Extends</strong>: <code>EventEmitter</code>  </p>\n<ul>\n<li><a href=\"#ProxyServer+event_start\">“start”</a></li>\n<li><a href=\"#ProxyServer+event_stop\">“stop”</a></li>\n<li><a href=\"#ProxyServer+event_addHostsFile\">“addHostsFile”</a></li>\n<li><a href=\"#ProxyServer+event_addRewriteFile\">“addRewriteFile”</a></li>\n<li><a href=\"#ProxyServer+event_creatPacFile\">“creatPacFile”</a></li>\n<li><a href=\"#ProxyServer+event_httpsRequest\">“httpsRequest”</a></li>\n<li><a href=\"#ProxyServer+event_connect\">“connect”</a></li>\n<li><a href=\"#ProxyServer+event_setResponse\">“setResponse”</a></li>\n<li><a href=\"#ProxyServer+event_request\">“request”</a></li>\n<li><a href=\"#ProxyServer+event_getProxyInfo\">“getProxyInfo”</a></li>\n<li><a href=\"#ProxyServer+event_setRequest\">“setRequest”</a></li>\n<li><a href=\"#ProxyServer+event_setResponse\">“setResponse”</a></li>\n<li><a href=\"#ProxyServer+event_data\">“data”</a></li>\n<li><a href=\"#ProxyServer+event_response\">“response”</a></li>\n</ul>\n<p><a name=\"ProxyServer+event_start\"></a></p>\n<h3 id=\"“start”\"><a href=\"#“start”\" class=\"headerlink\" title=\"“start”\"></a>“start”</h3><p>Emitted when the hiproxy server(s) start.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>servers</td>\n<td><code>Array</code></td>\n<td>http/https server</td>\n</tr>\n<tr>\n<td>localIP</td>\n<td><code>String</code></td>\n<td>the local ip address</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_stop\"></a></p>\n<h3 id=\"“stop”\"><a href=\"#“stop”\" class=\"headerlink\" title=\"“stop”\"></a>“stop”</h3><p>Emitted when the hiproxy server(s) stop.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><a name=\"ProxyServer+event_addHostsFile\"></a></p>\n<h3 id=\"“addHostsFile”\"><a href=\"#“addHostsFile”\" class=\"headerlink\" title=\"“addHostsFile”\"></a>“addHostsFile”</h3><p>Emitted when add hosts file.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>filePath</td>\n<td><code>Array</code> \\</td>\n<td><code>String</code></td>\n<td>rewrite file path(s)</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_addRewriteFile\"></a></p>\n<h3 id=\"“addRewriteFile”\"><a href=\"#“addRewriteFile”\" class=\"headerlink\" title=\"“addRewriteFile”\"></a>“addRewriteFile”</h3><p>Emitted when add rewrite file.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>filePath</td>\n<td><code>Array</code> \\</td>\n<td><code>String</code></td>\n<td>rewrite file path(s)</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_creatPacFile\"></a></p>\n<h3 id=\"“creatPacFile”\"><a href=\"#“creatPacFile”\" class=\"headerlink\" title=\"“creatPacFile”\"></a>“creatPacFile”</h3><p>Emitter when the <code>pac</code> proxy file is created or updated.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>domains</td>\n<td><code>Object</code></td>\n<td>domain list</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_httpsRequest\"></a></p>\n<h3 id=\"“httpsRequest”\"><a href=\"#“httpsRequest”\" class=\"headerlink\" title=\"“httpsRequest”\"></a>“httpsRequest”</h3><p>Emitted each time there is a request to the https server.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>request</td>\n<td><code>http.IncomingMessage</code></td>\n<td>request object</td>\n</tr>\n<tr>\n<td>response</td>\n<td><code>http.ServerResponse</code></td>\n<td>response object</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_connect\"></a></p>\n<h3 id=\"“connect”\"><a href=\"#“connect”\" class=\"headerlink\" title=\"“connect”\"></a>“connect”</h3><p>Emitted each time the server responds to a request with a <code>CONNECT</code> method.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>request</td>\n<td><code>http.IncomingMessage</code></td>\n<td>request object</td>\n</tr>\n<tr>\n<td>socket</td>\n<td><code>net.Socket</code></td>\n<td>socket object</td>\n</tr>\n<tr>\n<td>head</td>\n<td><code>Buffer</code></td>\n<td>head</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_setResponse\"></a></p>\n<h3 id=\"“setResponse”\"><a href=\"#“setResponse”\" class=\"headerlink\" title=\"“setResponse”\"></a>“setResponse”</h3><p>Emitted each time the server set response info (eg: headers).</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>response</td>\n<td><code>http.ServerResponse</code></td>\n<td>request object</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_request\"></a></p>\n<h3 id=\"“request”\"><a href=\"#“request”\" class=\"headerlink\" title=\"“request”\"></a>“request”</h3><p>Emitted each time there is a request.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>request</td>\n<td><code>http.IncomingMessage</code></td>\n<td>request object</td>\n</tr>\n<tr>\n<td>response</td>\n<td><code>http.ServerResponse</code></td>\n<td>response object</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_getProxyInfo\"></a></p>\n<h3 id=\"“getProxyInfo”\"><a href=\"#“getProxyInfo”\" class=\"headerlink\" title=\"“getProxyInfo”\"></a>“getProxyInfo”</h3><p>Emitted each time the hiproxy server get proxy info for current request.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>proxyInfo</td>\n<td><code>Object</code></td>\n<td>proxy info object</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_setRequest\"></a></p>\n<h3 id=\"“setRequest”\"><a href=\"#“setRequest”\" class=\"headerlink\" title=\"“setRequest”\"></a>“setRequest”</h3><p>Emitted each time the hiproxy server set request options (eg: headers and host) before request data from remote server</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>request</td>\n<td><code>http.IncomingMessage</code></td>\n<td>request</td>\n</tr>\n<tr>\n<td>proxyOptions</td>\n<td><code>Object</code></td>\n<td>the proxy header options</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_setResponse\"></a></p>\n<h3 id=\"“setResponse”-1\"><a href=\"#“setResponse”-1\" class=\"headerlink\" title=\"“setResponse”\"></a>“setResponse”</h3><p>Emitted each time the server set response info (eg: headers).</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>response</td>\n<td><code>http.ServerResponse</code></td>\n<td>request object</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_data\"></a></p>\n<h3 id=\"“data”\"><a href=\"#“data”\" class=\"headerlink\" title=\"“data”\"></a>“data”</h3><p>Emitted whenever the response stream received some chunk of data.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td><code>Buffer</code></td>\n<td>response data</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_data\"></a></p>\n<h3 id=\"“response”\"><a href=\"#“response”\" class=\"headerlink\" title=\"“response”\"></a>“response”</h3><p>Emitted when a response is end. This event is emitted only once.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>response</td>\n<td><code>http.ServerResponse</code></td>\n<td>response object</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<h2 id=\"ProxyServer-⇐-EventEmitter\"><a href=\"#ProxyServer-⇐-EventEmitter\" class=\"headerlink\" title=\"ProxyServer ⇐ EventEmitter\"></a>ProxyServer ⇐ <code>EventEmitter</code></h2><p><strong>Kind</strong>: global class<br><strong>Extends</strong>: <code>EventEmitter</code>  </p>\n<ul>\n<li><a href=\"#ProxyServer+event_start\">“start”</a></li>\n<li><a href=\"#ProxyServer+event_stop\">“stop”</a></li>\n<li><a href=\"#ProxyServer+event_addHostsFile\">“addHostsFile”</a></li>\n<li><a href=\"#ProxyServer+event_addRewriteFile\">“addRewriteFile”</a></li>\n<li><a href=\"#ProxyServer+event_creatPacFile\">“creatPacFile”</a></li>\n<li><a href=\"#ProxyServer+event_httpsRequest\">“httpsRequest”</a></li>\n<li><a href=\"#ProxyServer+event_connect\">“connect”</a></li>\n<li><a href=\"#ProxyServer+event_setResponse\">“setResponse”</a></li>\n<li><a href=\"#ProxyServer+event_request\">“request”</a></li>\n<li><a href=\"#ProxyServer+event_getProxyInfo\">“getProxyInfo”</a></li>\n<li><a href=\"#ProxyServer+event_setRequest\">“setRequest”</a></li>\n<li><a href=\"#ProxyServer+event_setResponse\">“setResponse”</a></li>\n<li><a href=\"#ProxyServer+event_data\">“data”</a></li>\n<li><a href=\"#ProxyServer+event_response\">“response”</a></li>\n</ul>\n<p><a name=\"ProxyServer+event_start\"></a></p>\n<h3 id=\"“start”\"><a href=\"#“start”\" class=\"headerlink\" title=\"“start”\"></a>“start”</h3><p>Emitted when the hiproxy server(s) start.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>servers</td>\n<td><code>Array</code></td>\n<td>http/https server</td>\n</tr>\n<tr>\n<td>localIP</td>\n<td><code>String</code></td>\n<td>the local ip address</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_stop\"></a></p>\n<h3 id=\"“stop”\"><a href=\"#“stop”\" class=\"headerlink\" title=\"“stop”\"></a>“stop”</h3><p>Emitted when the hiproxy server(s) stop.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><a name=\"ProxyServer+event_addHostsFile\"></a></p>\n<h3 id=\"“addHostsFile”\"><a href=\"#“addHostsFile”\" class=\"headerlink\" title=\"“addHostsFile”\"></a>“addHostsFile”</h3><p>Emitted when add hosts file.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>filePath</td>\n<td><code>Array</code> \\</td>\n<td><code>String</code></td>\n<td>rewrite file path(s)</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_addRewriteFile\"></a></p>\n<h3 id=\"“addRewriteFile”\"><a href=\"#“addRewriteFile”\" class=\"headerlink\" title=\"“addRewriteFile”\"></a>“addRewriteFile”</h3><p>Emitted when add rewrite file.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>filePath</td>\n<td><code>Array</code> \\</td>\n<td><code>String</code></td>\n<td>rewrite file path(s)</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_creatPacFile\"></a></p>\n<h3 id=\"“creatPacFile”\"><a href=\"#“creatPacFile”\" class=\"headerlink\" title=\"“creatPacFile”\"></a>“creatPacFile”</h3><p>Emitter when the <code>pac</code> proxy file is created or updated.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>domains</td>\n<td><code>Object</code></td>\n<td>domain list</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_httpsRequest\"></a></p>\n<h3 id=\"“httpsRequest”\"><a href=\"#“httpsRequest”\" class=\"headerlink\" title=\"“httpsRequest”\"></a>“httpsRequest”</h3><p>Emitted each time there is a request to the https server.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>request</td>\n<td><code>http.IncomingMessage</code></td>\n<td>request object</td>\n</tr>\n<tr>\n<td>response</td>\n<td><code>http.ServerResponse</code></td>\n<td>response object</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_connect\"></a></p>\n<h3 id=\"“connect”\"><a href=\"#“connect”\" class=\"headerlink\" title=\"“connect”\"></a>“connect”</h3><p>Emitted each time the server responds to a request with a <code>CONNECT</code> method.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>request</td>\n<td><code>http.IncomingMessage</code></td>\n<td>request object</td>\n</tr>\n<tr>\n<td>socket</td>\n<td><code>net.Socket</code></td>\n<td>socket object</td>\n</tr>\n<tr>\n<td>head</td>\n<td><code>Buffer</code></td>\n<td>head</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_setResponse\"></a></p>\n<h3 id=\"“setResponse”\"><a href=\"#“setResponse”\" class=\"headerlink\" title=\"“setResponse”\"></a>“setResponse”</h3><p>Emitted each time the server set response info (eg: headers).</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>response</td>\n<td><code>http.ServerResponse</code></td>\n<td>request object</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_request\"></a></p>\n<h3 id=\"“request”\"><a href=\"#“request”\" class=\"headerlink\" title=\"“request”\"></a>“request”</h3><p>Emitted each time there is a request.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>request</td>\n<td><code>http.IncomingMessage</code></td>\n<td>request object</td>\n</tr>\n<tr>\n<td>response</td>\n<td><code>http.ServerResponse</code></td>\n<td>response object</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_getProxyInfo\"></a></p>\n<h3 id=\"“getProxyInfo”\"><a href=\"#“getProxyInfo”\" class=\"headerlink\" title=\"“getProxyInfo”\"></a>“getProxyInfo”</h3><p>Emitted each time the hiproxy server get proxy info for current request.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>proxyInfo</td>\n<td><code>Object</code></td>\n<td>proxy info object</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_setRequest\"></a></p>\n<h3 id=\"“setRequest”\"><a href=\"#“setRequest”\" class=\"headerlink\" title=\"“setRequest”\"></a>“setRequest”</h3><p>Emitted each time the hiproxy server set request options (eg: headers and host) before request data from remote server</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>request</td>\n<td><code>http.IncomingMessage</code></td>\n<td>request</td>\n</tr>\n<tr>\n<td>proxyOptions</td>\n<td><code>Object</code></td>\n<td>the proxy header options</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_setResponse\"></a></p>\n<h3 id=\"“setResponse”-1\"><a href=\"#“setResponse”-1\" class=\"headerlink\" title=\"“setResponse”\"></a>“setResponse”</h3><p>Emitted each time the server set response info (eg: headers).</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>response</td>\n<td><code>http.ServerResponse</code></td>\n<td>request object</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_data\"></a></p>\n<h3 id=\"“data”\"><a href=\"#“data”\" class=\"headerlink\" title=\"“data”\"></a>“data”</h3><p>Emitted whenever the response stream received some chunk of data.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td><code>Buffer</code></td>\n<td>response data</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_data\"></a></p>\n<h3 id=\"“response”\"><a href=\"#“response”\" class=\"headerlink\" title=\"“response”\"></a>“response”</h3><p>Emitted when a response is end. This event is emitted only once.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>response</td>\n<td><code>http.ServerResponse</code></td>\n<td>response object</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"Node.js API","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n> \n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n<a name=\"ProxyServer\"></a>\n\n## ProxyServer ⇐ <code>EventEmitter</code>\n**Kind**: global class  \n**Extends**: <code>EventEmitter</code>  \n\n* [ProxyServer](#ProxyServer) ⇐ <code>EventEmitter</code>\n    * [new ProxyServer(httpPort, httpsPort)](#new_ProxyServer_new)\n    * [.start(httpPort, httpsPort)](#ProxyServer+start) ⇒ <code>Promise</code>\n    * [.stop()](#ProxyServer+stop) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n    * [.restart()](#ProxyServer+restart) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n    * [.addHostsFile(filePath)](#ProxyServer+addHostsFile) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n    * [.addRewriteFile(filePath)](#ProxyServer+addRewriteFile) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n    * [.openBrowser(browserName, url, [usePacProxy])](#ProxyServer+openBrowser) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n    * [.findConfigFiels([dir])](#ProxyServer+findConfigFiels) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n\n<a name=\"new_ProxyServer_new\"></a>\n\n### new ProxyServer(httpPort, httpsPort)\nhiproxy代理服务器\n\n\n| Param | Type | Description |\n| --- | --- | --- |\n| httpPort | <code>Number</code> | http代理服务端口号 |\n| httpsPort | <code>Number</code> | https代理服务器端口号 |\n\n<a name=\"ProxyServer+start\"></a>\n\n### proxyServer.start([config]) ⇒ <code>Promise</code>\n启动代理服务\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| config | <code>Object</code> | 配置字段 |\n\n<a name=\"ProxyServer+stop\"></a>\n\n### proxyServer.stop() ⇒ [<code>ProxyServer</code>](#ProxyServer)\n停止代理服务\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n<a name=\"ProxyServer+restart\"></a>\n\n### proxyServer.restart() ⇒ [<code>ProxyServer</code>](#ProxyServer)\n重启代理服务\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n<a name=\"ProxyServer+addHostsFile\"></a>\n\n### proxyServer.addHostsFile(filePath) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n添加Hosts文件\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| filePath | <code>String</code> \\| <code>Array</code> | `hosts`文件路径（绝对路径） |\n\n<a name=\"ProxyServer+addRewriteFile\"></a>\n\n### proxyServer.addRewriteFile(filePath) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n添加rewrite文件\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| filePath | <code>String</code> \\| <code>Array</code> | `rewrite`文件路径（绝对路径） |\n\n<a name=\"ProxyServer+openBrowser\"></a>\n\n### proxyServer.openBrowser(browserName, url, [usePacProxy]) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n打开浏览器窗口\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| browserName | <code>String</code> |  | 浏览器名称 |\n| url | <code>String</code> |  | 要打开的url |\n| [usePacProxy] | <code>Boolean</code> | <code>false</code> | 是否使用自动代理 |\n\n<a name=\"ProxyServer+findConfigFiels\"></a>\n\n### proxyServer.findConfigFiles([dir]) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n在指定工作空间（目录）下查找配置文件\nhiproxy会在指定的空间下所有一级目录下查找配置文件\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| [dir] | <code>String</code> | <code>process.cwd()</code> | 工作空间（目录） |\n\n\n### proxyServer.enableConfFile(confFileType, filePath) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n启用指定配置文件\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| confFileType | <code>String</code> |  | 文件类型(host/rewrite) |\n| filePath | <code>String</code> \\| <code>Array</code> |  | 修改的文件路径 |\n\n### proxyServer.disableConfFile(confFileType, filePath) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n禁用指定配置文件\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| confFileType | <code>String</code> |  | 文件类型(host/rewrite) |\n| filePath | <code>String</code> \\| <code>Array</code> |  | 修改的文件路径 |\n","source":"api/index.md","raw":"title: Node.js API\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n> \n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n<a name=\"ProxyServer\"></a>\n\n## ProxyServer ⇐ <code>EventEmitter</code>\n**Kind**: global class  \n**Extends**: <code>EventEmitter</code>  \n\n* [ProxyServer](#ProxyServer) ⇐ <code>EventEmitter</code>\n    * [new ProxyServer(httpPort, httpsPort)](#new_ProxyServer_new)\n    * [.start(httpPort, httpsPort)](#ProxyServer+start) ⇒ <code>Promise</code>\n    * [.stop()](#ProxyServer+stop) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n    * [.restart()](#ProxyServer+restart) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n    * [.addHostsFile(filePath)](#ProxyServer+addHostsFile) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n    * [.addRewriteFile(filePath)](#ProxyServer+addRewriteFile) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n    * [.openBrowser(browserName, url, [usePacProxy])](#ProxyServer+openBrowser) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n    * [.findConfigFiels([dir])](#ProxyServer+findConfigFiels) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n\n<a name=\"new_ProxyServer_new\"></a>\n\n### new ProxyServer(httpPort, httpsPort)\nhiproxy代理服务器\n\n\n| Param | Type | Description |\n| --- | --- | --- |\n| httpPort | <code>Number</code> | http代理服务端口号 |\n| httpsPort | <code>Number</code> | https代理服务器端口号 |\n\n<a name=\"ProxyServer+start\"></a>\n\n### proxyServer.start([config]) ⇒ <code>Promise</code>\n启动代理服务\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| config | <code>Object</code> | 配置字段 |\n\n<a name=\"ProxyServer+stop\"></a>\n\n### proxyServer.stop() ⇒ [<code>ProxyServer</code>](#ProxyServer)\n停止代理服务\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n<a name=\"ProxyServer+restart\"></a>\n\n### proxyServer.restart() ⇒ [<code>ProxyServer</code>](#ProxyServer)\n重启代理服务\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n<a name=\"ProxyServer+addHostsFile\"></a>\n\n### proxyServer.addHostsFile(filePath) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n添加Hosts文件\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| filePath | <code>String</code> \\| <code>Array</code> | `hosts`文件路径（绝对路径） |\n\n<a name=\"ProxyServer+addRewriteFile\"></a>\n\n### proxyServer.addRewriteFile(filePath) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n添加rewrite文件\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| filePath | <code>String</code> \\| <code>Array</code> | `rewrite`文件路径（绝对路径） |\n\n<a name=\"ProxyServer+openBrowser\"></a>\n\n### proxyServer.openBrowser(browserName, url, [usePacProxy]) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n打开浏览器窗口\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| browserName | <code>String</code> |  | 浏览器名称 |\n| url | <code>String</code> |  | 要打开的url |\n| [usePacProxy] | <code>Boolean</code> | <code>false</code> | 是否使用自动代理 |\n\n<a name=\"ProxyServer+findConfigFiels\"></a>\n\n### proxyServer.findConfigFiles([dir]) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n在指定工作空间（目录）下查找配置文件\nhiproxy会在指定的空间下所有一级目录下查找配置文件\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| [dir] | <code>String</code> | <code>process.cwd()</code> | 工作空间（目录） |\n\n\n### proxyServer.enableConfFile(confFileType, filePath) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n启用指定配置文件\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| confFileType | <code>String</code> |  | 文件类型(host/rewrite) |\n| filePath | <code>String</code> \\| <code>Array</code> |  | 修改的文件路径 |\n\n### proxyServer.disableConfFile(confFileType, filePath) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n禁用指定配置文件\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| confFileType | <code>String</code> |  | 文件类型(host/rewrite) |\n| filePath | <code>String</code> \\| <code>Array</code> |  | 修改的文件路径 |\n","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"api/index.html","comments":1,"layout":"page","_id":"cj7nia0dw0003hy0f1yg4jr3z","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<p><a name=\"ProxyServer\"></a></p>\n<h2 id=\"ProxyServer-⇐-EventEmitter\"><a href=\"#ProxyServer-⇐-EventEmitter\" class=\"headerlink\" title=\"ProxyServer ⇐ EventEmitter\"></a>ProxyServer ⇐ <code>EventEmitter</code></h2><p><strong>Kind</strong>: global class<br><strong>Extends</strong>: <code>EventEmitter</code>  </p>\n<ul>\n<li><a href=\"#ProxyServer\">ProxyServer</a> ⇐ <code>EventEmitter</code><ul>\n<li><a href=\"#new_ProxyServer_new\">new ProxyServer(httpPort, httpsPort)</a></li>\n<li><a href=\"#ProxyServer+start\">.start(httpPort, httpsPort)</a> ⇒ <code>Promise</code></li>\n<li><a href=\"#ProxyServer+stop\">.stop()</a> ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></li>\n<li><a href=\"#ProxyServer+restart\">.restart()</a> ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></li>\n<li><a href=\"#ProxyServer+addHostsFile\">.addHostsFile(filePath)</a> ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></li>\n<li><a href=\"#ProxyServer+addRewriteFile\">.addRewriteFile(filePath)</a> ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></li>\n<li><a href=\"#ProxyServer+openBrowser\">.openBrowser(browserName, url, [usePacProxy])</a> ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></li>\n<li><a href=\"#ProxyServer+findConfigFiels\">.findConfigFiels([dir])</a> ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></li>\n</ul>\n</li>\n</ul>\n<p><a name=\"new_ProxyServer_new\"></a></p>\n<h3 id=\"new-ProxyServer-httpPort-httpsPort\"><a href=\"#new-ProxyServer-httpPort-httpsPort\" class=\"headerlink\" title=\"new ProxyServer(httpPort, httpsPort)\"></a>new ProxyServer(httpPort, httpsPort)</h3><p>hiproxy代理服务器</p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>httpPort</td>\n<td><code>Number</code></td>\n<td>http代理服务端口号</td>\n</tr>\n<tr>\n<td>httpsPort</td>\n<td><code>Number</code></td>\n<td>https代理服务器端口号</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+start\"></a></p>\n<h3 id=\"proxyServer-start-config-⇒-Promise\"><a href=\"#proxyServer-start-config-⇒-Promise\" class=\"headerlink\" title=\"proxyServer.start([config]) ⇒ Promise\"></a>proxyServer.start([config]) ⇒ <code>Promise</code></h3><p>启动代理服务</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>config</td>\n<td><code>Object</code></td>\n<td>配置字段</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+stop\"></a></p>\n<h3 id=\"proxyServer-stop-⇒-ProxyServer\"><a href=\"#proxyServer-stop-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.stop() ⇒ ProxyServer\"></a>proxyServer.stop() ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>停止代理服务</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public<br><a name=\"ProxyServer+restart\"></a></p>\n<h3 id=\"proxyServer-restart-⇒-ProxyServer\"><a href=\"#proxyServer-restart-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.restart() ⇒ ProxyServer\"></a>proxyServer.restart() ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>重启代理服务</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public<br><a name=\"ProxyServer+addHostsFile\"></a></p>\n<h3 id=\"proxyServer-addHostsFile-filePath-⇒-ProxyServer\"><a href=\"#proxyServer-addHostsFile-filePath-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.addHostsFile(filePath) ⇒ ProxyServer\"></a>proxyServer.addHostsFile(filePath) ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>添加Hosts文件</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>filePath</td>\n<td><code>String</code> \\</td>\n<td><code>Array</code></td>\n<td><code>hosts</code>文件路径（绝对路径）</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+addRewriteFile\"></a></p>\n<h3 id=\"proxyServer-addRewriteFile-filePath-⇒-ProxyServer\"><a href=\"#proxyServer-addRewriteFile-filePath-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.addRewriteFile(filePath) ⇒ ProxyServer\"></a>proxyServer.addRewriteFile(filePath) ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>添加rewrite文件</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>filePath</td>\n<td><code>String</code> \\</td>\n<td><code>Array</code></td>\n<td><code>rewrite</code>文件路径（绝对路径）</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+openBrowser\"></a></p>\n<h3 id=\"proxyServer-openBrowser-browserName-url-usePacProxy-⇒-ProxyServer\"><a href=\"#proxyServer-openBrowser-browserName-url-usePacProxy-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.openBrowser(browserName, url, [usePacProxy]) ⇒ ProxyServer\"></a>proxyServer.openBrowser(browserName, url, [usePacProxy]) ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>打开浏览器窗口</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>browserName</td>\n<td><code>String</code></td>\n<td></td>\n<td>浏览器名称</td>\n</tr>\n<tr>\n<td>url</td>\n<td><code>String</code></td>\n<td></td>\n<td>要打开的url</td>\n</tr>\n<tr>\n<td>[usePacProxy]</td>\n<td><code>Boolean</code></td>\n<td><code>false</code></td>\n<td>是否使用自动代理</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+findConfigFiels\"></a></p>\n<h3 id=\"proxyServer-findConfigFiles-dir-⇒-ProxyServer\"><a href=\"#proxyServer-findConfigFiles-dir-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.findConfigFiles([dir]) ⇒ ProxyServer\"></a>proxyServer.findConfigFiles([dir]) ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>在指定工作空间（目录）下查找配置文件<br>hiproxy会在指定的空间下所有一级目录下查找配置文件</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[dir]</td>\n<td><code>String</code></td>\n<td><code>process.cwd()</code></td>\n<td>工作空间（目录）</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"proxyServer-enableConfFile-confFileType-filePath-⇒-ProxyServer\"><a href=\"#proxyServer-enableConfFile-confFileType-filePath-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.enableConfFile(confFileType, filePath) ⇒ ProxyServer\"></a>proxyServer.enableConfFile(confFileType, filePath) ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>启用指定配置文件</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>confFileType</td>\n<td><code>String</code></td>\n<td></td>\n<td>文件类型(host/rewrite)</td>\n</tr>\n<tr>\n<td>filePath</td>\n<td><code>String</code> \\</td>\n<td><code>Array</code></td>\n<td></td>\n<td>修改的文件路径</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"proxyServer-disableConfFile-confFileType-filePath-⇒-ProxyServer\"><a href=\"#proxyServer-disableConfFile-confFileType-filePath-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.disableConfFile(confFileType, filePath) ⇒ ProxyServer\"></a>proxyServer.disableConfFile(confFileType, filePath) ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>禁用指定配置文件</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>confFileType</td>\n<td><code>String</code></td>\n<td></td>\n<td>文件类型(host/rewrite)</td>\n</tr>\n<tr>\n<td>filePath</td>\n<td><code>String</code> \\</td>\n<td><code>Array</code></td>\n<td></td>\n<td>修改的文件路径</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<p><a name=\"ProxyServer\"></a></p>\n<h2 id=\"ProxyServer-⇐-EventEmitter\"><a href=\"#ProxyServer-⇐-EventEmitter\" class=\"headerlink\" title=\"ProxyServer ⇐ EventEmitter\"></a>ProxyServer ⇐ <code>EventEmitter</code></h2><p><strong>Kind</strong>: global class<br><strong>Extends</strong>: <code>EventEmitter</code>  </p>\n<ul>\n<li><a href=\"#ProxyServer\">ProxyServer</a> ⇐ <code>EventEmitter</code><ul>\n<li><a href=\"#new_ProxyServer_new\">new ProxyServer(httpPort, httpsPort)</a></li>\n<li><a href=\"#ProxyServer+start\">.start(httpPort, httpsPort)</a> ⇒ <code>Promise</code></li>\n<li><a href=\"#ProxyServer+stop\">.stop()</a> ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></li>\n<li><a href=\"#ProxyServer+restart\">.restart()</a> ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></li>\n<li><a href=\"#ProxyServer+addHostsFile\">.addHostsFile(filePath)</a> ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></li>\n<li><a href=\"#ProxyServer+addRewriteFile\">.addRewriteFile(filePath)</a> ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></li>\n<li><a href=\"#ProxyServer+openBrowser\">.openBrowser(browserName, url, [usePacProxy])</a> ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></li>\n<li><a href=\"#ProxyServer+findConfigFiels\">.findConfigFiels([dir])</a> ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></li>\n</ul>\n</li>\n</ul>\n<p><a name=\"new_ProxyServer_new\"></a></p>\n<h3 id=\"new-ProxyServer-httpPort-httpsPort\"><a href=\"#new-ProxyServer-httpPort-httpsPort\" class=\"headerlink\" title=\"new ProxyServer(httpPort, httpsPort)\"></a>new ProxyServer(httpPort, httpsPort)</h3><p>hiproxy代理服务器</p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>httpPort</td>\n<td><code>Number</code></td>\n<td>http代理服务端口号</td>\n</tr>\n<tr>\n<td>httpsPort</td>\n<td><code>Number</code></td>\n<td>https代理服务器端口号</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+start\"></a></p>\n<h3 id=\"proxyServer-start-config-⇒-Promise\"><a href=\"#proxyServer-start-config-⇒-Promise\" class=\"headerlink\" title=\"proxyServer.start([config]) ⇒ Promise\"></a>proxyServer.start([config]) ⇒ <code>Promise</code></h3><p>启动代理服务</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>config</td>\n<td><code>Object</code></td>\n<td>配置字段</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+stop\"></a></p>\n<h3 id=\"proxyServer-stop-⇒-ProxyServer\"><a href=\"#proxyServer-stop-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.stop() ⇒ ProxyServer\"></a>proxyServer.stop() ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>停止代理服务</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public<br><a name=\"ProxyServer+restart\"></a></p>\n<h3 id=\"proxyServer-restart-⇒-ProxyServer\"><a href=\"#proxyServer-restart-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.restart() ⇒ ProxyServer\"></a>proxyServer.restart() ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>重启代理服务</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public<br><a name=\"ProxyServer+addHostsFile\"></a></p>\n<h3 id=\"proxyServer-addHostsFile-filePath-⇒-ProxyServer\"><a href=\"#proxyServer-addHostsFile-filePath-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.addHostsFile(filePath) ⇒ ProxyServer\"></a>proxyServer.addHostsFile(filePath) ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>添加Hosts文件</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>filePath</td>\n<td><code>String</code> \\</td>\n<td><code>Array</code></td>\n<td><code>hosts</code>文件路径（绝对路径）</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+addRewriteFile\"></a></p>\n<h3 id=\"proxyServer-addRewriteFile-filePath-⇒-ProxyServer\"><a href=\"#proxyServer-addRewriteFile-filePath-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.addRewriteFile(filePath) ⇒ ProxyServer\"></a>proxyServer.addRewriteFile(filePath) ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>添加rewrite文件</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>filePath</td>\n<td><code>String</code> \\</td>\n<td><code>Array</code></td>\n<td><code>rewrite</code>文件路径（绝对路径）</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+openBrowser\"></a></p>\n<h3 id=\"proxyServer-openBrowser-browserName-url-usePacProxy-⇒-ProxyServer\"><a href=\"#proxyServer-openBrowser-browserName-url-usePacProxy-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.openBrowser(browserName, url, [usePacProxy]) ⇒ ProxyServer\"></a>proxyServer.openBrowser(browserName, url, [usePacProxy]) ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>打开浏览器窗口</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>browserName</td>\n<td><code>String</code></td>\n<td></td>\n<td>浏览器名称</td>\n</tr>\n<tr>\n<td>url</td>\n<td><code>String</code></td>\n<td></td>\n<td>要打开的url</td>\n</tr>\n<tr>\n<td>[usePacProxy]</td>\n<td><code>Boolean</code></td>\n<td><code>false</code></td>\n<td>是否使用自动代理</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+findConfigFiels\"></a></p>\n<h3 id=\"proxyServer-findConfigFiles-dir-⇒-ProxyServer\"><a href=\"#proxyServer-findConfigFiles-dir-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.findConfigFiles([dir]) ⇒ ProxyServer\"></a>proxyServer.findConfigFiles([dir]) ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>在指定工作空间（目录）下查找配置文件<br>hiproxy会在指定的空间下所有一级目录下查找配置文件</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[dir]</td>\n<td><code>String</code></td>\n<td><code>process.cwd()</code></td>\n<td>工作空间（目录）</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"proxyServer-enableConfFile-confFileType-filePath-⇒-ProxyServer\"><a href=\"#proxyServer-enableConfFile-confFileType-filePath-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.enableConfFile(confFileType, filePath) ⇒ ProxyServer\"></a>proxyServer.enableConfFile(confFileType, filePath) ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>启用指定配置文件</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>confFileType</td>\n<td><code>String</code></td>\n<td></td>\n<td>文件类型(host/rewrite)</td>\n</tr>\n<tr>\n<td>filePath</td>\n<td><code>String</code> \\</td>\n<td><code>Array</code></td>\n<td></td>\n<td>修改的文件路径</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"proxyServer-disableConfFile-confFileType-filePath-⇒-ProxyServer\"><a href=\"#proxyServer-disableConfFile-confFileType-filePath-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.disableConfFile(confFileType, filePath) ⇒ ProxyServer\"></a>proxyServer.disableConfFile(confFileType, filePath) ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>禁用指定配置文件</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>confFileType</td>\n<td><code>String</code></td>\n<td></td>\n<td>文件类型(host/rewrite)</td>\n</tr>\n<tr>\n<td>filePath</td>\n<td><code>String</code> \\</td>\n<td><code>Array</code></td>\n<td></td>\n<td>修改的文件路径</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"Find Configuration File","_content":"\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\nIf you place the configuration file (include the its name) by following [hiproxy concept](../get_started/#Concept), while hiproxy starts, it can automatically find the file without specifying the configuration file manually.\n\nOtherwise, you have to specify the configuration file while hiproxy starts. In the case, you may place the configuration file anywhere, which can be named anything. (Omitted *hosts* file name is `hosts`, and *rewrite* file name is `rewrite`).\n\n## Specifiy configuration file\n\nYou can use some options to specify the name of configuration file. They are `-c, --hosts-file <files>` or `-r, --rewrite-file <files>`.\n\n`-c, --hosts-file <files>` is used to specify the path of *hosts* file. `,` can be used to separate more than one files.\n\n`-r, --rewrite-file <files>` is used to specify the path of *rewrite* file. `,` can be used to separate more than one files.\n\n`<files>` supports **simple wildchar mode** to speify more files. For example, `--rewrite-file ./*/*.conf`.\n\n> **Note**\n>\n> If you specified a configuration file, hiproxy would look for specified file to instead of looking for omitted `hosts` ro `rewrite`. For example:\n> * If `-c ./*/hosts.conf` is specified, hiproxy would ignore the file named `hosts`.\n> * If `-r ./*/rewrite.conf` is specified, hiproxy would ignore the file named `rewrite`.\n\n## Wildchars in configuraton files\n\nSuporting wildchars:\n\nwildchars | description | example | mached | unmached\n---------|----------|---------|----------|---------\n \\* | Match one or more characters. | ./test-*.js | ./test-hello.js | ./test-.js\n ? | Match only one character. | ./test?.js | ./testA.js | ./testAB.js\n [abc] | Matches a single character that is contained within the brackets. | ./test[ABC].js | ./testA.js | ./testD.js\n [^abc] | Matches a single character that is not contained within the brackets. | ./test[^ABC].js | ./testD.js | ./testA.js\n [!abc] | Same as [^abc] | ./test[!ABC].js | ./testD.js | ./testA.js\n\n> **Note**\n> \n> Do not support use `**` to look for files in any hierarchy.\n","source":"configuration/find_conf.md","raw":"title: Find Configuration File\n---\n\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\nIf you place the configuration file (include the its name) by following [hiproxy concept](../get_started/#Concept), while hiproxy starts, it can automatically find the file without specifying the configuration file manually.\n\nOtherwise, you have to specify the configuration file while hiproxy starts. In the case, you may place the configuration file anywhere, which can be named anything. (Omitted *hosts* file name is `hosts`, and *rewrite* file name is `rewrite`).\n\n## Specifiy configuration file\n\nYou can use some options to specify the name of configuration file. They are `-c, --hosts-file <files>` or `-r, --rewrite-file <files>`.\n\n`-c, --hosts-file <files>` is used to specify the path of *hosts* file. `,` can be used to separate more than one files.\n\n`-r, --rewrite-file <files>` is used to specify the path of *rewrite* file. `,` can be used to separate more than one files.\n\n`<files>` supports **simple wildchar mode** to speify more files. For example, `--rewrite-file ./*/*.conf`.\n\n> **Note**\n>\n> If you specified a configuration file, hiproxy would look for specified file to instead of looking for omitted `hosts` ro `rewrite`. For example:\n> * If `-c ./*/hosts.conf` is specified, hiproxy would ignore the file named `hosts`.\n> * If `-r ./*/rewrite.conf` is specified, hiproxy would ignore the file named `rewrite`.\n\n## Wildchars in configuraton files\n\nSuporting wildchars:\n\nwildchars | description | example | mached | unmached\n---------|----------|---------|----------|---------\n \\* | Match one or more characters. | ./test-*.js | ./test-hello.js | ./test-.js\n ? | Match only one character. | ./test?.js | ./testA.js | ./testAB.js\n [abc] | Matches a single character that is contained within the brackets. | ./test[ABC].js | ./testA.js | ./testD.js\n [^abc] | Matches a single character that is not contained within the brackets. | ./test[^ABC].js | ./testD.js | ./testA.js\n [!abc] | Same as [^abc] | ./test[!ABC].js | ./testD.js | ./testA.js\n\n> **Note**\n> \n> Do not support use `**` to look for files in any hierarchy.\n","date":"2017-09-16T14:14:54.000Z","updated":"2017-09-16T14:14:54.000Z","path":"configuration/find_conf.html","comments":1,"layout":"page","_id":"cj7nia0e30004hy0f9y7ekp8m","content":"<blockquote>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<p>If you place the configuration file (include the its name) by following <a href=\"../get_started/#Concept\">hiproxy concept</a>, while hiproxy starts, it can automatically find the file without specifying the configuration file manually.</p>\n<p>Otherwise, you have to specify the configuration file while hiproxy starts. In the case, you may place the configuration file anywhere, which can be named anything. (Omitted <em>hosts</em> file name is <code>hosts</code>, and <em>rewrite</em> file name is <code>rewrite</code>).</p>\n<h2 id=\"Specifiy-configuration-file\"><a href=\"#Specifiy-configuration-file\" class=\"headerlink\" title=\"Specifiy configuration file\"></a>Specifiy configuration file</h2><p>You can use some options to specify the name of configuration file. They are <code>-c, --hosts-file &lt;files&gt;</code> or <code>-r, --rewrite-file &lt;files&gt;</code>.</p>\n<p><code>-c, --hosts-file &lt;files&gt;</code> is used to specify the path of <em>hosts</em> file. <code>,</code> can be used to separate more than one files.</p>\n<p><code>-r, --rewrite-file &lt;files&gt;</code> is used to specify the path of <em>rewrite</em> file. <code>,</code> can be used to separate more than one files.</p>\n<p><code>&lt;files&gt;</code> supports <strong>simple wildchar mode</strong> to speify more files. For example, <code>--rewrite-file ./*/*.conf</code>.</p>\n<blockquote>\n<p><strong>Note</strong></p>\n<p>If you specified a configuration file, hiproxy would look for specified file to instead of looking for omitted <code>hosts</code> ro <code>rewrite</code>. For example:</p>\n<ul>\n<li>If <code>-c ./*/hosts.conf</code> is specified, hiproxy would ignore the file named <code>hosts</code>.</li>\n<li>If <code>-r ./*/rewrite.conf</code> is specified, hiproxy would ignore the file named <code>rewrite</code>.</li>\n</ul>\n</blockquote>\n<h2 id=\"Wildchars-in-configuraton-files\"><a href=\"#Wildchars-in-configuraton-files\" class=\"headerlink\" title=\"Wildchars in configuraton files\"></a>Wildchars in configuraton files</h2><p>Suporting wildchars:</p>\n<table>\n<thead>\n<tr>\n<th>wildchars</th>\n<th>description</th>\n<th>example</th>\n<th>mached</th>\n<th>unmached</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td> *</td>\n<td>Match one or more characters.</td>\n<td>./test-*.js</td>\n<td>./test-hello.js</td>\n<td>./test-.js</td>\n</tr>\n<tr>\n<td> ?</td>\n<td>Match only one character.</td>\n<td>./test?.js</td>\n<td>./testA.js</td>\n<td>./testAB.js</td>\n</tr>\n<tr>\n<td> [abc]</td>\n<td>Matches a single character that is contained within the brackets.</td>\n<td>./test[ABC].js</td>\n<td>./testA.js</td>\n<td>./testD.js</td>\n</tr>\n<tr>\n<td> [^abc]</td>\n<td>Matches a single character that is not contained within the brackets.</td>\n<td>./test[^ABC].js</td>\n<td>./testD.js</td>\n<td>./testA.js</td>\n</tr>\n<tr>\n<td> [!abc]</td>\n<td>Same as [^abc]</td>\n<td>./test[!ABC].js</td>\n<td>./testD.js</td>\n<td>./testA.js</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p><strong>Note</strong></p>\n<p>Do not support use <code>**</code> to look for files in any hierarchy.</p>\n</blockquote>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<p>If you place the configuration file (include the its name) by following <a href=\"../get_started/#Concept\">hiproxy concept</a>, while hiproxy starts, it can automatically find the file without specifying the configuration file manually.</p>\n<p>Otherwise, you have to specify the configuration file while hiproxy starts. In the case, you may place the configuration file anywhere, which can be named anything. (Omitted <em>hosts</em> file name is <code>hosts</code>, and <em>rewrite</em> file name is <code>rewrite</code>).</p>\n<h2 id=\"Specifiy-configuration-file\"><a href=\"#Specifiy-configuration-file\" class=\"headerlink\" title=\"Specifiy configuration file\"></a>Specifiy configuration file</h2><p>You can use some options to specify the name of configuration file. They are <code>-c, --hosts-file &lt;files&gt;</code> or <code>-r, --rewrite-file &lt;files&gt;</code>.</p>\n<p><code>-c, --hosts-file &lt;files&gt;</code> is used to specify the path of <em>hosts</em> file. <code>,</code> can be used to separate more than one files.</p>\n<p><code>-r, --rewrite-file &lt;files&gt;</code> is used to specify the path of <em>rewrite</em> file. <code>,</code> can be used to separate more than one files.</p>\n<p><code>&lt;files&gt;</code> supports <strong>simple wildchar mode</strong> to speify more files. For example, <code>--rewrite-file ./*/*.conf</code>.</p>\n<blockquote>\n<p><strong>Note</strong></p>\n<p>If you specified a configuration file, hiproxy would look for specified file to instead of looking for omitted <code>hosts</code> ro <code>rewrite</code>. For example:</p>\n<ul>\n<li>If <code>-c ./*/hosts.conf</code> is specified, hiproxy would ignore the file named <code>hosts</code>.</li>\n<li>If <code>-r ./*/rewrite.conf</code> is specified, hiproxy would ignore the file named <code>rewrite</code>.</li>\n</ul>\n</blockquote>\n<h2 id=\"Wildchars-in-configuraton-files\"><a href=\"#Wildchars-in-configuraton-files\" class=\"headerlink\" title=\"Wildchars in configuraton files\"></a>Wildchars in configuraton files</h2><p>Suporting wildchars:</p>\n<table>\n<thead>\n<tr>\n<th>wildchars</th>\n<th>description</th>\n<th>example</th>\n<th>mached</th>\n<th>unmached</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td> *</td>\n<td>Match one or more characters.</td>\n<td>./test-*.js</td>\n<td>./test-hello.js</td>\n<td>./test-.js</td>\n</tr>\n<tr>\n<td> ?</td>\n<td>Match only one character.</td>\n<td>./test?.js</td>\n<td>./testA.js</td>\n<td>./testAB.js</td>\n</tr>\n<tr>\n<td> [abc]</td>\n<td>Matches a single character that is contained within the brackets.</td>\n<td>./test[ABC].js</td>\n<td>./testA.js</td>\n<td>./testD.js</td>\n</tr>\n<tr>\n<td> [^abc]</td>\n<td>Matches a single character that is not contained within the brackets.</td>\n<td>./test[^ABC].js</td>\n<td>./testD.js</td>\n<td>./testA.js</td>\n</tr>\n<tr>\n<td> [!abc]</td>\n<td>Same as [^abc]</td>\n<td>./test[!ABC].js</td>\n<td>./testD.js</td>\n<td>./testA.js</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p><strong>Note</strong></p>\n<p>Do not support use <code>**</code> to look for files in any hierarchy.</p>\n</blockquote>\n"},{"title":"Hosts","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 简介\n\n**Hosts** 可以看作一个增强版的系统`hosts`，其最大特性是可以**支持端口转发**。\n\n**注**：hiproxy同时支持项目`hosts`及[rewrite][rewrite]文件。`hosts`仅支持简单的域名转发，如果需要设置高级域名转发规则，请参考[rewrite][rewrite]。\n\n## 工作机制\n**hiproxy** 启动时，会读取并解析各项目根目录中的`hosts`文件，代理服务器接收到请求后，会根据`hosts`文件做相应文请求的转发。\n\n\n## 特性\n* 支持端口转发；\n* 使用项目`hosts`文件，不会有系统自带`hosts`的缓存问题；\n* 修改项目`hosts`文件后，不需要重启hiproxy，hiproxy会自动自动更新`hosts`规则。\n\n## 语法\n\n语法跟系统`hosts`语法基本一致，唯一区别是hiproxy的`hosts`支持**IP+端口**，语法如下:\n\n```\nIP[:端口] 域名1 域名2 域名3 ... 域名N\n```\n\n## 例子\n\n```bash\n# custom hosts with port :)\n\n127.0.0.1:8800 hiproxy.org blog.hiproxy.org\n127.0.0.1 hiproxy.org blog.hiproxy.org\n```\n\n\n[rewrite]: ../rewrite/\n","source":"configuration/hosts.md","raw":"title: Hosts\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 简介\n\n**Hosts** 可以看作一个增强版的系统`hosts`，其最大特性是可以**支持端口转发**。\n\n**注**：hiproxy同时支持项目`hosts`及[rewrite][rewrite]文件。`hosts`仅支持简单的域名转发，如果需要设置高级域名转发规则，请参考[rewrite][rewrite]。\n\n## 工作机制\n**hiproxy** 启动时，会读取并解析各项目根目录中的`hosts`文件，代理服务器接收到请求后，会根据`hosts`文件做相应文请求的转发。\n\n\n## 特性\n* 支持端口转发；\n* 使用项目`hosts`文件，不会有系统自带`hosts`的缓存问题；\n* 修改项目`hosts`文件后，不需要重启hiproxy，hiproxy会自动自动更新`hosts`规则。\n\n## 语法\n\n语法跟系统`hosts`语法基本一致，唯一区别是hiproxy的`hosts`支持**IP+端口**，语法如下:\n\n```\nIP[:端口] 域名1 域名2 域名3 ... 域名N\n```\n\n## 例子\n\n```bash\n# custom hosts with port :)\n\n127.0.0.1:8800 hiproxy.org blog.hiproxy.org\n127.0.0.1 hiproxy.org blog.hiproxy.org\n```\n\n\n[rewrite]: ../rewrite/\n","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"configuration/hosts.html","comments":1,"layout":"page","_id":"cj7nia0eg0005hy0fsph6wl9o","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><strong>Hosts</strong> 可以看作一个增强版的系统<code>hosts</code>，其最大特性是可以<strong>支持端口转发</strong>。</p>\n<p><strong>注</strong>：hiproxy同时支持项目<code>hosts</code>及<a href=\"../rewrite/\">rewrite</a>文件。<code>hosts</code>仅支持简单的域名转发，如果需要设置高级域名转发规则，请参考<a href=\"../rewrite/\">rewrite</a>。</p>\n<h2 id=\"工作机制\"><a href=\"#工作机制\" class=\"headerlink\" title=\"工作机制\"></a>工作机制</h2><p><strong>hiproxy</strong> 启动时，会读取并解析各项目根目录中的<code>hosts</code>文件，代理服务器接收到请求后，会根据<code>hosts</code>文件做相应文请求的转发。</p>\n<h2 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h2><ul>\n<li>支持端口转发；</li>\n<li>使用项目<code>hosts</code>文件，不会有系统自带<code>hosts</code>的缓存问题；</li>\n<li>修改项目<code>hosts</code>文件后，不需要重启hiproxy，hiproxy会自动自动更新<code>hosts</code>规则。</li>\n</ul>\n<h2 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h2><p>语法跟系统<code>hosts</code>语法基本一致，唯一区别是hiproxy的<code>hosts</code>支持<strong>IP+端口</strong>，语法如下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">IP[:端口] 域名1 域名2 域名3 ... 域名N</div></pre></td></tr></table></figure>\n<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># custom hosts with port :)</span></div><div class=\"line\"></div><div class=\"line\">127.0.0.1:8800 hiproxy.org blog.hiproxy.org</div><div class=\"line\">127.0.0.1 hiproxy.org blog.hiproxy.org</div></pre></td></tr></table></figure>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><strong>Hosts</strong> 可以看作一个增强版的系统<code>hosts</code>，其最大特性是可以<strong>支持端口转发</strong>。</p>\n<p><strong>注</strong>：hiproxy同时支持项目<code>hosts</code>及<a href=\"../rewrite/\">rewrite</a>文件。<code>hosts</code>仅支持简单的域名转发，如果需要设置高级域名转发规则，请参考<a href=\"../rewrite/\">rewrite</a>。</p>\n<h2 id=\"工作机制\"><a href=\"#工作机制\" class=\"headerlink\" title=\"工作机制\"></a>工作机制</h2><p><strong>hiproxy</strong> 启动时，会读取并解析各项目根目录中的<code>hosts</code>文件，代理服务器接收到请求后，会根据<code>hosts</code>文件做相应文请求的转发。</p>\n<h2 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h2><ul>\n<li>支持端口转发；</li>\n<li>使用项目<code>hosts</code>文件，不会有系统自带<code>hosts</code>的缓存问题；</li>\n<li>修改项目<code>hosts</code>文件后，不需要重启hiproxy，hiproxy会自动自动更新<code>hosts</code>规则。</li>\n</ul>\n<h2 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h2><p>语法跟系统<code>hosts</code>语法基本一致，唯一区别是hiproxy的<code>hosts</code>支持<strong>IP+端口</strong>，语法如下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">IP[:端口] 域名1 域名2 域名3 ... 域名N</div></pre></td></tr></table></figure>\n<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># custom hosts with port :)</span></div><div class=\"line\"></div><div class=\"line\">127.0.0.1:8800 hiproxy.org blog.hiproxy.org</div><div class=\"line\">127.0.0.1 hiproxy.org blog.hiproxy.org</div></pre></td></tr></table></figure>\n"},{"title":"Introduction","_content":"\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## Type of configuration file\n\nHiproxy can use *hosts* to make simple request proxy. And `rewrite` can be used for complex configuration rules which use similar syntax of Nginx.\n\n### hosts\n\nIt has same syntax as `hosts` of OS. As additinal, it supports configurating port number. You can only configure host with corresponding IP and port in *hosts*. It does not support detailed routing and modification to request/response. Read [hosts](../configuration/hosts.html) for more.\n\n### Example for hosts\n\n```bash\n# comment\n127.0.0.1 example.com\n\n# ip + port\n127.0.0.1:8800 blog.example.com life.example.com\n```\n\n### rewrite\n\nYou can make complex configuration in *rewrite* in some complex situation. That includes detailed routing, and modification to request/response. The syntax of *rewirte* configuration is very similar to that of Nginx. Read [rewrite](../configuration/rewrite.html) for more.\n\n### Example for rewrite\n\n```bash\n# global variables\nset $port 8899;\nset $ip   127.0.0.1;\nset $online 210.0.0.0;\n\n# domain name configuration\ndomain example.com {\n  location / {\n    proxy_pass http://$online/;\n  }\n\n  location /blog/ {\n    proxy_pass http://$ip:$port/blog/;\n    proxy_set_header from 'hiproxy';\n    set_header proxy 'hiproxy';\n  }\n}\n```\n\n## Configuration file location\n\nhiproxy recommends you place configuration files in the particular **project root directory** (*hosts* file named `hosts` and *rewrite* file named `rewrite`). Projects are placed in workspace so that the hierarchy structure is line below:\n\n```bash\nworkspace\n  ├── app-1 # Project1\n  │   ├── hosts   # hosts file\n  │   ├── rewrite # rewrite file\n  │   └── src     # codes\n  │   └── ...     # other files\n  │\n  ├── app-2 # Project2\n  │   ├── hosts   # hosts file\n  │   ├── rewrite # rewrite file\n  │   └── src     # codes\n  │   └── ...     # other files\n  │\n  └── app-3 # Project3\n      ├── hosts   # hosts file\n      ├── rewrite # rewrite file\n      └── src     # codes\n      └── ...     # other files\n```\n\nThe benifit is that these configuration files can be commit to code repository for sharing with team members, and cost saving. Furthermore, hiproxy can find the files by itself.\n\n## Finding configuration files\n\nIf you follow the rules above to place the files (with their special names), and hiproxy use `workspace` directory as workspace, it can find the configuration files of the three projects without spcifying by manual.\n\nIf you do NOT follow the rules, place the files to different directory or not use default names (`hosts` for *hosts* file and `rewrite` for *rewrite* file), you have to specify the files while hiproxy starts.\n\nRead [Find Configuration File](./find_conf.html) for more.\n\n\n## Update configuration files\n\nHiproxy support two proxy methods: [PAC(Proxy-Auto-Config)](https://en.wikipedia.org/wiki/Proxy_auto-config) and general proxy.\n\nGeneral proxy method is default one. You can use `--pac-proxy` for swithing to PAC while starting.\n\nThe Deifferent proxy methods deal updating configuration file in different way.\n\nIf it's running in general proxy mode and the configuration file was updated. You can just refresh the browsing page to make it valid.\n\nBut if it's running in PAC proxy mode, and one or more new domain ware added. You should refresh the browser's proxy file by manual since the `.pac` file is not updated immediately. If you want detail, you can visit <chrome://net-internals/#proxy> then click `Re-apply settings`.\n\n## Merge proxy rules\n\nThe rules in all configuration files should be merged into a bit rules tree. That is, after configuring the proxy, all the rules in the configuration files are equal at the time the request is processing. **The rules in different domain would not affect each other. The rules in the same domain should be merged and later rule should overwrite previous one if they are same route.**\n\nFor example, there are two configuration files, `workspace/blog/rewrite` and `workspace/docs/rewrite`. Their content are below:\n\n```bash\n# workspace/blog/rewrite\n\ndomain hiproxy.org {\n  location /blog/ {\n    proxy_pass http://127.0.0.1:8000/;\n  }\n}\n\ndomain blog.hiproxy.org {\n  location / {\n    proxy_pass http://127.0.0.1:8000/;\n  }\n}\n```\n\n```bash\n# workspace/docs/rewrite\n\ndomain hiproxy.org {\n  location /docs/ {\n    proxy_pass http://127.0.0.1:9000/;\n  }\n}\n```\n\nAfter merging:\n\n```bash\n# merged rules\n\ndomain hiproxy.org {\n  location /blog/ {\n    proxy_pass http://127.0.0.1:8000/;\n  }\n}\n\ndomain hiproxy.org {\n  location /docs/ {\n    proxy_pass http://127.0.0.1:9000/;\n  }\n}\n\ndomain blog.hiproxy.org {\n  location / {\n    proxy_pass http://127.0.0.1:8000/;\n  }\n}\n```\n\n","source":"configuration/index.md","raw":"title: Introduction\n---\n\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## Type of configuration file\n\nHiproxy can use *hosts* to make simple request proxy. And `rewrite` can be used for complex configuration rules which use similar syntax of Nginx.\n\n### hosts\n\nIt has same syntax as `hosts` of OS. As additinal, it supports configurating port number. You can only configure host with corresponding IP and port in *hosts*. It does not support detailed routing and modification to request/response. Read [hosts](../configuration/hosts.html) for more.\n\n### Example for hosts\n\n```bash\n# comment\n127.0.0.1 example.com\n\n# ip + port\n127.0.0.1:8800 blog.example.com life.example.com\n```\n\n### rewrite\n\nYou can make complex configuration in *rewrite* in some complex situation. That includes detailed routing, and modification to request/response. The syntax of *rewirte* configuration is very similar to that of Nginx. Read [rewrite](../configuration/rewrite.html) for more.\n\n### Example for rewrite\n\n```bash\n# global variables\nset $port 8899;\nset $ip   127.0.0.1;\nset $online 210.0.0.0;\n\n# domain name configuration\ndomain example.com {\n  location / {\n    proxy_pass http://$online/;\n  }\n\n  location /blog/ {\n    proxy_pass http://$ip:$port/blog/;\n    proxy_set_header from 'hiproxy';\n    set_header proxy 'hiproxy';\n  }\n}\n```\n\n## Configuration file location\n\nhiproxy recommends you place configuration files in the particular **project root directory** (*hosts* file named `hosts` and *rewrite* file named `rewrite`). Projects are placed in workspace so that the hierarchy structure is line below:\n\n```bash\nworkspace\n  ├── app-1 # Project1\n  │   ├── hosts   # hosts file\n  │   ├── rewrite # rewrite file\n  │   └── src     # codes\n  │   └── ...     # other files\n  │\n  ├── app-2 # Project2\n  │   ├── hosts   # hosts file\n  │   ├── rewrite # rewrite file\n  │   └── src     # codes\n  │   └── ...     # other files\n  │\n  └── app-3 # Project3\n      ├── hosts   # hosts file\n      ├── rewrite # rewrite file\n      └── src     # codes\n      └── ...     # other files\n```\n\nThe benifit is that these configuration files can be commit to code repository for sharing with team members, and cost saving. Furthermore, hiproxy can find the files by itself.\n\n## Finding configuration files\n\nIf you follow the rules above to place the files (with their special names), and hiproxy use `workspace` directory as workspace, it can find the configuration files of the three projects without spcifying by manual.\n\nIf you do NOT follow the rules, place the files to different directory or not use default names (`hosts` for *hosts* file and `rewrite` for *rewrite* file), you have to specify the files while hiproxy starts.\n\nRead [Find Configuration File](./find_conf.html) for more.\n\n\n## Update configuration files\n\nHiproxy support two proxy methods: [PAC(Proxy-Auto-Config)](https://en.wikipedia.org/wiki/Proxy_auto-config) and general proxy.\n\nGeneral proxy method is default one. You can use `--pac-proxy` for swithing to PAC while starting.\n\nThe Deifferent proxy methods deal updating configuration file in different way.\n\nIf it's running in general proxy mode and the configuration file was updated. You can just refresh the browsing page to make it valid.\n\nBut if it's running in PAC proxy mode, and one or more new domain ware added. You should refresh the browser's proxy file by manual since the `.pac` file is not updated immediately. If you want detail, you can visit <chrome://net-internals/#proxy> then click `Re-apply settings`.\n\n## Merge proxy rules\n\nThe rules in all configuration files should be merged into a bit rules tree. That is, after configuring the proxy, all the rules in the configuration files are equal at the time the request is processing. **The rules in different domain would not affect each other. The rules in the same domain should be merged and later rule should overwrite previous one if they are same route.**\n\nFor example, there are two configuration files, `workspace/blog/rewrite` and `workspace/docs/rewrite`. Their content are below:\n\n```bash\n# workspace/blog/rewrite\n\ndomain hiproxy.org {\n  location /blog/ {\n    proxy_pass http://127.0.0.1:8000/;\n  }\n}\n\ndomain blog.hiproxy.org {\n  location / {\n    proxy_pass http://127.0.0.1:8000/;\n  }\n}\n```\n\n```bash\n# workspace/docs/rewrite\n\ndomain hiproxy.org {\n  location /docs/ {\n    proxy_pass http://127.0.0.1:9000/;\n  }\n}\n```\n\nAfter merging:\n\n```bash\n# merged rules\n\ndomain hiproxy.org {\n  location /blog/ {\n    proxy_pass http://127.0.0.1:8000/;\n  }\n}\n\ndomain hiproxy.org {\n  location /docs/ {\n    proxy_pass http://127.0.0.1:9000/;\n  }\n}\n\ndomain blog.hiproxy.org {\n  location / {\n    proxy_pass http://127.0.0.1:8000/;\n  }\n}\n```\n\n","date":"2017-09-16T14:15:03.000Z","updated":"2017-09-16T14:15:03.000Z","path":"configuration/index.html","comments":1,"layout":"page","_id":"cj7nia0ei0006hy0f4ucg59zy","content":"<blockquote>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"Type-of-configuration-file\"><a href=\"#Type-of-configuration-file\" class=\"headerlink\" title=\"Type of configuration file\"></a>Type of configuration file</h2><p>Hiproxy can use <em>hosts</em> to make simple request proxy. And <code>rewrite</code> can be used for complex configuration rules which use similar syntax of Nginx.</p>\n<h3 id=\"hosts\"><a href=\"#hosts\" class=\"headerlink\" title=\"hosts\"></a>hosts</h3><p>It has same syntax as <code>hosts</code> of OS. As additinal, it supports configurating port number. You can only configure host with corresponding IP and port in <em>hosts</em>. It does not support detailed routing and modification to request/response. Read <a href=\"../configuration/hosts.html\">hosts</a> for more.</p>\n<h3 id=\"Example-for-hosts\"><a href=\"#Example-for-hosts\" class=\"headerlink\" title=\"Example for hosts\"></a>Example for hosts</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># comment</span></div><div class=\"line\">127.0.0.1 example.com</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># ip + port</span></div><div class=\"line\">127.0.0.1:8800 blog.example.com life.example.com</div></pre></td></tr></table></figure>\n<h3 id=\"rewrite\"><a href=\"#rewrite\" class=\"headerlink\" title=\"rewrite\"></a>rewrite</h3><p>You can make complex configuration in <em>rewrite</em> in some complex situation. That includes detailed routing, and modification to request/response. The syntax of <em>rewirte</em> configuration is very similar to that of Nginx. Read <a href=\"../configuration/rewrite.html\">rewrite</a> for more.</p>\n<h3 id=\"Example-for-rewrite\"><a href=\"#Example-for-rewrite\" class=\"headerlink\" title=\"Example for rewrite\"></a>Example for rewrite</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># global variables</span></div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$port</span> 8899;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ip</span>   127.0.0.1;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$online</span> 210.0.0.0;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># domain name configuration</span></div><div class=\"line\">domain example.com &#123;</div><div class=\"line\">  location / &#123;</div><div class=\"line\">    proxy_pass http://<span class=\"variable\">$online</span>/;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  location /blog/ &#123;</div><div class=\"line\">    proxy_pass http://<span class=\"variable\">$ip</span>:<span class=\"variable\">$port</span>/blog/;</div><div class=\"line\">    proxy_set_header from <span class=\"string\">'hiproxy'</span>;</div><div class=\"line\">    set_header proxy <span class=\"string\">'hiproxy'</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Configuration-file-location\"><a href=\"#Configuration-file-location\" class=\"headerlink\" title=\"Configuration file location\"></a>Configuration file location</h2><p>hiproxy recommends you place configuration files in the particular <strong>project root directory</strong> (<em>hosts</em> file named <code>hosts</code> and <em>rewrite</em> file named <code>rewrite</code>). Projects are placed in workspace so that the hierarchy structure is line below:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">workspace</div><div class=\"line\">  ├── app-1 <span class=\"comment\"># Project1</span></div><div class=\"line\">  │   ├── hosts   <span class=\"comment\"># hosts file</span></div><div class=\"line\">  │   ├── rewrite <span class=\"comment\"># rewrite file</span></div><div class=\"line\">  │   └── src     <span class=\"comment\"># codes</span></div><div class=\"line\">  │   └── ...     <span class=\"comment\"># other files</span></div><div class=\"line\">  │</div><div class=\"line\">  ├── app-2 <span class=\"comment\"># Project2</span></div><div class=\"line\">  │   ├── hosts   <span class=\"comment\"># hosts file</span></div><div class=\"line\">  │   ├── rewrite <span class=\"comment\"># rewrite file</span></div><div class=\"line\">  │   └── src     <span class=\"comment\"># codes</span></div><div class=\"line\">  │   └── ...     <span class=\"comment\"># other files</span></div><div class=\"line\">  │</div><div class=\"line\">  └── app-3 <span class=\"comment\"># Project3</span></div><div class=\"line\">      ├── hosts   <span class=\"comment\"># hosts file</span></div><div class=\"line\">      ├── rewrite <span class=\"comment\"># rewrite file</span></div><div class=\"line\">      └── src     <span class=\"comment\"># codes</span></div><div class=\"line\">      └── ...     <span class=\"comment\"># other files</span></div></pre></td></tr></table></figure>\n<p>The benifit is that these configuration files can be commit to code repository for sharing with team members, and cost saving. Furthermore, hiproxy can find the files by itself.</p>\n<h2 id=\"Finding-configuration-files\"><a href=\"#Finding-configuration-files\" class=\"headerlink\" title=\"Finding configuration files\"></a>Finding configuration files</h2><p>If you follow the rules above to place the files (with their special names), and hiproxy use <code>workspace</code> directory as workspace, it can find the configuration files of the three projects without spcifying by manual.</p>\n<p>If you do NOT follow the rules, place the files to different directory or not use default names (<code>hosts</code> for <em>hosts</em> file and <code>rewrite</code> for <em>rewrite</em> file), you have to specify the files while hiproxy starts.</p>\n<p>Read <a href=\"./find_conf.html\">Find Configuration File</a> for more.</p>\n<h2 id=\"Update-configuration-files\"><a href=\"#Update-configuration-files\" class=\"headerlink\" title=\"Update configuration files\"></a>Update configuration files</h2><p>Hiproxy support two proxy methods: <a href=\"https://en.wikipedia.org/wiki/Proxy_auto-config\" target=\"_blank\" rel=\"external\">PAC(Proxy-Auto-Config)</a> and general proxy.</p>\n<p>General proxy method is default one. You can use <code>--pac-proxy</code> for swithing to PAC while starting.</p>\n<p>The Deifferent proxy methods deal updating configuration file in different way.</p>\n<p>If it’s running in general proxy mode and the configuration file was updated. You can just refresh the browsing page to make it valid.</p>\n<p>But if it’s running in PAC proxy mode, and one or more new domain ware added. You should refresh the browser’s proxy file by manual since the <code>.pac</code> file is not updated immediately. If you want detail, you can visit <a href=\"chrome://net-internals/#proxy\" target=\"_blank\" rel=\"external\">chrome://net-internals/#proxy</a> then click <code>Re-apply settings</code>.</p>\n<h2 id=\"Merge-proxy-rules\"><a href=\"#Merge-proxy-rules\" class=\"headerlink\" title=\"Merge proxy rules\"></a>Merge proxy rules</h2><p>The rules in all configuration files should be merged into a bit rules tree. That is, after configuring the proxy, all the rules in the configuration files are equal at the time the request is processing. <strong>The rules in different domain would not affect each other. The rules in the same domain should be merged and later rule should overwrite previous one if they are same route.</strong></p>\n<p>For example, there are two configuration files, <code>workspace/blog/rewrite</code> and <code>workspace/docs/rewrite</code>. Their content are below:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># workspace/blog/rewrite</span></div><div class=\"line\"></div><div class=\"line\">domain hiproxy.org &#123;</div><div class=\"line\">  location /blog/ &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:8000/;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">domain blog.hiproxy.org &#123;</div><div class=\"line\">  location / &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:8000/;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># workspace/docs/rewrite</span></div><div class=\"line\"></div><div class=\"line\">domain hiproxy.org &#123;</div><div class=\"line\">  location /docs/ &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:9000/;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>After merging:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># merged rules</span></div><div class=\"line\"></div><div class=\"line\">domain hiproxy.org &#123;</div><div class=\"line\">  location /blog/ &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:8000/;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">domain hiproxy.org &#123;</div><div class=\"line\">  location /docs/ &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:9000/;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">domain blog.hiproxy.org &#123;</div><div class=\"line\">  location / &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:8000/;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"Type-of-configuration-file\"><a href=\"#Type-of-configuration-file\" class=\"headerlink\" title=\"Type of configuration file\"></a>Type of configuration file</h2><p>Hiproxy can use <em>hosts</em> to make simple request proxy. And <code>rewrite</code> can be used for complex configuration rules which use similar syntax of Nginx.</p>\n<h3 id=\"hosts\"><a href=\"#hosts\" class=\"headerlink\" title=\"hosts\"></a>hosts</h3><p>It has same syntax as <code>hosts</code> of OS. As additinal, it supports configurating port number. You can only configure host with corresponding IP and port in <em>hosts</em>. It does not support detailed routing and modification to request/response. Read <a href=\"../configuration/hosts.html\">hosts</a> for more.</p>\n<h3 id=\"Example-for-hosts\"><a href=\"#Example-for-hosts\" class=\"headerlink\" title=\"Example for hosts\"></a>Example for hosts</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># comment</span></div><div class=\"line\">127.0.0.1 example.com</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># ip + port</span></div><div class=\"line\">127.0.0.1:8800 blog.example.com life.example.com</div></pre></td></tr></table></figure>\n<h3 id=\"rewrite\"><a href=\"#rewrite\" class=\"headerlink\" title=\"rewrite\"></a>rewrite</h3><p>You can make complex configuration in <em>rewrite</em> in some complex situation. That includes detailed routing, and modification to request/response. The syntax of <em>rewirte</em> configuration is very similar to that of Nginx. Read <a href=\"../configuration/rewrite.html\">rewrite</a> for more.</p>\n<h3 id=\"Example-for-rewrite\"><a href=\"#Example-for-rewrite\" class=\"headerlink\" title=\"Example for rewrite\"></a>Example for rewrite</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># global variables</span></div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$port</span> 8899;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ip</span>   127.0.0.1;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$online</span> 210.0.0.0;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># domain name configuration</span></div><div class=\"line\">domain example.com &#123;</div><div class=\"line\">  location / &#123;</div><div class=\"line\">    proxy_pass http://<span class=\"variable\">$online</span>/;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  location /blog/ &#123;</div><div class=\"line\">    proxy_pass http://<span class=\"variable\">$ip</span>:<span class=\"variable\">$port</span>/blog/;</div><div class=\"line\">    proxy_set_header from <span class=\"string\">'hiproxy'</span>;</div><div class=\"line\">    set_header proxy <span class=\"string\">'hiproxy'</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Configuration-file-location\"><a href=\"#Configuration-file-location\" class=\"headerlink\" title=\"Configuration file location\"></a>Configuration file location</h2><p>hiproxy recommends you place configuration files in the particular <strong>project root directory</strong> (<em>hosts</em> file named <code>hosts</code> and <em>rewrite</em> file named <code>rewrite</code>). Projects are placed in workspace so that the hierarchy structure is line below:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">workspace</div><div class=\"line\">  ├── app-1 <span class=\"comment\"># Project1</span></div><div class=\"line\">  │   ├── hosts   <span class=\"comment\"># hosts file</span></div><div class=\"line\">  │   ├── rewrite <span class=\"comment\"># rewrite file</span></div><div class=\"line\">  │   └── src     <span class=\"comment\"># codes</span></div><div class=\"line\">  │   └── ...     <span class=\"comment\"># other files</span></div><div class=\"line\">  │</div><div class=\"line\">  ├── app-2 <span class=\"comment\"># Project2</span></div><div class=\"line\">  │   ├── hosts   <span class=\"comment\"># hosts file</span></div><div class=\"line\">  │   ├── rewrite <span class=\"comment\"># rewrite file</span></div><div class=\"line\">  │   └── src     <span class=\"comment\"># codes</span></div><div class=\"line\">  │   └── ...     <span class=\"comment\"># other files</span></div><div class=\"line\">  │</div><div class=\"line\">  └── app-3 <span class=\"comment\"># Project3</span></div><div class=\"line\">      ├── hosts   <span class=\"comment\"># hosts file</span></div><div class=\"line\">      ├── rewrite <span class=\"comment\"># rewrite file</span></div><div class=\"line\">      └── src     <span class=\"comment\"># codes</span></div><div class=\"line\">      └── ...     <span class=\"comment\"># other files</span></div></pre></td></tr></table></figure>\n<p>The benifit is that these configuration files can be commit to code repository for sharing with team members, and cost saving. Furthermore, hiproxy can find the files by itself.</p>\n<h2 id=\"Finding-configuration-files\"><a href=\"#Finding-configuration-files\" class=\"headerlink\" title=\"Finding configuration files\"></a>Finding configuration files</h2><p>If you follow the rules above to place the files (with their special names), and hiproxy use <code>workspace</code> directory as workspace, it can find the configuration files of the three projects without spcifying by manual.</p>\n<p>If you do NOT follow the rules, place the files to different directory or not use default names (<code>hosts</code> for <em>hosts</em> file and <code>rewrite</code> for <em>rewrite</em> file), you have to specify the files while hiproxy starts.</p>\n<p>Read <a href=\"./find_conf.html\">Find Configuration File</a> for more.</p>\n<h2 id=\"Update-configuration-files\"><a href=\"#Update-configuration-files\" class=\"headerlink\" title=\"Update configuration files\"></a>Update configuration files</h2><p>Hiproxy support two proxy methods: <a href=\"https://en.wikipedia.org/wiki/Proxy_auto-config\" target=\"_blank\" rel=\"external\">PAC(Proxy-Auto-Config)</a> and general proxy.</p>\n<p>General proxy method is default one. You can use <code>--pac-proxy</code> for swithing to PAC while starting.</p>\n<p>The Deifferent proxy methods deal updating configuration file in different way.</p>\n<p>If it’s running in general proxy mode and the configuration file was updated. You can just refresh the browsing page to make it valid.</p>\n<p>But if it’s running in PAC proxy mode, and one or more new domain ware added. You should refresh the browser’s proxy file by manual since the <code>.pac</code> file is not updated immediately. If you want detail, you can visit <a href=\"chrome://net-internals/#proxy\" target=\"_blank\" rel=\"external\">chrome://net-internals/#proxy</a> then click <code>Re-apply settings</code>.</p>\n<h2 id=\"Merge-proxy-rules\"><a href=\"#Merge-proxy-rules\" class=\"headerlink\" title=\"Merge proxy rules\"></a>Merge proxy rules</h2><p>The rules in all configuration files should be merged into a bit rules tree. That is, after configuring the proxy, all the rules in the configuration files are equal at the time the request is processing. <strong>The rules in different domain would not affect each other. The rules in the same domain should be merged and later rule should overwrite previous one if they are same route.</strong></p>\n<p>For example, there are two configuration files, <code>workspace/blog/rewrite</code> and <code>workspace/docs/rewrite</code>. Their content are below:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># workspace/blog/rewrite</span></div><div class=\"line\"></div><div class=\"line\">domain hiproxy.org &#123;</div><div class=\"line\">  location /blog/ &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:8000/;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">domain blog.hiproxy.org &#123;</div><div class=\"line\">  location / &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:8000/;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># workspace/docs/rewrite</span></div><div class=\"line\"></div><div class=\"line\">domain hiproxy.org &#123;</div><div class=\"line\">  location /docs/ &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:9000/;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>After merging:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># merged rules</span></div><div class=\"line\"></div><div class=\"line\">domain hiproxy.org &#123;</div><div class=\"line\">  location /blog/ &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:8000/;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">domain hiproxy.org &#123;</div><div class=\"line\">  location /docs/ &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:9000/;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">domain blog.hiproxy.org &#123;</div><div class=\"line\">  location / &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:8000/;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"title":"Rewrite","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n\n","source":"configuration/rewrite.md","raw":"title: Rewrite\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n\n","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"configuration/rewrite.html","comments":1,"layout":"page","_id":"cj7nia0ek0007hy0frqlhkqbb","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n"},{"title":"Get And Install SSL Certificate","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\nhiporxy会自己生成一个根证书，扮演CA的角色（Hiproxy Custom CA）。hiproxy在代理https请求的时候，会自动生成证书并使用hiproxy的根证书签名。\n\n由于系统是不信任hiproxy根证书的，所以需要我们自己手动安装信任hiproxy的根证书。\n\n## 下载证书\n\n启动hiproxy服务之后（假设端口号是`5525`)，可以访问<http://127.0.0.1:5525/ssl-certificate>获取**Hiproxy Custom CA**的根证书。\n\n这个地址，可以在<http://127.0.0.1:5525/>中找到，如下图：\n\n<img src=\"../../images/hiproxy_start_page.png\" width=\"500\" />\n\n## 安装证书\n\n下面将分别介绍OSX、iOS、Windows和Android中如何安装根证书。\n\n### OSX系统\n\n1. 下载完成根证书之后，双击`Hiproxy_Custom_CA_Certificate.pem`导入证书到钥匙串。\n\n2. 在弹出的对话框中输入用户密码。\n\n3. 此时证书是不受信任状态，双击刚才导入的证书。\n\n<img src=\"../../images/import_root_cert.png\" width=\"680\" />\n\n4. 在**信任** > **使用此证书时**下面选择**始终信任**。\n\n<img src=\"../../images/trust_root_cert.png\" width=\"680\" />\n\n5. 关闭对话框，此时证书已经是被信任状态。\n\n<img src=\"../../images/root_cert_trusted.png\" width=\"680\" />\n\n\n### iOS系统\n\n1. 下载完成根证书之后发送到手机并打开。\n\n2. 点击右上角的**安装**。\n\n<img src=\"../../images/ios_install_cert_1.jpg\" width=\"375\" />\n\n3. 再次点击右上角的**安装**。\n\n<img src=\"../../images/ios_install_cert_2.jpg\" width=\"375\" />\n\n4. 完成安装，点击右上角**完成**退出。\n\n<img src=\"../../images/ios_install_cert_3.jpg\" width=\"375\" />\n\n5. 如果**iOS系统版本 >= 10.3**，需要在**设置** > **通用** > **关于本机**中点击**证书信任设置**。\n\n<img src=\"../../images/ios_install_cert_4.jpg\" width=\"375\" />\n\n6. 打开开关**Hiproxy Custom CA**。\n\n<img src=\"../../images/ios_install_cert_5.jpg\" width=\"375\" />\n\n### Windows\n\n1. 下载完成根证书之后，双击`Hiproxy_Custom_CA_Certificate.crt`安装证书。\n\n2. 在弹出的对话框中点击**安装证书**。\n\n<img src=\"../../images/windows_install_cert.png\" width=\"420\" />\n\n3. 点击**下一步**。\n\n<img src=\"../../images/windows_step_1.png\" width=\"420\" />\n\n4. 选择**将所有的证书放入下列存储(P)**，点击**浏览(R)**，然后选择**受信任的根证书颁发机构**，点击**确定**。\n\n<img src=\"../../images/windows_step_2.png\" width=\"420\" />\n\n5. 点击**下一步**、**完成**。根据页面提示完成根证书安装。。\n\n<img src=\"../../images/windows_install_finish.png\" width=\"420\" />\n\n\n### Android\n\n1. 下载完成根证书之后发送到手机。\n\n2. 在**设置** > **安全**中点击**从SD卡安装**。\n\n<img src=\"../../images/android_install_cert_1.png\" width=\"375\" />\n\n3. 输入解锁密码，然后输入证书名称，比如**HiproxyCustomCA**，点击**确定**。\n\n<img src=\"../../images/android_install_cert_2.png\" width=\"375\" />\n\n4. 在**设置** > **安全** > **受信任的证书** > **用户**中，如果能看到hiproxy的根证书，表示安装成功。\n\n<img src=\"../../images/android_install_cert_3.png\" width=\"375\" />\n","source":"configuration/ssl_certificate.md","raw":"title: Get And Install SSL Certificate\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\nhiporxy会自己生成一个根证书，扮演CA的角色（Hiproxy Custom CA）。hiproxy在代理https请求的时候，会自动生成证书并使用hiproxy的根证书签名。\n\n由于系统是不信任hiproxy根证书的，所以需要我们自己手动安装信任hiproxy的根证书。\n\n## 下载证书\n\n启动hiproxy服务之后（假设端口号是`5525`)，可以访问<http://127.0.0.1:5525/ssl-certificate>获取**Hiproxy Custom CA**的根证书。\n\n这个地址，可以在<http://127.0.0.1:5525/>中找到，如下图：\n\n<img src=\"../../images/hiproxy_start_page.png\" width=\"500\" />\n\n## 安装证书\n\n下面将分别介绍OSX、iOS、Windows和Android中如何安装根证书。\n\n### OSX系统\n\n1. 下载完成根证书之后，双击`Hiproxy_Custom_CA_Certificate.pem`导入证书到钥匙串。\n\n2. 在弹出的对话框中输入用户密码。\n\n3. 此时证书是不受信任状态，双击刚才导入的证书。\n\n<img src=\"../../images/import_root_cert.png\" width=\"680\" />\n\n4. 在**信任** > **使用此证书时**下面选择**始终信任**。\n\n<img src=\"../../images/trust_root_cert.png\" width=\"680\" />\n\n5. 关闭对话框，此时证书已经是被信任状态。\n\n<img src=\"../../images/root_cert_trusted.png\" width=\"680\" />\n\n\n### iOS系统\n\n1. 下载完成根证书之后发送到手机并打开。\n\n2. 点击右上角的**安装**。\n\n<img src=\"../../images/ios_install_cert_1.jpg\" width=\"375\" />\n\n3. 再次点击右上角的**安装**。\n\n<img src=\"../../images/ios_install_cert_2.jpg\" width=\"375\" />\n\n4. 完成安装，点击右上角**完成**退出。\n\n<img src=\"../../images/ios_install_cert_3.jpg\" width=\"375\" />\n\n5. 如果**iOS系统版本 >= 10.3**，需要在**设置** > **通用** > **关于本机**中点击**证书信任设置**。\n\n<img src=\"../../images/ios_install_cert_4.jpg\" width=\"375\" />\n\n6. 打开开关**Hiproxy Custom CA**。\n\n<img src=\"../../images/ios_install_cert_5.jpg\" width=\"375\" />\n\n### Windows\n\n1. 下载完成根证书之后，双击`Hiproxy_Custom_CA_Certificate.crt`安装证书。\n\n2. 在弹出的对话框中点击**安装证书**。\n\n<img src=\"../../images/windows_install_cert.png\" width=\"420\" />\n\n3. 点击**下一步**。\n\n<img src=\"../../images/windows_step_1.png\" width=\"420\" />\n\n4. 选择**将所有的证书放入下列存储(P)**，点击**浏览(R)**，然后选择**受信任的根证书颁发机构**，点击**确定**。\n\n<img src=\"../../images/windows_step_2.png\" width=\"420\" />\n\n5. 点击**下一步**、**完成**。根据页面提示完成根证书安装。。\n\n<img src=\"../../images/windows_install_finish.png\" width=\"420\" />\n\n\n### Android\n\n1. 下载完成根证书之后发送到手机。\n\n2. 在**设置** > **安全**中点击**从SD卡安装**。\n\n<img src=\"../../images/android_install_cert_1.png\" width=\"375\" />\n\n3. 输入解锁密码，然后输入证书名称，比如**HiproxyCustomCA**，点击**确定**。\n\n<img src=\"../../images/android_install_cert_2.png\" width=\"375\" />\n\n4. 在**设置** > **安全** > **受信任的证书** > **用户**中，如果能看到hiproxy的根证书，表示安装成功。\n\n<img src=\"../../images/android_install_cert_3.png\" width=\"375\" />\n","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"configuration/ssl_certificate.html","comments":1,"layout":"page","_id":"cj7nia0el0008hy0fryf2xf2g","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<p>hiporxy会自己生成一个根证书，扮演CA的角色（Hiproxy Custom CA）。hiproxy在代理https请求的时候，会自动生成证书并使用hiproxy的根证书签名。</p>\n<p>由于系统是不信任hiproxy根证书的，所以需要我们自己手动安装信任hiproxy的根证书。</p>\n<h2 id=\"下载证书\"><a href=\"#下载证书\" class=\"headerlink\" title=\"下载证书\"></a>下载证书</h2><p>启动hiproxy服务之后（假设端口号是<code>5525</code>)，可以访问<a href=\"http://127.0.0.1:5525/ssl-certificate\" target=\"_blank\" rel=\"external\">http://127.0.0.1:5525/ssl-certificate</a>获取<strong>Hiproxy Custom CA</strong>的根证书。</p>\n<p>这个地址，可以在<a href=\"http://127.0.0.1:5525/\" target=\"_blank\" rel=\"external\">http://127.0.0.1:5525/</a>中找到，如下图：</p>\n<p><img src=\"../../images/hiproxy_start_page.png\" width=\"500\"></p>\n<h2 id=\"安装证书\"><a href=\"#安装证书\" class=\"headerlink\" title=\"安装证书\"></a>安装证书</h2><p>下面将分别介绍OSX、iOS、Windows和Android中如何安装根证书。</p>\n<h3 id=\"OSX系统\"><a href=\"#OSX系统\" class=\"headerlink\" title=\"OSX系统\"></a>OSX系统</h3><ol>\n<li><p>下载完成根证书之后，双击<code>Hiproxy_Custom_CA_Certificate.pem</code>导入证书到钥匙串。</p>\n</li>\n<li><p>在弹出的对话框中输入用户密码。</p>\n</li>\n<li><p>此时证书是不受信任状态，双击刚才导入的证书。</p>\n</li>\n</ol>\n<p><img src=\"../../images/import_root_cert.png\" width=\"680\"></p>\n<ol>\n<li>在<strong>信任</strong> &gt; <strong>使用此证书时</strong>下面选择<strong>始终信任</strong>。</li>\n</ol>\n<p><img src=\"../../images/trust_root_cert.png\" width=\"680\"></p>\n<ol>\n<li>关闭对话框，此时证书已经是被信任状态。</li>\n</ol>\n<p><img src=\"../../images/root_cert_trusted.png\" width=\"680\"></p>\n<h3 id=\"iOS系统\"><a href=\"#iOS系统\" class=\"headerlink\" title=\"iOS系统\"></a>iOS系统</h3><ol>\n<li><p>下载完成根证书之后发送到手机并打开。</p>\n</li>\n<li><p>点击右上角的<strong>安装</strong>。</p>\n</li>\n</ol>\n<p><img src=\"../../images/ios_install_cert_1.jpg\" width=\"375\"></p>\n<ol>\n<li>再次点击右上角的<strong>安装</strong>。</li>\n</ol>\n<p><img src=\"../../images/ios_install_cert_2.jpg\" width=\"375\"></p>\n<ol>\n<li>完成安装，点击右上角<strong>完成</strong>退出。</li>\n</ol>\n<p><img src=\"../../images/ios_install_cert_3.jpg\" width=\"375\"></p>\n<ol>\n<li>如果<strong>iOS系统版本 &gt;= 10.3</strong>，需要在<strong>设置</strong> &gt; <strong>通用</strong> &gt; <strong>关于本机</strong>中点击<strong>证书信任设置</strong>。</li>\n</ol>\n<p><img src=\"../../images/ios_install_cert_4.jpg\" width=\"375\"></p>\n<ol>\n<li>打开开关<strong>Hiproxy Custom CA</strong>。</li>\n</ol>\n<p><img src=\"../../images/ios_install_cert_5.jpg\" width=\"375\"></p>\n<h3 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h3><ol>\n<li><p>下载完成根证书之后，双击<code>Hiproxy_Custom_CA_Certificate.crt</code>安装证书。</p>\n</li>\n<li><p>在弹出的对话框中点击<strong>安装证书</strong>。</p>\n</li>\n</ol>\n<p><img src=\"../../images/windows_install_cert.png\" width=\"420\"></p>\n<ol>\n<li>点击<strong>下一步</strong>。</li>\n</ol>\n<p><img src=\"../../images/windows_step_1.png\" width=\"420\"></p>\n<ol>\n<li>选择<strong>将所有的证书放入下列存储(P)</strong>，点击<strong>浏览(R)</strong>，然后选择<strong>受信任的根证书颁发机构</strong>，点击<strong>确定</strong>。</li>\n</ol>\n<p><img src=\"../../images/windows_step_2.png\" width=\"420\"></p>\n<ol>\n<li>点击<strong>下一步</strong>、<strong>完成</strong>。根据页面提示完成根证书安装。。</li>\n</ol>\n<p><img src=\"../../images/windows_install_finish.png\" width=\"420\"></p>\n<h3 id=\"Android\"><a href=\"#Android\" class=\"headerlink\" title=\"Android\"></a>Android</h3><ol>\n<li><p>下载完成根证书之后发送到手机。</p>\n</li>\n<li><p>在<strong>设置</strong> &gt; <strong>安全</strong>中点击<strong>从SD卡安装</strong>。</p>\n</li>\n</ol>\n<p><img src=\"../../images/android_install_cert_1.png\" width=\"375\"></p>\n<ol>\n<li>输入解锁密码，然后输入证书名称，比如<strong>HiproxyCustomCA</strong>，点击<strong>确定</strong>。</li>\n</ol>\n<p><img src=\"../../images/android_install_cert_2.png\" width=\"375\"></p>\n<ol>\n<li>在<strong>设置</strong> &gt; <strong>安全</strong> &gt; <strong>受信任的证书</strong> &gt; <strong>用户</strong>中，如果能看到hiproxy的根证书，表示安装成功。</li>\n</ol>\n<p><img src=\"../../images/android_install_cert_3.png\" width=\"375\"></p>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<p>hiporxy会自己生成一个根证书，扮演CA的角色（Hiproxy Custom CA）。hiproxy在代理https请求的时候，会自动生成证书并使用hiproxy的根证书签名。</p>\n<p>由于系统是不信任hiproxy根证书的，所以需要我们自己手动安装信任hiproxy的根证书。</p>\n<h2 id=\"下载证书\"><a href=\"#下载证书\" class=\"headerlink\" title=\"下载证书\"></a>下载证书</h2><p>启动hiproxy服务之后（假设端口号是<code>5525</code>)，可以访问<a href=\"http://127.0.0.1:5525/ssl-certificate\" target=\"_blank\" rel=\"external\">http://127.0.0.1:5525/ssl-certificate</a>获取<strong>Hiproxy Custom CA</strong>的根证书。</p>\n<p>这个地址，可以在<a href=\"http://127.0.0.1:5525/\" target=\"_blank\" rel=\"external\">http://127.0.0.1:5525/</a>中找到，如下图：</p>\n<p><img src=\"../../images/hiproxy_start_page.png\" width=\"500\"></p>\n<h2 id=\"安装证书\"><a href=\"#安装证书\" class=\"headerlink\" title=\"安装证书\"></a>安装证书</h2><p>下面将分别介绍OSX、iOS、Windows和Android中如何安装根证书。</p>\n<h3 id=\"OSX系统\"><a href=\"#OSX系统\" class=\"headerlink\" title=\"OSX系统\"></a>OSX系统</h3><ol>\n<li><p>下载完成根证书之后，双击<code>Hiproxy_Custom_CA_Certificate.pem</code>导入证书到钥匙串。</p>\n</li>\n<li><p>在弹出的对话框中输入用户密码。</p>\n</li>\n<li><p>此时证书是不受信任状态，双击刚才导入的证书。</p>\n</li>\n</ol>\n<p><img src=\"../../images/import_root_cert.png\" width=\"680\"></p>\n<ol>\n<li>在<strong>信任</strong> &gt; <strong>使用此证书时</strong>下面选择<strong>始终信任</strong>。</li>\n</ol>\n<p><img src=\"../../images/trust_root_cert.png\" width=\"680\"></p>\n<ol>\n<li>关闭对话框，此时证书已经是被信任状态。</li>\n</ol>\n<p><img src=\"../../images/root_cert_trusted.png\" width=\"680\"></p>\n<h3 id=\"iOS系统\"><a href=\"#iOS系统\" class=\"headerlink\" title=\"iOS系统\"></a>iOS系统</h3><ol>\n<li><p>下载完成根证书之后发送到手机并打开。</p>\n</li>\n<li><p>点击右上角的<strong>安装</strong>。</p>\n</li>\n</ol>\n<p><img src=\"../../images/ios_install_cert_1.jpg\" width=\"375\"></p>\n<ol>\n<li>再次点击右上角的<strong>安装</strong>。</li>\n</ol>\n<p><img src=\"../../images/ios_install_cert_2.jpg\" width=\"375\"></p>\n<ol>\n<li>完成安装，点击右上角<strong>完成</strong>退出。</li>\n</ol>\n<p><img src=\"../../images/ios_install_cert_3.jpg\" width=\"375\"></p>\n<ol>\n<li>如果<strong>iOS系统版本 &gt;= 10.3</strong>，需要在<strong>设置</strong> &gt; <strong>通用</strong> &gt; <strong>关于本机</strong>中点击<strong>证书信任设置</strong>。</li>\n</ol>\n<p><img src=\"../../images/ios_install_cert_4.jpg\" width=\"375\"></p>\n<ol>\n<li>打开开关<strong>Hiproxy Custom CA</strong>。</li>\n</ol>\n<p><img src=\"../../images/ios_install_cert_5.jpg\" width=\"375\"></p>\n<h3 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h3><ol>\n<li><p>下载完成根证书之后，双击<code>Hiproxy_Custom_CA_Certificate.crt</code>安装证书。</p>\n</li>\n<li><p>在弹出的对话框中点击<strong>安装证书</strong>。</p>\n</li>\n</ol>\n<p><img src=\"../../images/windows_install_cert.png\" width=\"420\"></p>\n<ol>\n<li>点击<strong>下一步</strong>。</li>\n</ol>\n<p><img src=\"../../images/windows_step_1.png\" width=\"420\"></p>\n<ol>\n<li>选择<strong>将所有的证书放入下列存储(P)</strong>，点击<strong>浏览(R)</strong>，然后选择<strong>受信任的根证书颁发机构</strong>，点击<strong>确定</strong>。</li>\n</ol>\n<p><img src=\"../../images/windows_step_2.png\" width=\"420\"></p>\n<ol>\n<li>点击<strong>下一步</strong>、<strong>完成</strong>。根据页面提示完成根证书安装。。</li>\n</ol>\n<p><img src=\"../../images/windows_install_finish.png\" width=\"420\"></p>\n<h3 id=\"Android\"><a href=\"#Android\" class=\"headerlink\" title=\"Android\"></a>Android</h3><ol>\n<li><p>下载完成根证书之后发送到手机。</p>\n</li>\n<li><p>在<strong>设置</strong> &gt; <strong>安全</strong>中点击<strong>从SD卡安装</strong>。</p>\n</li>\n</ol>\n<p><img src=\"../../images/android_install_cert_1.png\" width=\"375\"></p>\n<ol>\n<li>输入解锁密码，然后输入证书名称，比如<strong>HiproxyCustomCA</strong>，点击<strong>确定</strong>。</li>\n</ol>\n<p><img src=\"../../images/android_install_cert_2.png\" width=\"375\"></p>\n<ol>\n<li>在<strong>设置</strong> &gt; <strong>安全</strong> &gt; <strong>受信任的证书</strong> &gt; <strong>用户</strong>中，如果能看到hiproxy的根证书，表示安装成功。</li>\n</ol>\n<p><img src=\"../../images/android_install_cert_3.png\" width=\"375\"></p>\n"},{"title":"CLI Command","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n> \n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 简介\n\nhiproxy的CLI提供了`start`/`stop`/`state`/`open`等命令，如果这些命令不能满足你的需求，也可以为hiproxy添加新的命令。\n\n新增的命令需要配置的内容为：`命令名称`、`描述`、`使用方法`、`处理函数`和`命令选项参数`。对应的字段为：\n\n* **命令名称（command）**：`<String>`，比如：`'hello'`。\n* **描述信息（describe）**：`<String>`，简单介绍命令的作用以及其他的信息，比如：`'A test command that say hello to you.'`。\n* **使用方法（usage）**：`<String>`，命令的使用方法提示信息，比如：`'hello [--name <name>] [-xodD]'`。\n* **处理函数（fn）**：`<Function>`，执行命令时，调用的函数。函数调用时`this`值为命令行参数解析后的对象。\n* **命令选项（option）**：`<Object>`，命令对应的选项，`key:value`形式。可以参考<https://github.com/hemsl/hemsl>。\n\n## 示例\n\n一个完整的命令示例如下：\n\n```js\n{\n  command: 'hello',\n  describe: 'A test command that say hello to you.',\n  usage: 'hello [--name <name>] [-xodD]',\n  fn: function () {\n    var cliArgs = this;\n    if (cliArgs.name ) {\n      console.log('your name is', cliArgs.name.green);\n    }\n\n    if (cliArgs.age ) {\n      console.log('your are', cliArgs.age.green, 'years old');\n    }\n  },\n  options: {\n    'name <name>': {\n      alias: 'n',\n      describe: 'your name'\n    },\n    'age': {\n      alias: 'a',\n      describe: 'your age'\n    }\n  }\n}\n```\n\n\n","source":"developers/cli_command.md","raw":"title: CLI Command\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n> \n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 简介\n\nhiproxy的CLI提供了`start`/`stop`/`state`/`open`等命令，如果这些命令不能满足你的需求，也可以为hiproxy添加新的命令。\n\n新增的命令需要配置的内容为：`命令名称`、`描述`、`使用方法`、`处理函数`和`命令选项参数`。对应的字段为：\n\n* **命令名称（command）**：`<String>`，比如：`'hello'`。\n* **描述信息（describe）**：`<String>`，简单介绍命令的作用以及其他的信息，比如：`'A test command that say hello to you.'`。\n* **使用方法（usage）**：`<String>`，命令的使用方法提示信息，比如：`'hello [--name <name>] [-xodD]'`。\n* **处理函数（fn）**：`<Function>`，执行命令时，调用的函数。函数调用时`this`值为命令行参数解析后的对象。\n* **命令选项（option）**：`<Object>`，命令对应的选项，`key:value`形式。可以参考<https://github.com/hemsl/hemsl>。\n\n## 示例\n\n一个完整的命令示例如下：\n\n```js\n{\n  command: 'hello',\n  describe: 'A test command that say hello to you.',\n  usage: 'hello [--name <name>] [-xodD]',\n  fn: function () {\n    var cliArgs = this;\n    if (cliArgs.name ) {\n      console.log('your name is', cliArgs.name.green);\n    }\n\n    if (cliArgs.age ) {\n      console.log('your are', cliArgs.age.green, 'years old');\n    }\n  },\n  options: {\n    'name <name>': {\n      alias: 'n',\n      describe: 'your name'\n    },\n    'age': {\n      alias: 'a',\n      describe: 'your age'\n    }\n  }\n}\n```\n\n\n","date":"2017-09-16T15:46:28.000Z","updated":"2017-09-16T15:46:28.000Z","path":"developers/cli_command.html","comments":1,"layout":"page","_id":"cj7nia0em0009hy0f37004oiy","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>hiproxy的CLI提供了<code>start</code>/<code>stop</code>/<code>state</code>/<code>open</code>等命令，如果这些命令不能满足你的需求，也可以为hiproxy添加新的命令。</p>\n<p>新增的命令需要配置的内容为：<code>命令名称</code>、<code>描述</code>、<code>使用方法</code>、<code>处理函数</code>和<code>命令选项参数</code>。对应的字段为：</p>\n<ul>\n<li><strong>命令名称（command）</strong>：<code>&lt;String&gt;</code>，比如：<code>&#39;hello&#39;</code>。</li>\n<li><strong>描述信息（describe）</strong>：<code>&lt;String&gt;</code>，简单介绍命令的作用以及其他的信息，比如：<code>&#39;A test command that say hello to you.&#39;</code>。</li>\n<li><strong>使用方法（usage）</strong>：<code>&lt;String&gt;</code>，命令的使用方法提示信息，比如：<code>&#39;hello [--name &lt;name&gt;] [-xodD]&#39;</code>。</li>\n<li><strong>处理函数（fn）</strong>：<code>&lt;Function&gt;</code>，执行命令时，调用的函数。函数调用时<code>this</code>值为命令行参数解析后的对象。</li>\n<li><strong>命令选项（option）</strong>：<code>&lt;Object&gt;</code>，命令对应的选项，<code>key:value</code>形式。可以参考<a href=\"https://github.com/hemsl/hemsl\" target=\"_blank\" rel=\"external\">https://github.com/hemsl/hemsl</a>。</li>\n</ul>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>一个完整的命令示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  command: <span class=\"string\">'hello'</span>,</div><div class=\"line\">  describe: <span class=\"string\">'A test command that say hello to you.'</span>,</div><div class=\"line\">  usage: <span class=\"string\">'hello [--name &lt;name&gt;] [-xodD]'</span>,</div><div class=\"line\">  fn: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> cliArgs = <span class=\"keyword\">this</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span> (cliArgs.name ) &#123;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'your name is'</span>, cliArgs.name.green);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span> (cliArgs.age ) &#123;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'your are'</span>, cliArgs.age.green, <span class=\"string\">'years old'</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  options: &#123;</div><div class=\"line\">    <span class=\"string\">'name &lt;name&gt;'</span>: &#123;</div><div class=\"line\">      alias: <span class=\"string\">'n'</span>,</div><div class=\"line\">      describe: <span class=\"string\">'your name'</span></div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"string\">'age'</span>: &#123;</div><div class=\"line\">      alias: <span class=\"string\">'a'</span>,</div><div class=\"line\">      describe: <span class=\"string\">'your age'</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>hiproxy的CLI提供了<code>start</code>/<code>stop</code>/<code>state</code>/<code>open</code>等命令，如果这些命令不能满足你的需求，也可以为hiproxy添加新的命令。</p>\n<p>新增的命令需要配置的内容为：<code>命令名称</code>、<code>描述</code>、<code>使用方法</code>、<code>处理函数</code>和<code>命令选项参数</code>。对应的字段为：</p>\n<ul>\n<li><strong>命令名称（command）</strong>：<code>&lt;String&gt;</code>，比如：<code>&#39;hello&#39;</code>。</li>\n<li><strong>描述信息（describe）</strong>：<code>&lt;String&gt;</code>，简单介绍命令的作用以及其他的信息，比如：<code>&#39;A test command that say hello to you.&#39;</code>。</li>\n<li><strong>使用方法（usage）</strong>：<code>&lt;String&gt;</code>，命令的使用方法提示信息，比如：<code>&#39;hello [--name &lt;name&gt;] [-xodD]&#39;</code>。</li>\n<li><strong>处理函数（fn）</strong>：<code>&lt;Function&gt;</code>，执行命令时，调用的函数。函数调用时<code>this</code>值为命令行参数解析后的对象。</li>\n<li><strong>命令选项（option）</strong>：<code>&lt;Object&gt;</code>，命令对应的选项，<code>key:value</code>形式。可以参考<a href=\"https://github.com/hemsl/hemsl\" target=\"_blank\" rel=\"external\">https://github.com/hemsl/hemsl</a>。</li>\n</ul>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>一个完整的命令示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  command: <span class=\"string\">'hello'</span>,</div><div class=\"line\">  describe: <span class=\"string\">'A test command that say hello to you.'</span>,</div><div class=\"line\">  usage: <span class=\"string\">'hello [--name &lt;name&gt;] [-xodD]'</span>,</div><div class=\"line\">  fn: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> cliArgs = <span class=\"keyword\">this</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span> (cliArgs.name ) &#123;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'your name is'</span>, cliArgs.name.green);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span> (cliArgs.age ) &#123;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'your are'</span>, cliArgs.age.green, <span class=\"string\">'years old'</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  options: &#123;</div><div class=\"line\">    <span class=\"string\">'name &lt;name&gt;'</span>: &#123;</div><div class=\"line\">      alias: <span class=\"string\">'n'</span>,</div><div class=\"line\">      describe: <span class=\"string\">'your name'</span></div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"string\">'age'</span>: &#123;</div><div class=\"line\">      alias: <span class=\"string\">'a'</span>,</div><div class=\"line\">      describe: <span class=\"string\">'your age'</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"title":"hiproxy开发者指南","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!","source":"developers/index.md","raw":"title: hiproxy开发者指南\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"developers/index.html","comments":1,"layout":"page","_id":"cj7nia0en000ahy0f5rcjo4hd","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n"},{"title":"Rewrite Directive","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n> \n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 简介\n\n**rewrite指令**可以配置的内容为：`指令名称`、`作用域`和`处理函数`。对应的字段为：\n\n* **指令名称（name）**：`<String>`，比如：`'add'`。\n* **作用域（scope）**：`<Array>`，指令对应的作用域，只有在这里指定的作用域里面才会执行。可选择的作用域为：`global`、`domain`、`location`、`request`和`response`。\n* **处理函数（fn）**：`<Function>`，执行指令时，调用的函数，详细信息请查看[处理函数](#handler-function)。\n\n## 示例\n\n一个完整的指令示例如下：\n\n```js\n{\n  name: 'add',\n  scope: ['global', 'domain', 'location'],\n  fn: function (key, a, b) {\n    var props = this.props;\n    var value = Number(a) + Number(b);\n\n    this.props[key] = value;\n  }\n}\n```\n\n<a name=\"handler-function\"></a>\n\n## 处理函数\n\n处理函数会在hiproxy执行指令的时候被调用，传入rewrite配置文件中这个指令对应的参数，并设置`this`。\n\n### 参数\n\n处理函数会被调用是，会传入rewrite配置文件中这个指令对应的参数，例如配置了指令`proxy_set_header Host hiproxy.org`，那么在执行**处理函数**时，传入的参数为：`('Host', 'hiproxy.org')`\n\n### this\n\n不同作用域中的指令执行时，this值也不同，下面列举了所有作用域指令对应的this值:\n\n- **global**: 整个rewrite对象-`{props: <Object>, domains: <Array>, commands: <Array>}}`\n- **domain**: domain对象-`{domain: <String>, props: <Object>, location: <Array>, commands: <Array>}}`\n- **location**: location对象-`{props: <Object>, location: <String>, commands: <Array>}}`\n- **request**: `{request: <http.IncomingMessage>}`\n- **response**: `{response: <http.ServerResponse>}`\n","source":"developers/directive.md","raw":"title: Rewrite Directive\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n> \n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 简介\n\n**rewrite指令**可以配置的内容为：`指令名称`、`作用域`和`处理函数`。对应的字段为：\n\n* **指令名称（name）**：`<String>`，比如：`'add'`。\n* **作用域（scope）**：`<Array>`，指令对应的作用域，只有在这里指定的作用域里面才会执行。可选择的作用域为：`global`、`domain`、`location`、`request`和`response`。\n* **处理函数（fn）**：`<Function>`，执行指令时，调用的函数，详细信息请查看[处理函数](#handler-function)。\n\n## 示例\n\n一个完整的指令示例如下：\n\n```js\n{\n  name: 'add',\n  scope: ['global', 'domain', 'location'],\n  fn: function (key, a, b) {\n    var props = this.props;\n    var value = Number(a) + Number(b);\n\n    this.props[key] = value;\n  }\n}\n```\n\n<a name=\"handler-function\"></a>\n\n## 处理函数\n\n处理函数会在hiproxy执行指令的时候被调用，传入rewrite配置文件中这个指令对应的参数，并设置`this`。\n\n### 参数\n\n处理函数会被调用是，会传入rewrite配置文件中这个指令对应的参数，例如配置了指令`proxy_set_header Host hiproxy.org`，那么在执行**处理函数**时，传入的参数为：`('Host', 'hiproxy.org')`\n\n### this\n\n不同作用域中的指令执行时，this值也不同，下面列举了所有作用域指令对应的this值:\n\n- **global**: 整个rewrite对象-`{props: <Object>, domains: <Array>, commands: <Array>}}`\n- **domain**: domain对象-`{domain: <String>, props: <Object>, location: <Array>, commands: <Array>}}`\n- **location**: location对象-`{props: <Object>, location: <String>, commands: <Array>}}`\n- **request**: `{request: <http.IncomingMessage>}`\n- **response**: `{response: <http.ServerResponse>}`\n","date":"2017-09-16T15:46:32.000Z","updated":"2017-09-16T15:46:32.000Z","path":"developers/directive.html","comments":1,"layout":"page","_id":"cj7nia0er000bhy0fqyr9i249","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><strong>rewrite指令</strong>可以配置的内容为：<code>指令名称</code>、<code>作用域</code>和<code>处理函数</code>。对应的字段为：</p>\n<ul>\n<li><strong>指令名称（name）</strong>：<code>&lt;String&gt;</code>，比如：<code>&#39;add&#39;</code>。</li>\n<li><strong>作用域（scope）</strong>：<code>&lt;Array&gt;</code>，指令对应的作用域，只有在这里指定的作用域里面才会执行。可选择的作用域为：<code>global</code>、<code>domain</code>、<code>location</code>、<code>request</code>和<code>response</code>。</li>\n<li><strong>处理函数（fn）</strong>：<code>&lt;Function&gt;</code>，执行指令时，调用的函数，详细信息请查看<a href=\"#handler-function\">处理函数</a>。</li>\n</ul>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>一个完整的指令示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  name: <span class=\"string\">'add'</span>,</div><div class=\"line\">  scope: [<span class=\"string\">'global'</span>, <span class=\"string\">'domain'</span>, <span class=\"string\">'location'</span>],</div><div class=\"line\">  fn: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">key, a, b</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> props = <span class=\"keyword\">this</span>.props;</div><div class=\"line\">    <span class=\"keyword\">var</span> value = <span class=\"built_in\">Number</span>(a) + <span class=\"built_in\">Number</span>(b);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">this</span>.props[key] = value;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a name=\"handler-function\"></a></p>\n<h2 id=\"处理函数\"><a href=\"#处理函数\" class=\"headerlink\" title=\"处理函数\"></a>处理函数</h2><p>处理函数会在hiproxy执行指令的时候被调用，传入rewrite配置文件中这个指令对应的参数，并设置<code>this</code>。</p>\n<h3 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数\"></a>参数</h3><p>处理函数会被调用是，会传入rewrite配置文件中这个指令对应的参数，例如配置了指令<code>proxy_set_header Host hiproxy.org</code>，那么在执行<strong>处理函数</strong>时，传入的参数为：<code>(&#39;Host&#39;, &#39;hiproxy.org&#39;)</code></p>\n<h3 id=\"this\"><a href=\"#this\" class=\"headerlink\" title=\"this\"></a>this</h3><p>不同作用域中的指令执行时，this值也不同，下面列举了所有作用域指令对应的this值:</p>\n<ul>\n<li><strong>global</strong>: 整个rewrite对象-<code>{props: &lt;Object&gt;, domains: &lt;Array&gt;, commands: &lt;Array&gt;}}</code></li>\n<li><strong>domain</strong>: domain对象-<code>{domain: &lt;String&gt;, props: &lt;Object&gt;, location: &lt;Array&gt;, commands: &lt;Array&gt;}}</code></li>\n<li><strong>location</strong>: location对象-<code>{props: &lt;Object&gt;, location: &lt;String&gt;, commands: &lt;Array&gt;}}</code></li>\n<li><strong>request</strong>: <code>{request: &lt;http.IncomingMessage&gt;}</code></li>\n<li><strong>response</strong>: <code>{response: &lt;http.ServerResponse&gt;}</code></li>\n</ul>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><strong>rewrite指令</strong>可以配置的内容为：<code>指令名称</code>、<code>作用域</code>和<code>处理函数</code>。对应的字段为：</p>\n<ul>\n<li><strong>指令名称（name）</strong>：<code>&lt;String&gt;</code>，比如：<code>&#39;add&#39;</code>。</li>\n<li><strong>作用域（scope）</strong>：<code>&lt;Array&gt;</code>，指令对应的作用域，只有在这里指定的作用域里面才会执行。可选择的作用域为：<code>global</code>、<code>domain</code>、<code>location</code>、<code>request</code>和<code>response</code>。</li>\n<li><strong>处理函数（fn）</strong>：<code>&lt;Function&gt;</code>，执行指令时，调用的函数，详细信息请查看<a href=\"#handler-function\">处理函数</a>。</li>\n</ul>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>一个完整的指令示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  name: <span class=\"string\">'add'</span>,</div><div class=\"line\">  scope: [<span class=\"string\">'global'</span>, <span class=\"string\">'domain'</span>, <span class=\"string\">'location'</span>],</div><div class=\"line\">  fn: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">key, a, b</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> props = <span class=\"keyword\">this</span>.props;</div><div class=\"line\">    <span class=\"keyword\">var</span> value = <span class=\"built_in\">Number</span>(a) + <span class=\"built_in\">Number</span>(b);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">this</span>.props[key] = value;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a name=\"handler-function\"></a></p>\n<h2 id=\"处理函数\"><a href=\"#处理函数\" class=\"headerlink\" title=\"处理函数\"></a>处理函数</h2><p>处理函数会在hiproxy执行指令的时候被调用，传入rewrite配置文件中这个指令对应的参数，并设置<code>this</code>。</p>\n<h3 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数\"></a>参数</h3><p>处理函数会被调用是，会传入rewrite配置文件中这个指令对应的参数，例如配置了指令<code>proxy_set_header Host hiproxy.org</code>，那么在执行<strong>处理函数</strong>时，传入的参数为：<code>(&#39;Host&#39;, &#39;hiproxy.org&#39;)</code></p>\n<h3 id=\"this\"><a href=\"#this\" class=\"headerlink\" title=\"this\"></a>this</h3><p>不同作用域中的指令执行时，this值也不同，下面列举了所有作用域指令对应的this值:</p>\n<ul>\n<li><strong>global</strong>: 整个rewrite对象-<code>{props: &lt;Object&gt;, domains: &lt;Array&gt;, commands: &lt;Array&gt;}}</code></li>\n<li><strong>domain</strong>: domain对象-<code>{domain: &lt;String&gt;, props: &lt;Object&gt;, location: &lt;Array&gt;, commands: &lt;Array&gt;}}</code></li>\n<li><strong>location</strong>: location对象-<code>{props: &lt;Object&gt;, location: &lt;String&gt;, commands: &lt;Array&gt;}}</code></li>\n<li><strong>request</strong>: <code>{request: &lt;http.IncomingMessage&gt;}</code></li>\n<li><strong>response</strong>: <code>{response: &lt;http.ServerResponse&gt;}</code></li>\n</ul>\n"},{"title":"Plugin 插件开发指南","_content":"\nhiproxy提供了一套插件开发机制，这个机制很简单：插件开发完成后，将插件安装到全局，hiproxy启动时会自动查找安装的所有插件。\n\n开发者开发新插件时，可以参考`hiproxy-plugin-example`: <https://github.com/hiproxy/hiproxy-plugin-example>。这是一个完整的插件示例，你可以基于这个示例修改。\n\n**插件就是一个普通的npm模块，不需要将hiproxy作为依赖安装到插件中。**\n\n<br />\n\n## 插件结构\n\nhiproxy插件必须满足三个条件：\n\n1. __插件必须作为一个独立的npm模块，这个模块需要导出一个对象，这个对象可以指定三个属性__\n```js\nmodule.exports = {\n  // CLI commands\n  commands: commands,\n\n  // Rewrite config redirectives\n  directives: directives,\n  \n  // HTTP server routes\n  routes: routes\n};\n```\n\n* **commands**: `<Array>`，用来扩展`hiproxy`的**CLI命令**，数组中每个对象作为一个命令配置，具体配置见[命令配置](./cli_command.html)。\n\n* **directives**: `<Array>`，用来扩展`hiproxy`的**rewrite指令**，数组中每个对象作为一个指令配置，具体配置见[指令配置](./directive.html)。\n\n* **routes**: `<Array>`，用来扩展`hiproxy`的**页面路由**，数组中每个对象作为一个路由配置，具体配置见[路由配置](./route.html)。\n\n2. __插件模块必须安装到全局__\n\n3. __插件名称必须以`hiproxy-plugin-`开头__\n\n## 代码示例\n\n<https://github.com/hiproxy/hiproxy-plugin-example/blob/master/index.js#L14-L23>\n\n## 插件发布\n\n插件开发、测试完成之后，可以将其发布到\bnpm。\n\n发布的过程和方法，跟其他npm模块的发布一样，因为hiproxy的插件，**就是一个**遵循了特定规则的**普通npm\b模块**。\n\n\n## 温馨提示\n\n由于hiproxy只会从`npm root -g`所在的目录去查找名称以`hiproxy-plugin-`开头的插件，所以在本地开发时，hiproxy加载不到新的插件。\n\n可以使用`npm link`，创建一个符号链接，这样就能一边开发一边调试开发中的插件。详情请参考npm文档：[npm link](https://docs.npmjs.com/cli/link)。\n","source":"developers/plugin.md","raw":"title: Plugin 插件开发指南\n---\n\nhiproxy提供了一套插件开发机制，这个机制很简单：插件开发完成后，将插件安装到全局，hiproxy启动时会自动查找安装的所有插件。\n\n开发者开发新插件时，可以参考`hiproxy-plugin-example`: <https://github.com/hiproxy/hiproxy-plugin-example>。这是一个完整的插件示例，你可以基于这个示例修改。\n\n**插件就是一个普通的npm模块，不需要将hiproxy作为依赖安装到插件中。**\n\n<br />\n\n## 插件结构\n\nhiproxy插件必须满足三个条件：\n\n1. __插件必须作为一个独立的npm模块，这个模块需要导出一个对象，这个对象可以指定三个属性__\n```js\nmodule.exports = {\n  // CLI commands\n  commands: commands,\n\n  // Rewrite config redirectives\n  directives: directives,\n  \n  // HTTP server routes\n  routes: routes\n};\n```\n\n* **commands**: `<Array>`，用来扩展`hiproxy`的**CLI命令**，数组中每个对象作为一个命令配置，具体配置见[命令配置](./cli_command.html)。\n\n* **directives**: `<Array>`，用来扩展`hiproxy`的**rewrite指令**，数组中每个对象作为一个指令配置，具体配置见[指令配置](./directive.html)。\n\n* **routes**: `<Array>`，用来扩展`hiproxy`的**页面路由**，数组中每个对象作为一个路由配置，具体配置见[路由配置](./route.html)。\n\n2. __插件模块必须安装到全局__\n\n3. __插件名称必须以`hiproxy-plugin-`开头__\n\n## 代码示例\n\n<https://github.com/hiproxy/hiproxy-plugin-example/blob/master/index.js#L14-L23>\n\n## 插件发布\n\n插件开发、测试完成之后，可以将其发布到\bnpm。\n\n发布的过程和方法，跟其他npm模块的发布一样，因为hiproxy的插件，**就是一个**遵循了特定规则的**普通npm\b模块**。\n\n\n## 温馨提示\n\n由于hiproxy只会从`npm root -g`所在的目录去查找名称以`hiproxy-plugin-`开头的插件，所以在本地开发时，hiproxy加载不到新的插件。\n\n可以使用`npm link`，创建一个符号链接，这样就能一边开发一边调试开发中的插件。详情请参考npm文档：[npm link](https://docs.npmjs.com/cli/link)。\n","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"developers/plugin.html","comments":1,"layout":"page","_id":"cj7nia0et000chy0f7fpqzxqt","content":"<p>hiproxy提供了一套插件开发机制，这个机制很简单：插件开发完成后，将插件安装到全局，hiproxy启动时会自动查找安装的所有插件。</p>\n<p>开发者开发新插件时，可以参考<code>hiproxy-plugin-example</code>: <a href=\"https://github.com/hiproxy/hiproxy-plugin-example\" target=\"_blank\" rel=\"external\">https://github.com/hiproxy/hiproxy-plugin-example</a>。这是一个完整的插件示例，你可以基于这个示例修改。</p>\n<p><strong>插件就是一个普通的npm模块，不需要将hiproxy作为依赖安装到插件中。</strong></p>\n<p><br></p>\n<h2 id=\"插件结构\"><a href=\"#插件结构\" class=\"headerlink\" title=\"插件结构\"></a>插件结构</h2><p>hiproxy插件必须满足三个条件：</p>\n<ol>\n<li><strong>插件必须作为一个独立的npm模块，这个模块需要导出一个对象，这个对象可以指定三个属性</strong><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</div><div class=\"line\">  <span class=\"comment\">// CLI commands</span></div><div class=\"line\">  commands: commands,</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// Rewrite config redirectives</span></div><div class=\"line\">  directives: directives,</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">// HTTP server routes</span></div><div class=\"line\">  routes: routes</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<ul>\n<li><p><strong>commands</strong>: <code>&lt;Array&gt;</code>，用来扩展<code>hiproxy</code>的<strong>CLI命令</strong>，数组中每个对象作为一个命令配置，具体配置见<a href=\"./cli_command.html\">命令配置</a>。</p>\n</li>\n<li><p><strong>directives</strong>: <code>&lt;Array&gt;</code>，用来扩展<code>hiproxy</code>的<strong>rewrite指令</strong>，数组中每个对象作为一个指令配置，具体配置见<a href=\"./directive.html\">指令配置</a>。</p>\n</li>\n<li><p><strong>routes</strong>: <code>&lt;Array&gt;</code>，用来扩展<code>hiproxy</code>的<strong>页面路由</strong>，数组中每个对象作为一个路由配置，具体配置见<a href=\"./route.html\">路由配置</a>。</p>\n</li>\n</ul>\n<ol>\n<li><p><strong>插件模块必须安装到全局</strong></p>\n</li>\n<li><p><strong>插件名称必须以<code>hiproxy-plugin-</code>开头</strong></p>\n</li>\n</ol>\n<h2 id=\"代码示例\"><a href=\"#代码示例\" class=\"headerlink\" title=\"代码示例\"></a>代码示例</h2><p><a href=\"https://github.com/hiproxy/hiproxy-plugin-example/blob/master/index.js#L14-L23\" target=\"_blank\" rel=\"external\">https://github.com/hiproxy/hiproxy-plugin-example/blob/master/index.js#L14-L23</a></p>\n<h2 id=\"插件发布\"><a href=\"#插件发布\" class=\"headerlink\" title=\"插件发布\"></a>插件发布</h2><p>插件开发、测试完成之后，可以将其发布到\bnpm。</p>\n<p>发布的过程和方法，跟其他npm模块的发布一样，因为hiproxy的插件，<strong>就是一个</strong>遵循了特定规则的<strong>普通npm\b模块</strong>。</p>\n<h2 id=\"温馨提示\"><a href=\"#温馨提示\" class=\"headerlink\" title=\"温馨提示\"></a>温馨提示</h2><p>由于hiproxy只会从<code>npm root -g</code>所在的目录去查找名称以<code>hiproxy-plugin-</code>开头的插件，所以在本地开发时，hiproxy加载不到新的插件。</p>\n<p>可以使用<code>npm link</code>，创建一个符号链接，这样就能一边开发一边调试开发中的插件。详情请参考npm文档：<a href=\"https://docs.npmjs.com/cli/link\" target=\"_blank\" rel=\"external\">npm link</a>。</p>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<p>hiproxy提供了一套插件开发机制，这个机制很简单：插件开发完成后，将插件安装到全局，hiproxy启动时会自动查找安装的所有插件。</p>\n<p>开发者开发新插件时，可以参考<code>hiproxy-plugin-example</code>: <a href=\"https://github.com/hiproxy/hiproxy-plugin-example\" target=\"_blank\" rel=\"external\">https://github.com/hiproxy/hiproxy-plugin-example</a>。这是一个完整的插件示例，你可以基于这个示例修改。</p>\n<p><strong>插件就是一个普通的npm模块，不需要将hiproxy作为依赖安装到插件中。</strong></p>\n<p><br></p>\n<h2 id=\"插件结构\"><a href=\"#插件结构\" class=\"headerlink\" title=\"插件结构\"></a>插件结构</h2><p>hiproxy插件必须满足三个条件：</p>\n<ol>\n<li><strong>插件必须作为一个独立的npm模块，这个模块需要导出一个对象，这个对象可以指定三个属性</strong><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</div><div class=\"line\">  <span class=\"comment\">// CLI commands</span></div><div class=\"line\">  commands: commands,</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// Rewrite config redirectives</span></div><div class=\"line\">  directives: directives,</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">// HTTP server routes</span></div><div class=\"line\">  routes: routes</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<ul>\n<li><p><strong>commands</strong>: <code>&lt;Array&gt;</code>，用来扩展<code>hiproxy</code>的<strong>CLI命令</strong>，数组中每个对象作为一个命令配置，具体配置见<a href=\"./cli_command.html\">命令配置</a>。</p>\n</li>\n<li><p><strong>directives</strong>: <code>&lt;Array&gt;</code>，用来扩展<code>hiproxy</code>的<strong>rewrite指令</strong>，数组中每个对象作为一个指令配置，具体配置见<a href=\"./directive.html\">指令配置</a>。</p>\n</li>\n<li><p><strong>routes</strong>: <code>&lt;Array&gt;</code>，用来扩展<code>hiproxy</code>的<strong>页面路由</strong>，数组中每个对象作为一个路由配置，具体配置见<a href=\"./route.html\">路由配置</a>。</p>\n</li>\n</ul>\n<ol>\n<li><p><strong>插件模块必须安装到全局</strong></p>\n</li>\n<li><p><strong>插件名称必须以<code>hiproxy-plugin-</code>开头</strong></p>\n</li>\n</ol>\n<h2 id=\"代码示例\"><a href=\"#代码示例\" class=\"headerlink\" title=\"代码示例\"></a>代码示例</h2><p><a href=\"https://github.com/hiproxy/hiproxy-plugin-example/blob/master/index.js#L14-L23\" target=\"_blank\" rel=\"external\">https://github.com/hiproxy/hiproxy-plugin-example/blob/master/index.js#L14-L23</a></p>\n<h2 id=\"插件发布\"><a href=\"#插件发布\" class=\"headerlink\" title=\"插件发布\"></a>插件发布</h2><p>插件开发、测试完成之后，可以将其发布到\bnpm。</p>\n<p>发布的过程和方法，跟其他npm模块的发布一样，因为hiproxy的插件，<strong>就是一个</strong>遵循了特定规则的<strong>普通npm\b模块</strong>。</p>\n<h2 id=\"温馨提示\"><a href=\"#温馨提示\" class=\"headerlink\" title=\"温馨提示\"></a>温馨提示</h2><p>由于hiproxy只会从<code>npm root -g</code>所在的目录去查找名称以<code>hiproxy-plugin-</code>开头的插件，所以在本地开发时，hiproxy加载不到新的插件。</p>\n<p>可以使用<code>npm link</code>，创建一个符号链接，这样就能一边开发一边调试开发中的插件。详情请参考npm文档：<a href=\"https://docs.npmjs.com/cli/link\" target=\"_blank\" rel=\"external\">npm link</a>。</p>\n"},{"title":"Route 页面路由配置","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n> \n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 简介\n\nhiproxy启动服务之后，可以访问`http://127.0.0.1:<port>/`页面查看服务的一些基本信息。\n\n除了上面的页面之外，hiproxy还提供了增加新页面的功能。比如插件[hiproxy-plugin-dashboard](https://github.com/hiproxy/hiproxy-plugin-dashboard)，为hiproxy增加了一个在线查看服务信息以及修改配置文件的页面，地址为：`http://127.0.0.1:<port>/dashboard/`。\n\n\n## 配置内容\n\n页面路由可以配置的内容为：`路由规则`和`渲染函数`。对应的字段为：\n\n* 路由规则（route）：`<String>`，页面的地址模式，比如：`'/dashboard(/:page)'`，细节可以查看<https://www.npmjs.com/package/url-pattern>。\n* 渲染函数（render）：`<Function>`，渲染页面，接收三个参数：`(route, request, response)`。\n\n## render方法\n\n当用户访问对应的页面时，`render()`方法会被调用，传入三个参数`(route, request, response)`。\n\n- **route**: `<Object>`，url模式匹配后的对象，比如配置了`/test(/:pageName)`之后，访问`/test/home`时`route`的值为：`{pageName: 'home'}`。\n- **request**: `<http.IncomingMessage>`，http请求对象。\n- **response**: `<http.ServerResponse>`，http响应对象。\n\n## 示例\n\n一个完整的页面扩展示例如下：\n\n```js\n{\n  route: '/test(/:pageName)',\n  render: function (route, request, response) {\n    // 这里面可以使用全局变量`hiproxyServer`来获取hiproxy服务实例\n    response.writeHead(200, {\n      'Content-Type': 'text/html',\n      'Powder-By': 'hiproxy-plugin-example'\n    });\n\n    var serverInfo = {\n      route: route,\n      pageID: route.pageName,\n      time: new Date(),\n      serverState: {\n        http_port: global.hiproxyServer.httpPort,\n        https_port: global.hiproxyServer.httpsPort,\n        cliArgs: global.args,\n        process_id: process.pid\n      }\n    };\n\n    response.end('<pre>' + JSON.stringify(serverInfo, null, 4) + '</pre>');\n  }\n}\n```\n","source":"developers/route.md","raw":"title: Route 页面路由配置\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n> \n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 简介\n\nhiproxy启动服务之后，可以访问`http://127.0.0.1:<port>/`页面查看服务的一些基本信息。\n\n除了上面的页面之外，hiproxy还提供了增加新页面的功能。比如插件[hiproxy-plugin-dashboard](https://github.com/hiproxy/hiproxy-plugin-dashboard)，为hiproxy增加了一个在线查看服务信息以及修改配置文件的页面，地址为：`http://127.0.0.1:<port>/dashboard/`。\n\n\n## 配置内容\n\n页面路由可以配置的内容为：`路由规则`和`渲染函数`。对应的字段为：\n\n* 路由规则（route）：`<String>`，页面的地址模式，比如：`'/dashboard(/:page)'`，细节可以查看<https://www.npmjs.com/package/url-pattern>。\n* 渲染函数（render）：`<Function>`，渲染页面，接收三个参数：`(route, request, response)`。\n\n## render方法\n\n当用户访问对应的页面时，`render()`方法会被调用，传入三个参数`(route, request, response)`。\n\n- **route**: `<Object>`，url模式匹配后的对象，比如配置了`/test(/:pageName)`之后，访问`/test/home`时`route`的值为：`{pageName: 'home'}`。\n- **request**: `<http.IncomingMessage>`，http请求对象。\n- **response**: `<http.ServerResponse>`，http响应对象。\n\n## 示例\n\n一个完整的页面扩展示例如下：\n\n```js\n{\n  route: '/test(/:pageName)',\n  render: function (route, request, response) {\n    // 这里面可以使用全局变量`hiproxyServer`来获取hiproxy服务实例\n    response.writeHead(200, {\n      'Content-Type': 'text/html',\n      'Powder-By': 'hiproxy-plugin-example'\n    });\n\n    var serverInfo = {\n      route: route,\n      pageID: route.pageName,\n      time: new Date(),\n      serverState: {\n        http_port: global.hiproxyServer.httpPort,\n        https_port: global.hiproxyServer.httpsPort,\n        cliArgs: global.args,\n        process_id: process.pid\n      }\n    };\n\n    response.end('<pre>' + JSON.stringify(serverInfo, null, 4) + '</pre>');\n  }\n}\n```\n","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"developers/route.html","comments":1,"layout":"page","_id":"cj7nia0ey000dhy0fot5ym355","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>hiproxy启动服务之后，可以访问<code>http://127.0.0.1:&lt;port&gt;/</code>页面查看服务的一些基本信息。</p>\n<p>除了上面的页面之外，hiproxy还提供了增加新页面的功能。比如插件<a href=\"https://github.com/hiproxy/hiproxy-plugin-dashboard\" target=\"_blank\" rel=\"external\">hiproxy-plugin-dashboard</a>，为hiproxy增加了一个在线查看服务信息以及修改配置文件的页面，地址为：<code>http://127.0.0.1:&lt;port&gt;/dashboard/</code>。</p>\n<h2 id=\"配置内容\"><a href=\"#配置内容\" class=\"headerlink\" title=\"配置内容\"></a>配置内容</h2><p>页面路由可以配置的内容为：<code>路由规则</code>和<code>渲染函数</code>。对应的字段为：</p>\n<ul>\n<li>路由规则（route）：<code>&lt;String&gt;</code>，页面的地址模式，比如：<code>&#39;/dashboard(/:page)&#39;</code>，细节可以查看<a href=\"https://www.npmjs.com/package/url-pattern\" target=\"_blank\" rel=\"external\">https://www.npmjs.com/package/url-pattern</a>。</li>\n<li>渲染函数（render）：<code>&lt;Function&gt;</code>，渲染页面，接收三个参数：<code>(route, request, response)</code>。</li>\n</ul>\n<h2 id=\"render方法\"><a href=\"#render方法\" class=\"headerlink\" title=\"render方法\"></a>render方法</h2><p>当用户访问对应的页面时，<code>render()</code>方法会被调用，传入三个参数<code>(route, request, response)</code>。</p>\n<ul>\n<li><strong>route</strong>: <code>&lt;Object&gt;</code>，url模式匹配后的对象，比如配置了<code>/test(/:pageName)</code>之后，访问<code>/test/home</code>时<code>route</code>的值为：<code>{pageName: &#39;home&#39;}</code>。</li>\n<li><strong>request</strong>: <code>&lt;http.IncomingMessage&gt;</code>，http请求对象。</li>\n<li><strong>response</strong>: <code>&lt;http.ServerResponse&gt;</code>，http响应对象。</li>\n</ul>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>一个完整的页面扩展示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  route: <span class=\"string\">'/test(/:pageName)'</span>,</div><div class=\"line\">  render: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">route, request, response</span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 这里面可以使用全局变量`hiproxyServer`来获取hiproxy服务实例</span></div><div class=\"line\">    response.writeHead(<span class=\"number\">200</span>, &#123;</div><div class=\"line\">      <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'text/html'</span>,</div><div class=\"line\">      <span class=\"string\">'Powder-By'</span>: <span class=\"string\">'hiproxy-plugin-example'</span></div><div class=\"line\">    &#125;);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">var</span> serverInfo = &#123;</div><div class=\"line\">      route: route,</div><div class=\"line\">      pageID: route.pageName,</div><div class=\"line\">      time: <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(),</div><div class=\"line\">      serverState: &#123;</div><div class=\"line\">        http_port: global.hiproxyServer.httpPort,</div><div class=\"line\">        https_port: global.hiproxyServer.httpsPort,</div><div class=\"line\">        cliArgs: global.args,</div><div class=\"line\">        process_id: process.pid</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    response.end(<span class=\"string\">'&lt;pre&gt;'</span> + <span class=\"built_in\">JSON</span>.stringify(serverInfo, <span class=\"literal\">null</span>, <span class=\"number\">4</span>) + <span class=\"string\">'&lt;/pre&gt;'</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>hiproxy启动服务之后，可以访问<code>http://127.0.0.1:&lt;port&gt;/</code>页面查看服务的一些基本信息。</p>\n<p>除了上面的页面之外，hiproxy还提供了增加新页面的功能。比如插件<a href=\"https://github.com/hiproxy/hiproxy-plugin-dashboard\" target=\"_blank\" rel=\"external\">hiproxy-plugin-dashboard</a>，为hiproxy增加了一个在线查看服务信息以及修改配置文件的页面，地址为：<code>http://127.0.0.1:&lt;port&gt;/dashboard/</code>。</p>\n<h2 id=\"配置内容\"><a href=\"#配置内容\" class=\"headerlink\" title=\"配置内容\"></a>配置内容</h2><p>页面路由可以配置的内容为：<code>路由规则</code>和<code>渲染函数</code>。对应的字段为：</p>\n<ul>\n<li>路由规则（route）：<code>&lt;String&gt;</code>，页面的地址模式，比如：<code>&#39;/dashboard(/:page)&#39;</code>，细节可以查看<a href=\"https://www.npmjs.com/package/url-pattern\" target=\"_blank\" rel=\"external\">https://www.npmjs.com/package/url-pattern</a>。</li>\n<li>渲染函数（render）：<code>&lt;Function&gt;</code>，渲染页面，接收三个参数：<code>(route, request, response)</code>。</li>\n</ul>\n<h2 id=\"render方法\"><a href=\"#render方法\" class=\"headerlink\" title=\"render方法\"></a>render方法</h2><p>当用户访问对应的页面时，<code>render()</code>方法会被调用，传入三个参数<code>(route, request, response)</code>。</p>\n<ul>\n<li><strong>route</strong>: <code>&lt;Object&gt;</code>，url模式匹配后的对象，比如配置了<code>/test(/:pageName)</code>之后，访问<code>/test/home</code>时<code>route</code>的值为：<code>{pageName: &#39;home&#39;}</code>。</li>\n<li><strong>request</strong>: <code>&lt;http.IncomingMessage&gt;</code>，http请求对象。</li>\n<li><strong>response</strong>: <code>&lt;http.ServerResponse&gt;</code>，http响应对象。</li>\n</ul>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>一个完整的页面扩展示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  route: <span class=\"string\">'/test(/:pageName)'</span>,</div><div class=\"line\">  render: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">route, request, response</span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 这里面可以使用全局变量`hiproxyServer`来获取hiproxy服务实例</span></div><div class=\"line\">    response.writeHead(<span class=\"number\">200</span>, &#123;</div><div class=\"line\">      <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'text/html'</span>,</div><div class=\"line\">      <span class=\"string\">'Powder-By'</span>: <span class=\"string\">'hiproxy-plugin-example'</span></div><div class=\"line\">    &#125;);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">var</span> serverInfo = &#123;</div><div class=\"line\">      route: route,</div><div class=\"line\">      pageID: route.pageName,</div><div class=\"line\">      time: <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(),</div><div class=\"line\">      serverState: &#123;</div><div class=\"line\">        http_port: global.hiproxyServer.httpPort,</div><div class=\"line\">        https_port: global.hiproxyServer.httpsPort,</div><div class=\"line\">        cliArgs: global.args,</div><div class=\"line\">        process_id: process.pid</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    response.end(<span class=\"string\">'&lt;pre&gt;'</span> + <span class=\"built_in\">JSON</span>.stringify(serverInfo, <span class=\"literal\">null</span>, <span class=\"number\">4</span>) + <span class=\"string\">'&lt;/pre&gt;'</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"title":"FAQs","_content":"\n### hiproxy的核心目的／功能是什么？\n\nhiproxy的核心功能是代理请求，主要是为了解决前端开发工程师在本地开发过程中遇到的：\n\n- `hosts`修改后由于DNS缓存不能立刻生效\n- 需要使用Nginx来做反向代理\n- 自签名HTTPS证书不受信任\n- 每个人都在本地维护环境配置文件（hosts／Nginx配置）\n- ...\n\n<br/>\n\n### hiproxy跟Charles／Fiddler有什么区别？\n\nhiproxy跟Charles/Fiddler都有抓包、请求代理的功能，很多核心的功能基本类似。只不过hiproxy是一个命令行的工具，使用配置文件来配置。\n\n此外，hiproxy现在没有查看网络请求的具体内容的界面，将来会通过插件开发，敬请期待。\n\n<br/>\n\n### hiproxy的hosts跟系统hosts有什么关系？\n\nhiproxy的hosts跟系统hosts文件本身没有任何关系。\n\nhiproxy的hosts文件一般存放在项目中，或者其他目录（根据用户情况自己决定放到哪里）。hiproxy代理服务启动的时候，会查找并解析这些hosts文件，**不会去查找解析系统hosts**。\n\n<br/>\n\n### hiproxy的rewrite配置文件完全兼容Nginx配置吗？\n\n不兼容，hiproxy的rewrite规则配置文件跟Nginx的配置文件本身没有任何关系。\n\n从语法上看，hiproxy的rewrite配置文件借鉴了Nginx配置的语法。核心的语法跟Nginx的语法一致，但是也有些语法是hiproxy特有的，并不完全跟Nginx语法一致，比如：\n\n```bash\n# base rule\nhttp://hiproxy.org/api/login.do => http://127.0.0.1:9999/api/login.json;\n\n# domain\nhiproxy.org => {\n  # ...\n}\n```\n\n此外，也有部分指令采用Nginx的指令名称且功能基本类似，比如`proxy_pass`、`set`、`ssl_certificate`和`ssl_certificate_key`等。但是也**不保证所有的功能细节跟Nginx的指令保持一致**。详细的指令功能说明请参考[指令](../rewrite/directive.html)。\n\n<br/>\n\n### hiproxy多个项目中的不同配置文件使用相同的域名吗？\n\n支持。\n\n可以在不同的项目的不同配置文件中，给相同的域名配置代理规则。hiproxy会自动合并相同域名的规则，如果路由配置有冲突，后加载的配置文件的规则会覆盖前面的规则。\n\n<br/>\n\n### hiproxy怎么处理多个配置文件中的规则冲突？\n\n详细的配置规则处理文档正在编写。\n\n\n<br/>\n\n### hiproxy根证书怎么获取／导入？\n\n可以查看文档[获取／导入SSL证书](../configuration/ssl_certificate.html)。\n\n<br/>\n\n### hiproxy中如何使用自己的SSL证书？\n\n默认情况下，在代理https请求的时候，hiproxy会**自动生成证书**，并使用hiproxy自定义的CA证书签名。用户只需要导入hiproxy的根证书。\n\n如果用户需要使用自定义的证书，可以·使用hiproxy提供的指令来配置：\n\n```\nssl_certificate     ./hiproxy.org.crt;\nssl_certificate_key ./hiproxy.org.key;\n```\n\n<br/>\n\n### ...\n","source":"faqs/index.md","raw":"title: FAQs\n---\n\n### hiproxy的核心目的／功能是什么？\n\nhiproxy的核心功能是代理请求，主要是为了解决前端开发工程师在本地开发过程中遇到的：\n\n- `hosts`修改后由于DNS缓存不能立刻生效\n- 需要使用Nginx来做反向代理\n- 自签名HTTPS证书不受信任\n- 每个人都在本地维护环境配置文件（hosts／Nginx配置）\n- ...\n\n<br/>\n\n### hiproxy跟Charles／Fiddler有什么区别？\n\nhiproxy跟Charles/Fiddler都有抓包、请求代理的功能，很多核心的功能基本类似。只不过hiproxy是一个命令行的工具，使用配置文件来配置。\n\n此外，hiproxy现在没有查看网络请求的具体内容的界面，将来会通过插件开发，敬请期待。\n\n<br/>\n\n### hiproxy的hosts跟系统hosts有什么关系？\n\nhiproxy的hosts跟系统hosts文件本身没有任何关系。\n\nhiproxy的hosts文件一般存放在项目中，或者其他目录（根据用户情况自己决定放到哪里）。hiproxy代理服务启动的时候，会查找并解析这些hosts文件，**不会去查找解析系统hosts**。\n\n<br/>\n\n### hiproxy的rewrite配置文件完全兼容Nginx配置吗？\n\n不兼容，hiproxy的rewrite规则配置文件跟Nginx的配置文件本身没有任何关系。\n\n从语法上看，hiproxy的rewrite配置文件借鉴了Nginx配置的语法。核心的语法跟Nginx的语法一致，但是也有些语法是hiproxy特有的，并不完全跟Nginx语法一致，比如：\n\n```bash\n# base rule\nhttp://hiproxy.org/api/login.do => http://127.0.0.1:9999/api/login.json;\n\n# domain\nhiproxy.org => {\n  # ...\n}\n```\n\n此外，也有部分指令采用Nginx的指令名称且功能基本类似，比如`proxy_pass`、`set`、`ssl_certificate`和`ssl_certificate_key`等。但是也**不保证所有的功能细节跟Nginx的指令保持一致**。详细的指令功能说明请参考[指令](../rewrite/directive.html)。\n\n<br/>\n\n### hiproxy多个项目中的不同配置文件使用相同的域名吗？\n\n支持。\n\n可以在不同的项目的不同配置文件中，给相同的域名配置代理规则。hiproxy会自动合并相同域名的规则，如果路由配置有冲突，后加载的配置文件的规则会覆盖前面的规则。\n\n<br/>\n\n### hiproxy怎么处理多个配置文件中的规则冲突？\n\n详细的配置规则处理文档正在编写。\n\n\n<br/>\n\n### hiproxy根证书怎么获取／导入？\n\n可以查看文档[获取／导入SSL证书](../configuration/ssl_certificate.html)。\n\n<br/>\n\n### hiproxy中如何使用自己的SSL证书？\n\n默认情况下，在代理https请求的时候，hiproxy会**自动生成证书**，并使用hiproxy自定义的CA证书签名。用户只需要导入hiproxy的根证书。\n\n如果用户需要使用自定义的证书，可以·使用hiproxy提供的指令来配置：\n\n```\nssl_certificate     ./hiproxy.org.crt;\nssl_certificate_key ./hiproxy.org.key;\n```\n\n<br/>\n\n### ...\n","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"faqs/index.html","comments":1,"layout":"page","_id":"cj7nia0ez000ehy0focsaqlmw","content":"<h3 id=\"hiproxy的核心目的／功能是什么？\"><a href=\"#hiproxy的核心目的／功能是什么？\" class=\"headerlink\" title=\"hiproxy的核心目的／功能是什么？\"></a>hiproxy的核心目的／功能是什么？</h3><p>hiproxy的核心功能是代理请求，主要是为了解决前端开发工程师在本地开发过程中遇到的：</p>\n<ul>\n<li><code>hosts</code>修改后由于DNS缓存不能立刻生效</li>\n<li>需要使用Nginx来做反向代理</li>\n<li>自签名HTTPS证书不受信任</li>\n<li>每个人都在本地维护环境配置文件（hosts／Nginx配置）</li>\n<li>…</li>\n</ul>\n<p><br></p>\n<h3 id=\"hiproxy跟Charles／Fiddler有什么区别？\"><a href=\"#hiproxy跟Charles／Fiddler有什么区别？\" class=\"headerlink\" title=\"hiproxy跟Charles／Fiddler有什么区别？\"></a>hiproxy跟Charles／Fiddler有什么区别？</h3><p>hiproxy跟Charles/Fiddler都有抓包、请求代理的功能，很多核心的功能基本类似。只不过hiproxy是一个命令行的工具，使用配置文件来配置。</p>\n<p>此外，hiproxy现在没有查看网络请求的具体内容的界面，将来会通过插件开发，敬请期待。</p>\n<p><br></p>\n<h3 id=\"hiproxy的hosts跟系统hosts有什么关系？\"><a href=\"#hiproxy的hosts跟系统hosts有什么关系？\" class=\"headerlink\" title=\"hiproxy的hosts跟系统hosts有什么关系？\"></a>hiproxy的hosts跟系统hosts有什么关系？</h3><p>hiproxy的hosts跟系统hosts文件本身没有任何关系。</p>\n<p>hiproxy的hosts文件一般存放在项目中，或者其他目录（根据用户情况自己决定放到哪里）。hiproxy代理服务启动的时候，会查找并解析这些hosts文件，<strong>不会去查找解析系统hosts</strong>。</p>\n<p><br></p>\n<h3 id=\"hiproxy的rewrite配置文件完全兼容Nginx配置吗？\"><a href=\"#hiproxy的rewrite配置文件完全兼容Nginx配置吗？\" class=\"headerlink\" title=\"hiproxy的rewrite配置文件完全兼容Nginx配置吗？\"></a>hiproxy的rewrite配置文件完全兼容Nginx配置吗？</h3><p>不兼容，hiproxy的rewrite规则配置文件跟Nginx的配置文件本身没有任何关系。</p>\n<p>从语法上看，hiproxy的rewrite配置文件借鉴了Nginx配置的语法。核心的语法跟Nginx的语法一致，但是也有些语法是hiproxy特有的，并不完全跟Nginx语法一致，比如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># base rule</span></div><div class=\"line\">http://hiproxy.org/api/login.do =&gt; http://127.0.0.1:9999/api/login.json;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># domain</span></div><div class=\"line\">hiproxy.org =&gt; &#123;</div><div class=\"line\">  <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>此外，也有部分指令采用Nginx的指令名称且功能基本类似，比如<code>proxy_pass</code>、<code>set</code>、<code>ssl_certificate</code>和<code>ssl_certificate_key</code>等。但是也<strong>不保证所有的功能细节跟Nginx的指令保持一致</strong>。详细的指令功能说明请参考<a href=\"../rewrite/directive.html\">指令</a>。</p>\n<p><br></p>\n<h3 id=\"hiproxy多个项目中的不同配置文件使用相同的域名吗？\"><a href=\"#hiproxy多个项目中的不同配置文件使用相同的域名吗？\" class=\"headerlink\" title=\"hiproxy多个项目中的不同配置文件使用相同的域名吗？\"></a>hiproxy多个项目中的不同配置文件使用相同的域名吗？</h3><p>支持。</p>\n<p>可以在不同的项目的不同配置文件中，给相同的域名配置代理规则。hiproxy会自动合并相同域名的规则，如果路由配置有冲突，后加载的配置文件的规则会覆盖前面的规则。</p>\n<p><br></p>\n<h3 id=\"hiproxy怎么处理多个配置文件中的规则冲突？\"><a href=\"#hiproxy怎么处理多个配置文件中的规则冲突？\" class=\"headerlink\" title=\"hiproxy怎么处理多个配置文件中的规则冲突？\"></a>hiproxy怎么处理多个配置文件中的规则冲突？</h3><p>详细的配置规则处理文档正在编写。</p>\n<p><br></p>\n<h3 id=\"hiproxy根证书怎么获取／导入？\"><a href=\"#hiproxy根证书怎么获取／导入？\" class=\"headerlink\" title=\"hiproxy根证书怎么获取／导入？\"></a>hiproxy根证书怎么获取／导入？</h3><p>可以查看文档<a href=\"../configuration/ssl_certificate.html\">获取／导入SSL证书</a>。</p>\n<p><br></p>\n<h3 id=\"hiproxy中如何使用自己的SSL证书？\"><a href=\"#hiproxy中如何使用自己的SSL证书？\" class=\"headerlink\" title=\"hiproxy中如何使用自己的SSL证书？\"></a>hiproxy中如何使用自己的SSL证书？</h3><p>默认情况下，在代理https请求的时候，hiproxy会<strong>自动生成证书</strong>，并使用hiproxy自定义的CA证书签名。用户只需要导入hiproxy的根证书。</p>\n<p>如果用户需要使用自定义的证书，可以·使用hiproxy提供的指令来配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssl_certificate     ./hiproxy.org.crt;</div><div class=\"line\">ssl_certificate_key ./hiproxy.org.key;</div></pre></td></tr></table></figure>\n<p><br></p>\n<h3 id=\"…\"><a href=\"#…\" class=\"headerlink\" title=\"…\"></a>…</h3>","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<h3 id=\"hiproxy的核心目的／功能是什么？\"><a href=\"#hiproxy的核心目的／功能是什么？\" class=\"headerlink\" title=\"hiproxy的核心目的／功能是什么？\"></a>hiproxy的核心目的／功能是什么？</h3><p>hiproxy的核心功能是代理请求，主要是为了解决前端开发工程师在本地开发过程中遇到的：</p>\n<ul>\n<li><code>hosts</code>修改后由于DNS缓存不能立刻生效</li>\n<li>需要使用Nginx来做反向代理</li>\n<li>自签名HTTPS证书不受信任</li>\n<li>每个人都在本地维护环境配置文件（hosts／Nginx配置）</li>\n<li>…</li>\n</ul>\n<p><br></p>\n<h3 id=\"hiproxy跟Charles／Fiddler有什么区别？\"><a href=\"#hiproxy跟Charles／Fiddler有什么区别？\" class=\"headerlink\" title=\"hiproxy跟Charles／Fiddler有什么区别？\"></a>hiproxy跟Charles／Fiddler有什么区别？</h3><p>hiproxy跟Charles/Fiddler都有抓包、请求代理的功能，很多核心的功能基本类似。只不过hiproxy是一个命令行的工具，使用配置文件来配置。</p>\n<p>此外，hiproxy现在没有查看网络请求的具体内容的界面，将来会通过插件开发，敬请期待。</p>\n<p><br></p>\n<h3 id=\"hiproxy的hosts跟系统hosts有什么关系？\"><a href=\"#hiproxy的hosts跟系统hosts有什么关系？\" class=\"headerlink\" title=\"hiproxy的hosts跟系统hosts有什么关系？\"></a>hiproxy的hosts跟系统hosts有什么关系？</h3><p>hiproxy的hosts跟系统hosts文件本身没有任何关系。</p>\n<p>hiproxy的hosts文件一般存放在项目中，或者其他目录（根据用户情况自己决定放到哪里）。hiproxy代理服务启动的时候，会查找并解析这些hosts文件，<strong>不会去查找解析系统hosts</strong>。</p>\n<p><br></p>\n<h3 id=\"hiproxy的rewrite配置文件完全兼容Nginx配置吗？\"><a href=\"#hiproxy的rewrite配置文件完全兼容Nginx配置吗？\" class=\"headerlink\" title=\"hiproxy的rewrite配置文件完全兼容Nginx配置吗？\"></a>hiproxy的rewrite配置文件完全兼容Nginx配置吗？</h3><p>不兼容，hiproxy的rewrite规则配置文件跟Nginx的配置文件本身没有任何关系。</p>\n<p>从语法上看，hiproxy的rewrite配置文件借鉴了Nginx配置的语法。核心的语法跟Nginx的语法一致，但是也有些语法是hiproxy特有的，并不完全跟Nginx语法一致，比如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># base rule</span></div><div class=\"line\">http://hiproxy.org/api/login.do =&gt; http://127.0.0.1:9999/api/login.json;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># domain</span></div><div class=\"line\">hiproxy.org =&gt; &#123;</div><div class=\"line\">  <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>此外，也有部分指令采用Nginx的指令名称且功能基本类似，比如<code>proxy_pass</code>、<code>set</code>、<code>ssl_certificate</code>和<code>ssl_certificate_key</code>等。但是也<strong>不保证所有的功能细节跟Nginx的指令保持一致</strong>。详细的指令功能说明请参考<a href=\"../rewrite/directive.html\">指令</a>。</p>\n<p><br></p>\n<h3 id=\"hiproxy多个项目中的不同配置文件使用相同的域名吗？\"><a href=\"#hiproxy多个项目中的不同配置文件使用相同的域名吗？\" class=\"headerlink\" title=\"hiproxy多个项目中的不同配置文件使用相同的域名吗？\"></a>hiproxy多个项目中的不同配置文件使用相同的域名吗？</h3><p>支持。</p>\n<p>可以在不同的项目的不同配置文件中，给相同的域名配置代理规则。hiproxy会自动合并相同域名的规则，如果路由配置有冲突，后加载的配置文件的规则会覆盖前面的规则。</p>\n<p><br></p>\n<h3 id=\"hiproxy怎么处理多个配置文件中的规则冲突？\"><a href=\"#hiproxy怎么处理多个配置文件中的规则冲突？\" class=\"headerlink\" title=\"hiproxy怎么处理多个配置文件中的规则冲突？\"></a>hiproxy怎么处理多个配置文件中的规则冲突？</h3><p>详细的配置规则处理文档正在编写。</p>\n<p><br></p>\n<h3 id=\"hiproxy根证书怎么获取／导入？\"><a href=\"#hiproxy根证书怎么获取／导入？\" class=\"headerlink\" title=\"hiproxy根证书怎么获取／导入？\"></a>hiproxy根证书怎么获取／导入？</h3><p>可以查看文档<a href=\"../configuration/ssl_certificate.html\">获取／导入SSL证书</a>。</p>\n<p><br></p>\n<h3 id=\"hiproxy中如何使用自己的SSL证书？\"><a href=\"#hiproxy中如何使用自己的SSL证书？\" class=\"headerlink\" title=\"hiproxy中如何使用自己的SSL证书？\"></a>hiproxy中如何使用自己的SSL证书？</h3><p>默认情况下，在代理https请求的时候，hiproxy会<strong>自动生成证书</strong>，并使用hiproxy自定义的CA证书签名。用户只需要导入hiproxy的根证书。</p>\n<p>如果用户需要使用自定义的证书，可以·使用hiproxy提供的指令来配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssl_certificate     ./hiproxy.org.crt;</div><div class=\"line\">ssl_certificate_key ./hiproxy.org.key;</div></pre></td></tr></table></figure>\n<p><br></p>\n<h3 id=\"…\"><a href=\"#…\" class=\"headerlink\" title=\"…\"></a>…</h3>"},{"title":"Applied to existing projects","_content":"\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## Global install hiproxy\n\nIf you haven't installed [hiproxy](https://github.com/hiproxy/hiproxy)，check [Installation](./installation.html).\n\nAll you have to do is to global install `hiproxy`, **Local install is NOT necessary**\n\n## Add configuration files\n\nTwo rules of 'hiproxy':\n\n* All projects in one Workspace;\n* Put configuration files (hosts / rewrite) into specific project directory, submit them to the repository for version control and teamwork.\n\nTherefore, all configuration files should be located in specific project directory. In terms of different projects, diverse configuration files can be added. While the 'hiproxy' on starting, those files will be found from workspace.\n\nRecommended directory structure is as follows:\n\n```\nworkspace\n  ├── app-1 # Proj.1\n  │   ├── hosts   # hosts file\n  │   ├── rewrite # rewrite file\n  │   └── src     # Source code\n  │   └── ...     # other files\n  │\n  ├── app-2 # Proj.2\n  │   ├── hosts   # hosts file\n  │   ├── rewrite # rewrite file\n  │   └── src     # Source code\n  │   └── ...     # other files\n  │\n  └── app-3 # Proj.3\n  │   ├── hosts   # hosts file\n  │   ├── rewrite # rewrite file\n  │   └── src     # Source code\n  │   └── ...     # other files\n```\n\nOf course, to put all configuration files outside of the project directory, just specify the file's path via the start options:\n\n```\n-c, --hosts-file <files>   hosts files, format: <file1>[,<file2>[,...]]\n-r, --rewrite-file <files> rewrite config files, format: <file1>[,<file2>[,...]]\n```\n\n> **TIPS**：\n>\n> * `-c, --hosts-file` and `-r, --rewrite-file` support **Simplified pattern matching**; e.g. `./*/*.conf`;\n> * Supported syntax：`*`, `?`, `[abc]`, `[a-z]`, `[^a-z]`, `[!a-z]`;\n> * Unsupported syntax：`**`.\n\n### hosts\n\n[hosts](../configuration/hosts.html) is similar to hosts, except it's located in the project directory, hiproxy will automatically find and resolve the hosts file named 'hosts' from the root directory of the project.\n\nIf the file name isn't `hosts`, just specify it via option `-c, --hosts-file`\n\n### rewrite\n\n[rewrite](../configuration/rewrite.html) is similar to `hosts`, it's also located in the project directory, hiproxy will automatically find and resolve the file named 'rewrite' from the root directory of the project.\n\nIf the file name isn't `rewrite`, just specify it via option `-r, --rewrite-file`\n\n## Git commit\n\nGit commitment is highly recommended, submit configuration files (hosts/rewrite) to the repository for version control and teamwork.\n\n## Start service\n\nThe concept of hiproxy is based on **Workspace**. The proxy service of hiproxy should be started in the workspace. Assuming that all projects are located in `~/workspace/`, then this directory is the `Workspace`.\n\nEnter this directory, start the proxy service, then hiproxy will find all the configuration files of all projects.\n\nIf service is needed before entering the workspace, just start proxy using the option `-w, --workspace <workspace>` in any directories.\n\n```bash\n# Enter any directories\nhiproxy start -w ~/workspace/\n```\n\n**TIPS**: While on starting the proxy, use the option `-o, --open [browser-name]` to open a new browser window and configure the proxy automatically. Therefore, no manual configuring is needed.\n\n## Development debugging\n\nWhen the proxy is started, if the proxy rules are configured, all requests from the browser window will be handled by hiproxy.\n\nNo need to configure system hosts.\n","source":"get_started/applied_to_existing_projects.md","raw":"title: Applied to existing projects\n---\n\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## Global install hiproxy\n\nIf you haven't installed [hiproxy](https://github.com/hiproxy/hiproxy)，check [Installation](./installation.html).\n\nAll you have to do is to global install `hiproxy`, **Local install is NOT necessary**\n\n## Add configuration files\n\nTwo rules of 'hiproxy':\n\n* All projects in one Workspace;\n* Put configuration files (hosts / rewrite) into specific project directory, submit them to the repository for version control and teamwork.\n\nTherefore, all configuration files should be located in specific project directory. In terms of different projects, diverse configuration files can be added. While the 'hiproxy' on starting, those files will be found from workspace.\n\nRecommended directory structure is as follows:\n\n```\nworkspace\n  ├── app-1 # Proj.1\n  │   ├── hosts   # hosts file\n  │   ├── rewrite # rewrite file\n  │   └── src     # Source code\n  │   └── ...     # other files\n  │\n  ├── app-2 # Proj.2\n  │   ├── hosts   # hosts file\n  │   ├── rewrite # rewrite file\n  │   └── src     # Source code\n  │   └── ...     # other files\n  │\n  └── app-3 # Proj.3\n  │   ├── hosts   # hosts file\n  │   ├── rewrite # rewrite file\n  │   └── src     # Source code\n  │   └── ...     # other files\n```\n\nOf course, to put all configuration files outside of the project directory, just specify the file's path via the start options:\n\n```\n-c, --hosts-file <files>   hosts files, format: <file1>[,<file2>[,...]]\n-r, --rewrite-file <files> rewrite config files, format: <file1>[,<file2>[,...]]\n```\n\n> **TIPS**：\n>\n> * `-c, --hosts-file` and `-r, --rewrite-file` support **Simplified pattern matching**; e.g. `./*/*.conf`;\n> * Supported syntax：`*`, `?`, `[abc]`, `[a-z]`, `[^a-z]`, `[!a-z]`;\n> * Unsupported syntax：`**`.\n\n### hosts\n\n[hosts](../configuration/hosts.html) is similar to hosts, except it's located in the project directory, hiproxy will automatically find and resolve the hosts file named 'hosts' from the root directory of the project.\n\nIf the file name isn't `hosts`, just specify it via option `-c, --hosts-file`\n\n### rewrite\n\n[rewrite](../configuration/rewrite.html) is similar to `hosts`, it's also located in the project directory, hiproxy will automatically find and resolve the file named 'rewrite' from the root directory of the project.\n\nIf the file name isn't `rewrite`, just specify it via option `-r, --rewrite-file`\n\n## Git commit\n\nGit commitment is highly recommended, submit configuration files (hosts/rewrite) to the repository for version control and teamwork.\n\n## Start service\n\nThe concept of hiproxy is based on **Workspace**. The proxy service of hiproxy should be started in the workspace. Assuming that all projects are located in `~/workspace/`, then this directory is the `Workspace`.\n\nEnter this directory, start the proxy service, then hiproxy will find all the configuration files of all projects.\n\nIf service is needed before entering the workspace, just start proxy using the option `-w, --workspace <workspace>` in any directories.\n\n```bash\n# Enter any directories\nhiproxy start -w ~/workspace/\n```\n\n**TIPS**: While on starting the proxy, use the option `-o, --open [browser-name]` to open a new browser window and configure the proxy automatically. Therefore, no manual configuring is needed.\n\n## Development debugging\n\nWhen the proxy is started, if the proxy rules are configured, all requests from the browser window will be handled by hiproxy.\n\nNo need to configure system hosts.\n","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"get_started/applied_to_existing_projects.html","comments":1,"layout":"page","_id":"cj7nia0f0000fhy0fnuxda7vl","content":"<blockquote>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"Global-install-hiproxy\"><a href=\"#Global-install-hiproxy\" class=\"headerlink\" title=\"Global install hiproxy\"></a>Global install hiproxy</h2><p>If you haven’t installed <a href=\"https://github.com/hiproxy/hiproxy\" target=\"_blank\" rel=\"external\">hiproxy</a>，check <a href=\"./installation.html\">Installation</a>.</p>\n<p>All you have to do is to global install <code>hiproxy</code>, <strong>Local install is NOT necessary</strong></p>\n<h2 id=\"Add-configuration-files\"><a href=\"#Add-configuration-files\" class=\"headerlink\" title=\"Add configuration files\"></a>Add configuration files</h2><p>Two rules of ‘hiproxy’:</p>\n<ul>\n<li>All projects in one Workspace;</li>\n<li>Put configuration files (hosts / rewrite) into specific project directory, submit them to the repository for version control and teamwork.</li>\n</ul>\n<p>Therefore, all configuration files should be located in specific project directory. In terms of different projects, diverse configuration files can be added. While the ‘hiproxy’ on starting, those files will be found from workspace.</p>\n<p>Recommended directory structure is as follows:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">workspace</div><div class=\"line\">  ├── app-1 # Proj.1</div><div class=\"line\">  │   ├── hosts   # hosts file</div><div class=\"line\">  │   ├── rewrite # rewrite file</div><div class=\"line\">  │   └── src     # Source code</div><div class=\"line\">  │   └── ...     # other files</div><div class=\"line\">  │</div><div class=\"line\">  ├── app-2 # Proj.2</div><div class=\"line\">  │   ├── hosts   # hosts file</div><div class=\"line\">  │   ├── rewrite # rewrite file</div><div class=\"line\">  │   └── src     # Source code</div><div class=\"line\">  │   └── ...     # other files</div><div class=\"line\">  │</div><div class=\"line\">  └── app-3 # Proj.3</div><div class=\"line\">  │   ├── hosts   # hosts file</div><div class=\"line\">  │   ├── rewrite # rewrite file</div><div class=\"line\">  │   └── src     # Source code</div><div class=\"line\">  │   └── ...     # other files</div></pre></td></tr></table></figure>\n<p>Of course, to put all configuration files outside of the project directory, just specify the file’s path via the start options:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">-c, --hosts-file &lt;files&gt;   hosts files, format: &lt;file1&gt;[,&lt;file2&gt;[,...]]</div><div class=\"line\">-r, --rewrite-file &lt;files&gt; rewrite config files, format: &lt;file1&gt;[,&lt;file2&gt;[,...]]</div></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>TIPS</strong>：</p>\n<ul>\n<li><code>-c, --hosts-file</code> and <code>-r, --rewrite-file</code> support <strong>Simplified pattern matching</strong>; e.g. <code>./*/*.conf</code>;</li>\n<li>Supported syntax：<code>*</code>, <code>?</code>, <code>[abc]</code>, <code>[a-z]</code>, <code>[^a-z]</code>, <code>[!a-z]</code>;</li>\n<li>Unsupported syntax：<code>**</code>.</li>\n</ul>\n</blockquote>\n<h3 id=\"hosts\"><a href=\"#hosts\" class=\"headerlink\" title=\"hosts\"></a>hosts</h3><p><a href=\"../configuration/hosts.html\">hosts</a> is similar to hosts, except it’s located in the project directory, hiproxy will automatically find and resolve the hosts file named ‘hosts’ from the root directory of the project.</p>\n<p>If the file name isn’t <code>hosts</code>, just specify it via option <code>-c, --hosts-file</code></p>\n<h3 id=\"rewrite\"><a href=\"#rewrite\" class=\"headerlink\" title=\"rewrite\"></a>rewrite</h3><p><a href=\"../configuration/rewrite.html\">rewrite</a> is similar to <code>hosts</code>, it’s also located in the project directory, hiproxy will automatically find and resolve the file named ‘rewrite’ from the root directory of the project.</p>\n<p>If the file name isn’t <code>rewrite</code>, just specify it via option <code>-r, --rewrite-file</code></p>\n<h2 id=\"Git-commit\"><a href=\"#Git-commit\" class=\"headerlink\" title=\"Git commit\"></a>Git commit</h2><p>Git commitment is highly recommended, submit configuration files (hosts/rewrite) to the repository for version control and teamwork.</p>\n<h2 id=\"Start-service\"><a href=\"#Start-service\" class=\"headerlink\" title=\"Start service\"></a>Start service</h2><p>The concept of hiproxy is based on <strong>Workspace</strong>. The proxy service of hiproxy should be started in the workspace. Assuming that all projects are located in <code>~/workspace/</code>, then this directory is the <code>Workspace</code>.</p>\n<p>Enter this directory, start the proxy service, then hiproxy will find all the configuration files of all projects.</p>\n<p>If service is needed before entering the workspace, just start proxy using the option <code>-w, --workspace &lt;workspace&gt;</code> in any directories.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># Enter any directories</span></div><div class=\"line\">hiproxy start -w ~/workspace/</div></pre></td></tr></table></figure>\n<p><strong>TIPS</strong>: While on starting the proxy, use the option <code>-o, --open [browser-name]</code> to open a new browser window and configure the proxy automatically. Therefore, no manual configuring is needed.</p>\n<h2 id=\"Development-debugging\"><a href=\"#Development-debugging\" class=\"headerlink\" title=\"Development debugging\"></a>Development debugging</h2><p>When the proxy is started, if the proxy rules are configured, all requests from the browser window will be handled by hiproxy.</p>\n<p>No need to configure system hosts.</p>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"Global-install-hiproxy\"><a href=\"#Global-install-hiproxy\" class=\"headerlink\" title=\"Global install hiproxy\"></a>Global install hiproxy</h2><p>If you haven’t installed <a href=\"https://github.com/hiproxy/hiproxy\" target=\"_blank\" rel=\"external\">hiproxy</a>，check <a href=\"./installation.html\">Installation</a>.</p>\n<p>All you have to do is to global install <code>hiproxy</code>, <strong>Local install is NOT necessary</strong></p>\n<h2 id=\"Add-configuration-files\"><a href=\"#Add-configuration-files\" class=\"headerlink\" title=\"Add configuration files\"></a>Add configuration files</h2><p>Two rules of ‘hiproxy’:</p>\n<ul>\n<li>All projects in one Workspace;</li>\n<li>Put configuration files (hosts / rewrite) into specific project directory, submit them to the repository for version control and teamwork.</li>\n</ul>\n<p>Therefore, all configuration files should be located in specific project directory. In terms of different projects, diverse configuration files can be added. While the ‘hiproxy’ on starting, those files will be found from workspace.</p>\n<p>Recommended directory structure is as follows:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">workspace</div><div class=\"line\">  ├── app-1 # Proj.1</div><div class=\"line\">  │   ├── hosts   # hosts file</div><div class=\"line\">  │   ├── rewrite # rewrite file</div><div class=\"line\">  │   └── src     # Source code</div><div class=\"line\">  │   └── ...     # other files</div><div class=\"line\">  │</div><div class=\"line\">  ├── app-2 # Proj.2</div><div class=\"line\">  │   ├── hosts   # hosts file</div><div class=\"line\">  │   ├── rewrite # rewrite file</div><div class=\"line\">  │   └── src     # Source code</div><div class=\"line\">  │   └── ...     # other files</div><div class=\"line\">  │</div><div class=\"line\">  └── app-3 # Proj.3</div><div class=\"line\">  │   ├── hosts   # hosts file</div><div class=\"line\">  │   ├── rewrite # rewrite file</div><div class=\"line\">  │   └── src     # Source code</div><div class=\"line\">  │   └── ...     # other files</div></pre></td></tr></table></figure>\n<p>Of course, to put all configuration files outside of the project directory, just specify the file’s path via the start options:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">-c, --hosts-file &lt;files&gt;   hosts files, format: &lt;file1&gt;[,&lt;file2&gt;[,...]]</div><div class=\"line\">-r, --rewrite-file &lt;files&gt; rewrite config files, format: &lt;file1&gt;[,&lt;file2&gt;[,...]]</div></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>TIPS</strong>：</p>\n<ul>\n<li><code>-c, --hosts-file</code> and <code>-r, --rewrite-file</code> support <strong>Simplified pattern matching</strong>; e.g. <code>./*/*.conf</code>;</li>\n<li>Supported syntax：<code>*</code>, <code>?</code>, <code>[abc]</code>, <code>[a-z]</code>, <code>[^a-z]</code>, <code>[!a-z]</code>;</li>\n<li>Unsupported syntax：<code>**</code>.</li>\n</ul>\n</blockquote>\n<h3 id=\"hosts\"><a href=\"#hosts\" class=\"headerlink\" title=\"hosts\"></a>hosts</h3><p><a href=\"../configuration/hosts.html\">hosts</a> is similar to hosts, except it’s located in the project directory, hiproxy will automatically find and resolve the hosts file named ‘hosts’ from the root directory of the project.</p>\n<p>If the file name isn’t <code>hosts</code>, just specify it via option <code>-c, --hosts-file</code></p>\n<h3 id=\"rewrite\"><a href=\"#rewrite\" class=\"headerlink\" title=\"rewrite\"></a>rewrite</h3><p><a href=\"../configuration/rewrite.html\">rewrite</a> is similar to <code>hosts</code>, it’s also located in the project directory, hiproxy will automatically find and resolve the file named ‘rewrite’ from the root directory of the project.</p>\n<p>If the file name isn’t <code>rewrite</code>, just specify it via option <code>-r, --rewrite-file</code></p>\n<h2 id=\"Git-commit\"><a href=\"#Git-commit\" class=\"headerlink\" title=\"Git commit\"></a>Git commit</h2><p>Git commitment is highly recommended, submit configuration files (hosts/rewrite) to the repository for version control and teamwork.</p>\n<h2 id=\"Start-service\"><a href=\"#Start-service\" class=\"headerlink\" title=\"Start service\"></a>Start service</h2><p>The concept of hiproxy is based on <strong>Workspace</strong>. The proxy service of hiproxy should be started in the workspace. Assuming that all projects are located in <code>~/workspace/</code>, then this directory is the <code>Workspace</code>.</p>\n<p>Enter this directory, start the proxy service, then hiproxy will find all the configuration files of all projects.</p>\n<p>If service is needed before entering the workspace, just start proxy using the option <code>-w, --workspace &lt;workspace&gt;</code> in any directories.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># Enter any directories</span></div><div class=\"line\">hiproxy start -w ~/workspace/</div></pre></td></tr></table></figure>\n<p><strong>TIPS</strong>: While on starting the proxy, use the option <code>-o, --open [browser-name]</code> to open a new browser window and configure the proxy automatically. Therefore, no manual configuring is needed.</p>\n<h2 id=\"Development-debugging\"><a href=\"#Development-debugging\" class=\"headerlink\" title=\"Development debugging\"></a>Development debugging</h2><p>When the proxy is started, if the proxy rules are configured, all requests from the browser window will be handled by hiproxy.</p>\n<p>No need to configure system hosts.</p>\n"},{"title":"CLI options","_content":"\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n# Command Line Commands and Options\n\n## Global Commands\n\nThe global `hiproxy` command without any options will display a welcome message like this:\n\n```bash\n> hiproxy\n  _     _\n | |   (_)\n | |__  _  welcome to use hiproxy\n | '_ \\| | current version is 1.1.2\n | | | | | You can try `hiproxy --help` for more info\n |_| |_|_|\n```\n\nIf you specify the option `--help` or `-h`, you will see the complete help information.\n\n```bash\n> hiproxy --help\n\n  Usage:\n\n    hiproxy [command] [option]\n\n  Commands:\n\n    start    Start a local proxy server\n    stop     Stop the local proxy server (Only works in daemon mode)\n    restart  Restart the local proxy service (Only works in daemon mode)\n    state    Show all the servers state (Only works in daemon mode)\n    open     Open browser and set proxy\n    hello    A test command that say hello to you.\n\n  Options:\n\n    -v, --version     Display version information\n    -h, --help        Display help information\n    --log-dir <dir>   The log directory when run in background, default: user home directory\n    --log-time        Show time info before every log message\n    --log-level       The log levels, format: <level1>[,<lavel2[,...]]\n    --grep <content>  Filter the log data\n```\n\n## start\n\nThis command will start a local proxy service on the specified port. You can specify whether the service is running in the background, if running in the background, all the log of the service will be redirect to the log files.\n\nThe log file is located in the user's home directory by default. Of course, you can specify the log file's path via the option `--log-dir <dir>`.\n\n```bash\n> hiproxy start --help\n\n  USAGE:\n\n    start [--port <port>] [-xodD]\n\n  DESCRIBE:\n\n    Start a local proxy server\n\n  OPTIONS:\n\n    -h, --help                    show help info\n    -D, --daemon                  Run hiproxy in background\n    -c, --hosts-file <files>      hosts files, format: <file1>[,<file2>[,...]]\n    -s, --https                   Enable HTTPS proxy\n    -m, --middle-man-port <port>  The Man-In-The-MiddleHTTPS proxy port, default: 10010\n    -o, --open [browser]          Open a browser window and use hiproxy proxy\n    --pac-proxy                   Use Proxy auto-configuration (PAC)\n    -p, --port <port>             HTTP proxy port, default: 5525\n    -r, --rewrite-file <files>    rewrite config files, format: <file1>[,<file2>[,...]]\n    --sys-proxy <path>            Your own proxy server path, format: <ip>[:port], only works when use PAC\n    -w, --workspace <dir>         The workspace\n```\n\n## stop\n\nIf the proxy service is running in the background, hiproxy provides a `stop` command to stop the service\n\n```bash\n> hiproxy stop\n```\n\n## open\n\nThe `open` command can open a browser window and automatically set up the browser's proxy info based on the currently started proxy service.\n\n\n```bash\n> hiproxy open --help\n\n  USAGE:\n\n    open [options]\n\n  DESCRIBE:\n\n    Open browser and set proxy\n\n  OPTIONS:\n\n    -h, --help               show help info\n    -b, --browser <browser>  Browser name, default: chrome. Valid alues: chrome,firefox,opera\n    --pac-proxy              Use Proxy auto-configuration (PAC)\n```\n\n## state\n\nThis command will display the basic status information of the currently started proxy service.\n\n## restart\n\nThis command will restart the proxy service.\n","source":"get_started/cli_options.md","raw":"title: CLI options\n---\n\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n# Command Line Commands and Options\n\n## Global Commands\n\nThe global `hiproxy` command without any options will display a welcome message like this:\n\n```bash\n> hiproxy\n  _     _\n | |   (_)\n | |__  _  welcome to use hiproxy\n | '_ \\| | current version is 1.1.2\n | | | | | You can try `hiproxy --help` for more info\n |_| |_|_|\n```\n\nIf you specify the option `--help` or `-h`, you will see the complete help information.\n\n```bash\n> hiproxy --help\n\n  Usage:\n\n    hiproxy [command] [option]\n\n  Commands:\n\n    start    Start a local proxy server\n    stop     Stop the local proxy server (Only works in daemon mode)\n    restart  Restart the local proxy service (Only works in daemon mode)\n    state    Show all the servers state (Only works in daemon mode)\n    open     Open browser and set proxy\n    hello    A test command that say hello to you.\n\n  Options:\n\n    -v, --version     Display version information\n    -h, --help        Display help information\n    --log-dir <dir>   The log directory when run in background, default: user home directory\n    --log-time        Show time info before every log message\n    --log-level       The log levels, format: <level1>[,<lavel2[,...]]\n    --grep <content>  Filter the log data\n```\n\n## start\n\nThis command will start a local proxy service on the specified port. You can specify whether the service is running in the background, if running in the background, all the log of the service will be redirect to the log files.\n\nThe log file is located in the user's home directory by default. Of course, you can specify the log file's path via the option `--log-dir <dir>`.\n\n```bash\n> hiproxy start --help\n\n  USAGE:\n\n    start [--port <port>] [-xodD]\n\n  DESCRIBE:\n\n    Start a local proxy server\n\n  OPTIONS:\n\n    -h, --help                    show help info\n    -D, --daemon                  Run hiproxy in background\n    -c, --hosts-file <files>      hosts files, format: <file1>[,<file2>[,...]]\n    -s, --https                   Enable HTTPS proxy\n    -m, --middle-man-port <port>  The Man-In-The-MiddleHTTPS proxy port, default: 10010\n    -o, --open [browser]          Open a browser window and use hiproxy proxy\n    --pac-proxy                   Use Proxy auto-configuration (PAC)\n    -p, --port <port>             HTTP proxy port, default: 5525\n    -r, --rewrite-file <files>    rewrite config files, format: <file1>[,<file2>[,...]]\n    --sys-proxy <path>            Your own proxy server path, format: <ip>[:port], only works when use PAC\n    -w, --workspace <dir>         The workspace\n```\n\n## stop\n\nIf the proxy service is running in the background, hiproxy provides a `stop` command to stop the service\n\n```bash\n> hiproxy stop\n```\n\n## open\n\nThe `open` command can open a browser window and automatically set up the browser's proxy info based on the currently started proxy service.\n\n\n```bash\n> hiproxy open --help\n\n  USAGE:\n\n    open [options]\n\n  DESCRIBE:\n\n    Open browser and set proxy\n\n  OPTIONS:\n\n    -h, --help               show help info\n    -b, --browser <browser>  Browser name, default: chrome. Valid alues: chrome,firefox,opera\n    --pac-proxy              Use Proxy auto-configuration (PAC)\n```\n\n## state\n\nThis command will display the basic status information of the currently started proxy service.\n\n## restart\n\nThis command will restart the proxy service.\n","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"get_started/cli_options.html","comments":1,"layout":"page","_id":"cj7nia0f1000ghy0f4aa78iam","content":"<blockquote>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h1 id=\"Command-Line-Commands-and-Options\"><a href=\"#Command-Line-Commands-and-Options\" class=\"headerlink\" title=\"Command Line Commands and Options\"></a>Command Line Commands and Options</h1><h2 id=\"Global-Commands\"><a href=\"#Global-Commands\" class=\"headerlink\" title=\"Global Commands\"></a>Global Commands</h2><p>The global <code>hiproxy</code> command without any options will display a welcome message like this:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hiproxy</div><div class=\"line\">  _     _</div><div class=\"line\"> | |   (_)</div><div class=\"line\"> | |__  _  welcome to use hiproxy</div><div class=\"line\"> | <span class=\"string\">'_ \\| | current version is 1.1.2</span></div><div class=\"line\"><span class=\"string\"> | | | | | You can try `hiproxy --help` for more info</span></div><div class=\"line\"><span class=\"string\"> |_| |_|_|</span></div></pre></td></tr></table></figure>\n<p>If you specify the option <code>--help</code> or <code>-h</code>, you will see the complete help information.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hiproxy --<span class=\"built_in\">help</span></div><div class=\"line\"></div><div class=\"line\">  Usage:</div><div class=\"line\"></div><div class=\"line\">    hiproxy [<span class=\"built_in\">command</span>] [option]</div><div class=\"line\"></div><div class=\"line\">  Commands:</div><div class=\"line\"></div><div class=\"line\">    start    Start a <span class=\"built_in\">local</span> proxy server</div><div class=\"line\">    stop     Stop the <span class=\"built_in\">local</span> proxy server (Only works <span class=\"keyword\">in</span> daemon mode)</div><div class=\"line\">    restart  Restart the <span class=\"built_in\">local</span> proxy service (Only works <span class=\"keyword\">in</span> daemon mode)</div><div class=\"line\">    state    Show all the servers state (Only works <span class=\"keyword\">in</span> daemon mode)</div><div class=\"line\">    open     Open browser and <span class=\"built_in\">set</span> proxy</div><div class=\"line\">    hello    A <span class=\"built_in\">test</span> <span class=\"built_in\">command</span> that say hello to you.</div><div class=\"line\"></div><div class=\"line\">  Options:</div><div class=\"line\"></div><div class=\"line\">    -v, --version     Display version information</div><div class=\"line\">    -h, --<span class=\"built_in\">help</span>        Display <span class=\"built_in\">help</span> information</div><div class=\"line\">    --<span class=\"built_in\">log</span>-dir &lt;dir&gt;   The <span class=\"built_in\">log</span> directory when run <span class=\"keyword\">in</span> background, default: user home directory</div><div class=\"line\">    --<span class=\"built_in\">log</span>-time        Show time info before every <span class=\"built_in\">log</span> message</div><div class=\"line\">    --<span class=\"built_in\">log</span>-level       The <span class=\"built_in\">log</span> levels, format: &lt;level1&gt;[,&lt;lavel2[,...]]</div><div class=\"line\">    --grep &lt;content&gt;  Filter the <span class=\"built_in\">log</span> data</div></pre></td></tr></table></figure>\n<h2 id=\"start\"><a href=\"#start\" class=\"headerlink\" title=\"start\"></a>start</h2><p>This command will start a local proxy service on the specified port. You can specify whether the service is running in the background, if running in the background, all the log of the service will be redirect to the log files.</p>\n<p>The log file is located in the user’s home directory by default. Of course, you can specify the log file’s path via the option <code>--log-dir &lt;dir&gt;</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hiproxy start --<span class=\"built_in\">help</span></div><div class=\"line\"></div><div class=\"line\">  USAGE:</div><div class=\"line\"></div><div class=\"line\">    start [--port &lt;port&gt;] [-xodD]</div><div class=\"line\"></div><div class=\"line\">  DESCRIBE:</div><div class=\"line\"></div><div class=\"line\">    Start a <span class=\"built_in\">local</span> proxy server</div><div class=\"line\"></div><div class=\"line\">  OPTIONS:</div><div class=\"line\"></div><div class=\"line\">    -h, --<span class=\"built_in\">help</span>                    show <span class=\"built_in\">help</span> info</div><div class=\"line\">    -D, --daemon                  Run hiproxy <span class=\"keyword\">in</span> background</div><div class=\"line\">    -c, --hosts-file &lt;files&gt;      hosts files, format: &lt;file1&gt;[,&lt;file2&gt;[,...]]</div><div class=\"line\">    -s, --https                   Enable HTTPS proxy</div><div class=\"line\">    -m, --middle-man-port &lt;port&gt;  The Man-In-The-MiddleHTTPS proxy port, default: 10010</div><div class=\"line\">    -o, --open [browser]          Open a browser window and use hiproxy proxy</div><div class=\"line\">    --pac-proxy                   Use Proxy auto-configuration (PAC)</div><div class=\"line\">    -p, --port &lt;port&gt;             HTTP proxy port, default: 5525</div><div class=\"line\">    -r, --rewrite-file &lt;files&gt;    rewrite config files, format: &lt;file1&gt;[,&lt;file2&gt;[,...]]</div><div class=\"line\">    --sys-proxy &lt;path&gt;            Your own proxy server path, format: &lt;ip&gt;[:port], only works when use PAC</div><div class=\"line\">    -w, --workspace &lt;dir&gt;         The workspace</div></pre></td></tr></table></figure>\n<h2 id=\"stop\"><a href=\"#stop\" class=\"headerlink\" title=\"stop\"></a>stop</h2><p>If the proxy service is running in the background, hiproxy provides a <code>stop</code> command to stop the service</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hiproxy stop</div></pre></td></tr></table></figure>\n<h2 id=\"open\"><a href=\"#open\" class=\"headerlink\" title=\"open\"></a>open</h2><p>The <code>open</code> command can open a browser window and automatically set up the browser’s proxy info based on the currently started proxy service.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hiproxy open --<span class=\"built_in\">help</span></div><div class=\"line\"></div><div class=\"line\">  USAGE:</div><div class=\"line\"></div><div class=\"line\">    open [options]</div><div class=\"line\"></div><div class=\"line\">  DESCRIBE:</div><div class=\"line\"></div><div class=\"line\">    Open browser and <span class=\"built_in\">set</span> proxy</div><div class=\"line\"></div><div class=\"line\">  OPTIONS:</div><div class=\"line\"></div><div class=\"line\">    -h, --<span class=\"built_in\">help</span>               show <span class=\"built_in\">help</span> info</div><div class=\"line\">    -b, --browser &lt;browser&gt;  Browser name, default: chrome. Valid alues: chrome,firefox,opera</div><div class=\"line\">    --pac-proxy              Use Proxy auto-configuration (PAC)</div></pre></td></tr></table></figure>\n<h2 id=\"state\"><a href=\"#state\" class=\"headerlink\" title=\"state\"></a>state</h2><p>This command will display the basic status information of the currently started proxy service.</p>\n<h2 id=\"restart\"><a href=\"#restart\" class=\"headerlink\" title=\"restart\"></a>restart</h2><p>This command will restart the proxy service.</p>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h1 id=\"Command-Line-Commands-and-Options\"><a href=\"#Command-Line-Commands-and-Options\" class=\"headerlink\" title=\"Command Line Commands and Options\"></a>Command Line Commands and Options</h1><h2 id=\"Global-Commands\"><a href=\"#Global-Commands\" class=\"headerlink\" title=\"Global Commands\"></a>Global Commands</h2><p>The global <code>hiproxy</code> command without any options will display a welcome message like this:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hiproxy</div><div class=\"line\">  _     _</div><div class=\"line\"> | |   (_)</div><div class=\"line\"> | |__  _  welcome to use hiproxy</div><div class=\"line\"> | <span class=\"string\">'_ \\| | current version is 1.1.2</span></div><div class=\"line\"><span class=\"string\"> | | | | | You can try `hiproxy --help` for more info</span></div><div class=\"line\"><span class=\"string\"> |_| |_|_|</span></div></pre></td></tr></table></figure>\n<p>If you specify the option <code>--help</code> or <code>-h</code>, you will see the complete help information.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hiproxy --<span class=\"built_in\">help</span></div><div class=\"line\"></div><div class=\"line\">  Usage:</div><div class=\"line\"></div><div class=\"line\">    hiproxy [<span class=\"built_in\">command</span>] [option]</div><div class=\"line\"></div><div class=\"line\">  Commands:</div><div class=\"line\"></div><div class=\"line\">    start    Start a <span class=\"built_in\">local</span> proxy server</div><div class=\"line\">    stop     Stop the <span class=\"built_in\">local</span> proxy server (Only works <span class=\"keyword\">in</span> daemon mode)</div><div class=\"line\">    restart  Restart the <span class=\"built_in\">local</span> proxy service (Only works <span class=\"keyword\">in</span> daemon mode)</div><div class=\"line\">    state    Show all the servers state (Only works <span class=\"keyword\">in</span> daemon mode)</div><div class=\"line\">    open     Open browser and <span class=\"built_in\">set</span> proxy</div><div class=\"line\">    hello    A <span class=\"built_in\">test</span> <span class=\"built_in\">command</span> that say hello to you.</div><div class=\"line\"></div><div class=\"line\">  Options:</div><div class=\"line\"></div><div class=\"line\">    -v, --version     Display version information</div><div class=\"line\">    -h, --<span class=\"built_in\">help</span>        Display <span class=\"built_in\">help</span> information</div><div class=\"line\">    --<span class=\"built_in\">log</span>-dir &lt;dir&gt;   The <span class=\"built_in\">log</span> directory when run <span class=\"keyword\">in</span> background, default: user home directory</div><div class=\"line\">    --<span class=\"built_in\">log</span>-time        Show time info before every <span class=\"built_in\">log</span> message</div><div class=\"line\">    --<span class=\"built_in\">log</span>-level       The <span class=\"built_in\">log</span> levels, format: &lt;level1&gt;[,&lt;lavel2[,...]]</div><div class=\"line\">    --grep &lt;content&gt;  Filter the <span class=\"built_in\">log</span> data</div></pre></td></tr></table></figure>\n<h2 id=\"start\"><a href=\"#start\" class=\"headerlink\" title=\"start\"></a>start</h2><p>This command will start a local proxy service on the specified port. You can specify whether the service is running in the background, if running in the background, all the log of the service will be redirect to the log files.</p>\n<p>The log file is located in the user’s home directory by default. Of course, you can specify the log file’s path via the option <code>--log-dir &lt;dir&gt;</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hiproxy start --<span class=\"built_in\">help</span></div><div class=\"line\"></div><div class=\"line\">  USAGE:</div><div class=\"line\"></div><div class=\"line\">    start [--port &lt;port&gt;] [-xodD]</div><div class=\"line\"></div><div class=\"line\">  DESCRIBE:</div><div class=\"line\"></div><div class=\"line\">    Start a <span class=\"built_in\">local</span> proxy server</div><div class=\"line\"></div><div class=\"line\">  OPTIONS:</div><div class=\"line\"></div><div class=\"line\">    -h, --<span class=\"built_in\">help</span>                    show <span class=\"built_in\">help</span> info</div><div class=\"line\">    -D, --daemon                  Run hiproxy <span class=\"keyword\">in</span> background</div><div class=\"line\">    -c, --hosts-file &lt;files&gt;      hosts files, format: &lt;file1&gt;[,&lt;file2&gt;[,...]]</div><div class=\"line\">    -s, --https                   Enable HTTPS proxy</div><div class=\"line\">    -m, --middle-man-port &lt;port&gt;  The Man-In-The-MiddleHTTPS proxy port, default: 10010</div><div class=\"line\">    -o, --open [browser]          Open a browser window and use hiproxy proxy</div><div class=\"line\">    --pac-proxy                   Use Proxy auto-configuration (PAC)</div><div class=\"line\">    -p, --port &lt;port&gt;             HTTP proxy port, default: 5525</div><div class=\"line\">    -r, --rewrite-file &lt;files&gt;    rewrite config files, format: &lt;file1&gt;[,&lt;file2&gt;[,...]]</div><div class=\"line\">    --sys-proxy &lt;path&gt;            Your own proxy server path, format: &lt;ip&gt;[:port], only works when use PAC</div><div class=\"line\">    -w, --workspace &lt;dir&gt;         The workspace</div></pre></td></tr></table></figure>\n<h2 id=\"stop\"><a href=\"#stop\" class=\"headerlink\" title=\"stop\"></a>stop</h2><p>If the proxy service is running in the background, hiproxy provides a <code>stop</code> command to stop the service</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hiproxy stop</div></pre></td></tr></table></figure>\n<h2 id=\"open\"><a href=\"#open\" class=\"headerlink\" title=\"open\"></a>open</h2><p>The <code>open</code> command can open a browser window and automatically set up the browser’s proxy info based on the currently started proxy service.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hiproxy open --<span class=\"built_in\">help</span></div><div class=\"line\"></div><div class=\"line\">  USAGE:</div><div class=\"line\"></div><div class=\"line\">    open [options]</div><div class=\"line\"></div><div class=\"line\">  DESCRIBE:</div><div class=\"line\"></div><div class=\"line\">    Open browser and <span class=\"built_in\">set</span> proxy</div><div class=\"line\"></div><div class=\"line\">  OPTIONS:</div><div class=\"line\"></div><div class=\"line\">    -h, --<span class=\"built_in\">help</span>               show <span class=\"built_in\">help</span> info</div><div class=\"line\">    -b, --browser &lt;browser&gt;  Browser name, default: chrome. Valid alues: chrome,firefox,opera</div><div class=\"line\">    --pac-proxy              Use Proxy auto-configuration (PAC)</div></pre></td></tr></table></figure>\n<h2 id=\"state\"><a href=\"#state\" class=\"headerlink\" title=\"state\"></a>state</h2><p>This command will display the basic status information of the currently started proxy service.</p>\n<h2 id=\"restart\"><a href=\"#restart\" class=\"headerlink\" title=\"restart\"></a>restart</h2><p>This command will restart the proxy service.</p>\n"},{"title":"Introduction","_content":"\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\nhiproxy is a lightweight, extendable network proxy based on Node.js, the main purpose is to resolve the hosts management and proxy request problem that multiple developers encountered in development. And there is no need to modify system hosts and start Nginx service.\n\nhiproxy supports hosts file, and the syntax is extended for hosts, it now supports port number. Besides, hiproxy supports configuration file using syntax similar to that for Nginx.\n\n## Why hiproxy\n\nIn front-end development, if developers usually encounter some of the following problems:\n\n1. While debugging online page issues, if both local development and back-end running ability for projects (Node.js/Java project) are required, __it may costs a lot for a front-end developer to build a back-end environment locally__.\n2. If multiple front-end projects exist, __with one domain__, __some projects__ need to request __online__ resources, __other__ projects request __local__ resources.\n3. In order to resolve the cross-domain problems, local development needs to __modify Response Header__.\n4. While developing https site locally, __certificate is not trusted__.\n5. With system __hosts__ changed，__it won't take effect immediately__.\n\nWe can use Nginx to resolve the problems above. Nginx is excellent and also a very good friend of our front-end developer. The configuration file style of Nginx is very intuitive, and the configuration efficiency is high.\n\nHowever, when using Nginx, we also need to use hosts to send the related requests to the local Nginx service.\n\nIn addition, in most cases, the Nginx configuration file will not be submitted to the repository, so other members of the team will copy each others' configuration file, therefore the efficiency is relatively low, and once a configuration file has been modified, other configuration files will not be updated in time. For the configuration of multiple domains, they are placed in a unified directory, and then being included in the main configuration, which is also inconvenient.\n\n__hosts__, __revers proxy__, __https__ and __cache__ Will these trivial things be solved in a unified way?\n\nSo there is hiproxy.\n\n## Feature\n\n* Nginx-styled configuration file format supported, configuration is simple and intuitive\n* Hosts and extensions supported, as well as port number\n* Plugins extending `rewrite` commands, CLI commands and page supported\n* HTTPS certificate auto-generate\n* Proxy auto-config\n* Background start and log file output\n* Configuration file auto-find\n* Browser window auto-open and proxy auto-config\n* Node.js API provided\n* ...\n\n## Concept\n\nAfter rethought many of the existing development models and summed up some of the encountered problems, hiproxy is developed based on the following two concepts:\n\n* **Workspace**：hiproxy works in Workspace, the configuration files for all projects in the workspace are resolved by hiproxy. *The workspace can be specified via option `-w, --workspace <workspace>`, or directly into the workspace to start the proxy service*.\n* **Shared configuration file**: Configuration files are submitted to the repository, and team members share them. Previously, hosts and Nginx configurations were generally not submitted to the repository, and the team members were locally maintained, costly and inefficient.\n\n## Basic principle\n\nThe core functionality of hiproxy is the proxy request, it handles some of the development details at the same time as the proxy request, such as automatic generation of HTTPS certificates, automatic configuration of browser agents, and so on.\n\nThe basic principles of hiproxy core functionality describe as follows.\n\n### Proxy request\n\nhiproxy makes full use of the [Man-in-the-middle attack](https://en.wikipedia.org/wiki/Man-in-the-middle_attack) model as intermediaries, data is forwarded at the client and server side to implement the HTTP and proxy for the HTTPS requests.\n\n#### HTTP request\n\nFor the **HTTP request**, if the browser has configured the proxy, it will send `GET`/`POST` and so on to the hiproxy agent. After the hiproxy receives the request, it makes some changes to the requested information based on the user's `hosts` and `rewrite` rules, and then goes to the appropriate server to request the resource and return it to the client.\n\n#### HTTPS request\n\nFor the **HTTPS request**, the browser will send a `CONNECT` request to hiproxy service after the proxy configured, then hiproxy will start a new TCP connection to the final target server (i.e. a new tunnel) and then transmit the data between the client and server.\n\nHowever, it's only a simple proxy request, and hiproxy cannot obtain the requested information, such as parameters and Cookie, and there is no way to modify the response data. If we do not need to make corresponding changes to the request and response information, this will meet our needs.\n\nWhat needs to be done if we need to implement the same functionality as the HTTP request: do some changes to the request and response based on the requested information?\n\nFortunately, we can make full use of [Man-in-the-middle attack](https://en.wikipedia.org/wiki/Man-in-the-middle_attack) model. Because the final target server can get the requested information, we can start an intermediary service between the hiproxy and the final server (here referred to as *M*), when hiproxy receives a `CONNECT` request, it starts a new connection to the *M*, when the *M* receives the request, it makes some modifications to the request information, like the HTTP request agent, and then requests the resource from the target server and returns it to the client.\n\n### HTTPS certificate generation\n\nIn the SSL/TLS handshake, the first message sent by the client (Client Hello) will be using the extension [SNI(Server Name Indication)](https://en.wikipedia.org/wiki/Server_Name_Indication) to send the requested domain to the server. Although only the domain information is sent, other requests, paths, parameters, and cookie are not sent, but the domain is sufficient for the certificate to be generated.\n\nWhen hiproxy gets the domain for the request:\n\n* If the user has configured the certificate for the corresponding domain, the user configured certificate is sent to the client.\n* Otherwise, a new domain certificate is generated and returned to the client.\n\n### Browser window\n\nFirst, find the path corresponding to the browser in the system. For example, on OSX, look for `<browser-name>.app`, then start the app and pass arguments to configure the proxy server address.\n\n```bash\n<path-to-chrome-app>.app [options] [url]\n```\nOn Windows, you go to the registry to find the `exe` file path for the browser. Then run and pass arguments.\n\n```bash\n<path-to-chrome-app>.exe [options] [url]\n```\n\nFor Chrome/Opera, we need to pass two arguments:\n\n* **Address of proxy service**: `--proxy-pac-url` (PAC proxy file path) or `--proxy-server` (general agent address), hiproxy supports all.\n\n* **The directory where user data is stored**: `--user-data-dir`\n\nWhen passing this argument, and the directory is not the default directory the browser uses to store user data, it will create a new browser instance which is independent of any other browser window and has no effect on each other(the instance has been configured with proxy, the request of other browser instance will not pass through the proxy configuration here).\n\n### Configuration file\n\nhiproxy can use hosts as a simple proxy request and configure rewrite rules similar to the Nginx syntax for complex configurations.\n\n#### hosts\n\nConsistent with the system `hosts` syntax, in addition, port numbers are supported. Hosts can only configure the IP and port numbers corresponding to the domain, detailed routing configuration and request response modification are not supported. For more details, check [hosts](../configuration/hosts.html)。\n\n#### hosts configuration sample\n\n```bash\n# comment\n127.0.0.1 example.com\n\n# ip + port\n127.0.0.1:8800 blog.example.com life.example.com\n```\n\n#### rewrite\n\nThe rewrite rule configuration file allows you to use more complex configurations to satisfy complex usage scenarios. You can configure the route in detail and make modifications to the request response. The syntax for the rewrite rule configuration is very similar to that of the Nginx syntax. For more details, check [rewrite](../configuration/rewrite.html)。\n\n#### rewrite configuration sample\n\n```bash\n# Global variable\nset $port 8899;\nset $ip   127.0.0.1;\nset $online 210.0.0.0;\n\n# Domain configuration\ndomain example.com {\n  location / {\n    proxy_pass http://$online/;\n  }\n\n  location /blog/ {\n    proxy_pass http://$ip:$port/blog/;\n    proxy_set_header from 'hiproxy';\n    set_header proxy 'hiproxy';\n  }\n}\n```\n\n### Plugin mechanism\n\nWhen hiproxy starts, it automatically finds the module at the beginning of the `hiproxy-plugin-` from the directory in the NPM global module (`npm, root, -g`) and automatically resolve the plugin content after finding the modules.\n\nTherefore, we only need global install plugins independently, no need to upgrade hiproxy, and the hiproxy plugin development is also independent, the plugin project itself is not dependent on hiproxy.\n\nFor detailed plugin documents, check [hiproxy Plugin](../developers/plugin.html)；\n\n","source":"get_started/index.md","raw":"title: Introduction\n---\n\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\nhiproxy is a lightweight, extendable network proxy based on Node.js, the main purpose is to resolve the hosts management and proxy request problem that multiple developers encountered in development. And there is no need to modify system hosts and start Nginx service.\n\nhiproxy supports hosts file, and the syntax is extended for hosts, it now supports port number. Besides, hiproxy supports configuration file using syntax similar to that for Nginx.\n\n## Why hiproxy\n\nIn front-end development, if developers usually encounter some of the following problems:\n\n1. While debugging online page issues, if both local development and back-end running ability for projects (Node.js/Java project) are required, __it may costs a lot for a front-end developer to build a back-end environment locally__.\n2. If multiple front-end projects exist, __with one domain__, __some projects__ need to request __online__ resources, __other__ projects request __local__ resources.\n3. In order to resolve the cross-domain problems, local development needs to __modify Response Header__.\n4. While developing https site locally, __certificate is not trusted__.\n5. With system __hosts__ changed，__it won't take effect immediately__.\n\nWe can use Nginx to resolve the problems above. Nginx is excellent and also a very good friend of our front-end developer. The configuration file style of Nginx is very intuitive, and the configuration efficiency is high.\n\nHowever, when using Nginx, we also need to use hosts to send the related requests to the local Nginx service.\n\nIn addition, in most cases, the Nginx configuration file will not be submitted to the repository, so other members of the team will copy each others' configuration file, therefore the efficiency is relatively low, and once a configuration file has been modified, other configuration files will not be updated in time. For the configuration of multiple domains, they are placed in a unified directory, and then being included in the main configuration, which is also inconvenient.\n\n__hosts__, __revers proxy__, __https__ and __cache__ Will these trivial things be solved in a unified way?\n\nSo there is hiproxy.\n\n## Feature\n\n* Nginx-styled configuration file format supported, configuration is simple and intuitive\n* Hosts and extensions supported, as well as port number\n* Plugins extending `rewrite` commands, CLI commands and page supported\n* HTTPS certificate auto-generate\n* Proxy auto-config\n* Background start and log file output\n* Configuration file auto-find\n* Browser window auto-open and proxy auto-config\n* Node.js API provided\n* ...\n\n## Concept\n\nAfter rethought many of the existing development models and summed up some of the encountered problems, hiproxy is developed based on the following two concepts:\n\n* **Workspace**：hiproxy works in Workspace, the configuration files for all projects in the workspace are resolved by hiproxy. *The workspace can be specified via option `-w, --workspace <workspace>`, or directly into the workspace to start the proxy service*.\n* **Shared configuration file**: Configuration files are submitted to the repository, and team members share them. Previously, hosts and Nginx configurations were generally not submitted to the repository, and the team members were locally maintained, costly and inefficient.\n\n## Basic principle\n\nThe core functionality of hiproxy is the proxy request, it handles some of the development details at the same time as the proxy request, such as automatic generation of HTTPS certificates, automatic configuration of browser agents, and so on.\n\nThe basic principles of hiproxy core functionality describe as follows.\n\n### Proxy request\n\nhiproxy makes full use of the [Man-in-the-middle attack](https://en.wikipedia.org/wiki/Man-in-the-middle_attack) model as intermediaries, data is forwarded at the client and server side to implement the HTTP and proxy for the HTTPS requests.\n\n#### HTTP request\n\nFor the **HTTP request**, if the browser has configured the proxy, it will send `GET`/`POST` and so on to the hiproxy agent. After the hiproxy receives the request, it makes some changes to the requested information based on the user's `hosts` and `rewrite` rules, and then goes to the appropriate server to request the resource and return it to the client.\n\n#### HTTPS request\n\nFor the **HTTPS request**, the browser will send a `CONNECT` request to hiproxy service after the proxy configured, then hiproxy will start a new TCP connection to the final target server (i.e. a new tunnel) and then transmit the data between the client and server.\n\nHowever, it's only a simple proxy request, and hiproxy cannot obtain the requested information, such as parameters and Cookie, and there is no way to modify the response data. If we do not need to make corresponding changes to the request and response information, this will meet our needs.\n\nWhat needs to be done if we need to implement the same functionality as the HTTP request: do some changes to the request and response based on the requested information?\n\nFortunately, we can make full use of [Man-in-the-middle attack](https://en.wikipedia.org/wiki/Man-in-the-middle_attack) model. Because the final target server can get the requested information, we can start an intermediary service between the hiproxy and the final server (here referred to as *M*), when hiproxy receives a `CONNECT` request, it starts a new connection to the *M*, when the *M* receives the request, it makes some modifications to the request information, like the HTTP request agent, and then requests the resource from the target server and returns it to the client.\n\n### HTTPS certificate generation\n\nIn the SSL/TLS handshake, the first message sent by the client (Client Hello) will be using the extension [SNI(Server Name Indication)](https://en.wikipedia.org/wiki/Server_Name_Indication) to send the requested domain to the server. Although only the domain information is sent, other requests, paths, parameters, and cookie are not sent, but the domain is sufficient for the certificate to be generated.\n\nWhen hiproxy gets the domain for the request:\n\n* If the user has configured the certificate for the corresponding domain, the user configured certificate is sent to the client.\n* Otherwise, a new domain certificate is generated and returned to the client.\n\n### Browser window\n\nFirst, find the path corresponding to the browser in the system. For example, on OSX, look for `<browser-name>.app`, then start the app and pass arguments to configure the proxy server address.\n\n```bash\n<path-to-chrome-app>.app [options] [url]\n```\nOn Windows, you go to the registry to find the `exe` file path for the browser. Then run and pass arguments.\n\n```bash\n<path-to-chrome-app>.exe [options] [url]\n```\n\nFor Chrome/Opera, we need to pass two arguments:\n\n* **Address of proxy service**: `--proxy-pac-url` (PAC proxy file path) or `--proxy-server` (general agent address), hiproxy supports all.\n\n* **The directory where user data is stored**: `--user-data-dir`\n\nWhen passing this argument, and the directory is not the default directory the browser uses to store user data, it will create a new browser instance which is independent of any other browser window and has no effect on each other(the instance has been configured with proxy, the request of other browser instance will not pass through the proxy configuration here).\n\n### Configuration file\n\nhiproxy can use hosts as a simple proxy request and configure rewrite rules similar to the Nginx syntax for complex configurations.\n\n#### hosts\n\nConsistent with the system `hosts` syntax, in addition, port numbers are supported. Hosts can only configure the IP and port numbers corresponding to the domain, detailed routing configuration and request response modification are not supported. For more details, check [hosts](../configuration/hosts.html)。\n\n#### hosts configuration sample\n\n```bash\n# comment\n127.0.0.1 example.com\n\n# ip + port\n127.0.0.1:8800 blog.example.com life.example.com\n```\n\n#### rewrite\n\nThe rewrite rule configuration file allows you to use more complex configurations to satisfy complex usage scenarios. You can configure the route in detail and make modifications to the request response. The syntax for the rewrite rule configuration is very similar to that of the Nginx syntax. For more details, check [rewrite](../configuration/rewrite.html)。\n\n#### rewrite configuration sample\n\n```bash\n# Global variable\nset $port 8899;\nset $ip   127.0.0.1;\nset $online 210.0.0.0;\n\n# Domain configuration\ndomain example.com {\n  location / {\n    proxy_pass http://$online/;\n  }\n\n  location /blog/ {\n    proxy_pass http://$ip:$port/blog/;\n    proxy_set_header from 'hiproxy';\n    set_header proxy 'hiproxy';\n  }\n}\n```\n\n### Plugin mechanism\n\nWhen hiproxy starts, it automatically finds the module at the beginning of the `hiproxy-plugin-` from the directory in the NPM global module (`npm, root, -g`) and automatically resolve the plugin content after finding the modules.\n\nTherefore, we only need global install plugins independently, no need to upgrade hiproxy, and the hiproxy plugin development is also independent, the plugin project itself is not dependent on hiproxy.\n\nFor detailed plugin documents, check [hiproxy Plugin](../developers/plugin.html)；\n\n","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"get_started/index.html","comments":1,"layout":"page","_id":"cj7nia0f1000hhy0f04xj81uy","content":"<blockquote>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<p>hiproxy is a lightweight, extendable network proxy based on Node.js, the main purpose is to resolve the hosts management and proxy request problem that multiple developers encountered in development. And there is no need to modify system hosts and start Nginx service.</p>\n<p>hiproxy supports hosts file, and the syntax is extended for hosts, it now supports port number. Besides, hiproxy supports configuration file using syntax similar to that for Nginx.</p>\n<h2 id=\"Why-hiproxy\"><a href=\"#Why-hiproxy\" class=\"headerlink\" title=\"Why hiproxy\"></a>Why hiproxy</h2><p>In front-end development, if developers usually encounter some of the following problems:</p>\n<ol>\n<li>While debugging online page issues, if both local development and back-end running ability for projects (Node.js/Java project) are required, <strong>it may costs a lot for a front-end developer to build a back-end environment locally</strong>.</li>\n<li>If multiple front-end projects exist, <strong>with one domain</strong>, <strong>some projects</strong> need to request <strong>online</strong> resources, <strong>other</strong> projects request <strong>local</strong> resources.</li>\n<li>In order to resolve the cross-domain problems, local development needs to <strong>modify Response Header</strong>.</li>\n<li>While developing https site locally, <strong>certificate is not trusted</strong>.</li>\n<li>With system <strong>hosts</strong> changed，<strong>it won’t take effect immediately</strong>.</li>\n</ol>\n<p>We can use Nginx to resolve the problems above. Nginx is excellent and also a very good friend of our front-end developer. The configuration file style of Nginx is very intuitive, and the configuration efficiency is high.</p>\n<p>However, when using Nginx, we also need to use hosts to send the related requests to the local Nginx service.</p>\n<p>In addition, in most cases, the Nginx configuration file will not be submitted to the repository, so other members of the team will copy each others’ configuration file, therefore the efficiency is relatively low, and once a configuration file has been modified, other configuration files will not be updated in time. For the configuration of multiple domains, they are placed in a unified directory, and then being included in the main configuration, which is also inconvenient.</p>\n<p><strong>hosts</strong>, <strong>revers proxy</strong>, <strong>https</strong> and <strong>cache</strong> Will these trivial things be solved in a unified way?</p>\n<p>So there is hiproxy.</p>\n<h2 id=\"Feature\"><a href=\"#Feature\" class=\"headerlink\" title=\"Feature\"></a>Feature</h2><ul>\n<li>Nginx-styled configuration file format supported, configuration is simple and intuitive</li>\n<li>Hosts and extensions supported, as well as port number</li>\n<li>Plugins extending <code>rewrite</code> commands, CLI commands and page supported</li>\n<li>HTTPS certificate auto-generate</li>\n<li>Proxy auto-config</li>\n<li>Background start and log file output</li>\n<li>Configuration file auto-find</li>\n<li>Browser window auto-open and proxy auto-config</li>\n<li>Node.js API provided</li>\n<li>…</li>\n</ul>\n<h2 id=\"Concept\"><a href=\"#Concept\" class=\"headerlink\" title=\"Concept\"></a>Concept</h2><p>After rethought many of the existing development models and summed up some of the encountered problems, hiproxy is developed based on the following two concepts:</p>\n<ul>\n<li><strong>Workspace</strong>：hiproxy works in Workspace, the configuration files for all projects in the workspace are resolved by hiproxy. <em>The workspace can be specified via option <code>-w, --workspace &lt;workspace&gt;</code>, or directly into the workspace to start the proxy service</em>.</li>\n<li><strong>Shared configuration file</strong>: Configuration files are submitted to the repository, and team members share them. Previously, hosts and Nginx configurations were generally not submitted to the repository, and the team members were locally maintained, costly and inefficient.</li>\n</ul>\n<h2 id=\"Basic-principle\"><a href=\"#Basic-principle\" class=\"headerlink\" title=\"Basic principle\"></a>Basic principle</h2><p>The core functionality of hiproxy is the proxy request, it handles some of the development details at the same time as the proxy request, such as automatic generation of HTTPS certificates, automatic configuration of browser agents, and so on.</p>\n<p>The basic principles of hiproxy core functionality describe as follows.</p>\n<h3 id=\"Proxy-request\"><a href=\"#Proxy-request\" class=\"headerlink\" title=\"Proxy request\"></a>Proxy request</h3><p>hiproxy makes full use of the <a href=\"https://en.wikipedia.org/wiki/Man-in-the-middle_attack\" target=\"_blank\" rel=\"external\">Man-in-the-middle attack</a> model as intermediaries, data is forwarded at the client and server side to implement the HTTP and proxy for the HTTPS requests.</p>\n<h4 id=\"HTTP-request\"><a href=\"#HTTP-request\" class=\"headerlink\" title=\"HTTP request\"></a>HTTP request</h4><p>For the <strong>HTTP request</strong>, if the browser has configured the proxy, it will send <code>GET</code>/<code>POST</code> and so on to the hiproxy agent. After the hiproxy receives the request, it makes some changes to the requested information based on the user’s <code>hosts</code> and <code>rewrite</code> rules, and then goes to the appropriate server to request the resource and return it to the client.</p>\n<h4 id=\"HTTPS-request\"><a href=\"#HTTPS-request\" class=\"headerlink\" title=\"HTTPS request\"></a>HTTPS request</h4><p>For the <strong>HTTPS request</strong>, the browser will send a <code>CONNECT</code> request to hiproxy service after the proxy configured, then hiproxy will start a new TCP connection to the final target server (i.e. a new tunnel) and then transmit the data between the client and server.</p>\n<p>However, it’s only a simple proxy request, and hiproxy cannot obtain the requested information, such as parameters and Cookie, and there is no way to modify the response data. If we do not need to make corresponding changes to the request and response information, this will meet our needs.</p>\n<p>What needs to be done if we need to implement the same functionality as the HTTP request: do some changes to the request and response based on the requested information?</p>\n<p>Fortunately, we can make full use of <a href=\"https://en.wikipedia.org/wiki/Man-in-the-middle_attack\" target=\"_blank\" rel=\"external\">Man-in-the-middle attack</a> model. Because the final target server can get the requested information, we can start an intermediary service between the hiproxy and the final server (here referred to as <em>M</em>), when hiproxy receives a <code>CONNECT</code> request, it starts a new connection to the <em>M</em>, when the <em>M</em> receives the request, it makes some modifications to the request information, like the HTTP request agent, and then requests the resource from the target server and returns it to the client.</p>\n<h3 id=\"HTTPS-certificate-generation\"><a href=\"#HTTPS-certificate-generation\" class=\"headerlink\" title=\"HTTPS certificate generation\"></a>HTTPS certificate generation</h3><p>In the SSL/TLS handshake, the first message sent by the client (Client Hello) will be using the extension <a href=\"https://en.wikipedia.org/wiki/Server_Name_Indication\" target=\"_blank\" rel=\"external\">SNI(Server Name Indication)</a> to send the requested domain to the server. Although only the domain information is sent, other requests, paths, parameters, and cookie are not sent, but the domain is sufficient for the certificate to be generated.</p>\n<p>When hiproxy gets the domain for the request:</p>\n<ul>\n<li>If the user has configured the certificate for the corresponding domain, the user configured certificate is sent to the client.</li>\n<li>Otherwise, a new domain certificate is generated and returned to the client.</li>\n</ul>\n<h3 id=\"Browser-window\"><a href=\"#Browser-window\" class=\"headerlink\" title=\"Browser window\"></a>Browser window</h3><p>First, find the path corresponding to the browser in the system. For example, on OSX, look for <code>&lt;browser-name&gt;.app</code>, then start the app and pass arguments to configure the proxy server address.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;path-to-chrome-app&gt;.app [options] [url]</div></pre></td></tr></table></figure>\n<p>On Windows, you go to the registry to find the <code>exe</code> file path for the browser. Then run and pass arguments.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;path-to-chrome-app&gt;.exe [options] [url]</div></pre></td></tr></table></figure>\n<p>For Chrome/Opera, we need to pass two arguments:</p>\n<ul>\n<li><p><strong>Address of proxy service</strong>: <code>--proxy-pac-url</code> (PAC proxy file path) or <code>--proxy-server</code> (general agent address), hiproxy supports all.</p>\n</li>\n<li><p><strong>The directory where user data is stored</strong>: <code>--user-data-dir</code></p>\n</li>\n</ul>\n<p>When passing this argument, and the directory is not the default directory the browser uses to store user data, it will create a new browser instance which is independent of any other browser window and has no effect on each other(the instance has been configured with proxy, the request of other browser instance will not pass through the proxy configuration here).</p>\n<h3 id=\"Configuration-file\"><a href=\"#Configuration-file\" class=\"headerlink\" title=\"Configuration file\"></a>Configuration file</h3><p>hiproxy can use hosts as a simple proxy request and configure rewrite rules similar to the Nginx syntax for complex configurations.</p>\n<h4 id=\"hosts\"><a href=\"#hosts\" class=\"headerlink\" title=\"hosts\"></a>hosts</h4><p>Consistent with the system <code>hosts</code> syntax, in addition, port numbers are supported. Hosts can only configure the IP and port numbers corresponding to the domain, detailed routing configuration and request response modification are not supported. For more details, check <a href=\"../configuration/hosts.html\">hosts</a>。</p>\n<h4 id=\"hosts-configuration-sample\"><a href=\"#hosts-configuration-sample\" class=\"headerlink\" title=\"hosts configuration sample\"></a>hosts configuration sample</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># comment</span></div><div class=\"line\">127.0.0.1 example.com</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># ip + port</span></div><div class=\"line\">127.0.0.1:8800 blog.example.com life.example.com</div></pre></td></tr></table></figure>\n<h4 id=\"rewrite\"><a href=\"#rewrite\" class=\"headerlink\" title=\"rewrite\"></a>rewrite</h4><p>The rewrite rule configuration file allows you to use more complex configurations to satisfy complex usage scenarios. You can configure the route in detail and make modifications to the request response. The syntax for the rewrite rule configuration is very similar to that of the Nginx syntax. For more details, check <a href=\"../configuration/rewrite.html\">rewrite</a>。</p>\n<h4 id=\"rewrite-configuration-sample\"><a href=\"#rewrite-configuration-sample\" class=\"headerlink\" title=\"rewrite configuration sample\"></a>rewrite configuration sample</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># Global variable</span></div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$port</span> 8899;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ip</span>   127.0.0.1;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$online</span> 210.0.0.0;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Domain configuration</span></div><div class=\"line\">domain example.com &#123;</div><div class=\"line\">  location / &#123;</div><div class=\"line\">    proxy_pass http://<span class=\"variable\">$online</span>/;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  location /blog/ &#123;</div><div class=\"line\">    proxy_pass http://<span class=\"variable\">$ip</span>:<span class=\"variable\">$port</span>/blog/;</div><div class=\"line\">    proxy_set_header from <span class=\"string\">'hiproxy'</span>;</div><div class=\"line\">    set_header proxy <span class=\"string\">'hiproxy'</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Plugin-mechanism\"><a href=\"#Plugin-mechanism\" class=\"headerlink\" title=\"Plugin mechanism\"></a>Plugin mechanism</h3><p>When hiproxy starts, it automatically finds the module at the beginning of the <code>hiproxy-plugin-</code> from the directory in the NPM global module (<code>npm, root, -g</code>) and automatically resolve the plugin content after finding the modules.</p>\n<p>Therefore, we only need global install plugins independently, no need to upgrade hiproxy, and the hiproxy plugin development is also independent, the plugin project itself is not dependent on hiproxy.</p>\n<p>For detailed plugin documents, check <a href=\"../developers/plugin.html\">hiproxy Plugin</a>；</p>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<p>hiproxy is a lightweight, extendable network proxy based on Node.js, the main purpose is to resolve the hosts management and proxy request problem that multiple developers encountered in development. And there is no need to modify system hosts and start Nginx service.</p>\n<p>hiproxy supports hosts file, and the syntax is extended for hosts, it now supports port number. Besides, hiproxy supports configuration file using syntax similar to that for Nginx.</p>\n<h2 id=\"Why-hiproxy\"><a href=\"#Why-hiproxy\" class=\"headerlink\" title=\"Why hiproxy\"></a>Why hiproxy</h2><p>In front-end development, if developers usually encounter some of the following problems:</p>\n<ol>\n<li>While debugging online page issues, if both local development and back-end running ability for projects (Node.js/Java project) are required, <strong>it may costs a lot for a front-end developer to build a back-end environment locally</strong>.</li>\n<li>If multiple front-end projects exist, <strong>with one domain</strong>, <strong>some projects</strong> need to request <strong>online</strong> resources, <strong>other</strong> projects request <strong>local</strong> resources.</li>\n<li>In order to resolve the cross-domain problems, local development needs to <strong>modify Response Header</strong>.</li>\n<li>While developing https site locally, <strong>certificate is not trusted</strong>.</li>\n<li>With system <strong>hosts</strong> changed，<strong>it won’t take effect immediately</strong>.</li>\n</ol>\n<p>We can use Nginx to resolve the problems above. Nginx is excellent and also a very good friend of our front-end developer. The configuration file style of Nginx is very intuitive, and the configuration efficiency is high.</p>\n<p>However, when using Nginx, we also need to use hosts to send the related requests to the local Nginx service.</p>\n<p>In addition, in most cases, the Nginx configuration file will not be submitted to the repository, so other members of the team will copy each others’ configuration file, therefore the efficiency is relatively low, and once a configuration file has been modified, other configuration files will not be updated in time. For the configuration of multiple domains, they are placed in a unified directory, and then being included in the main configuration, which is also inconvenient.</p>\n<p><strong>hosts</strong>, <strong>revers proxy</strong>, <strong>https</strong> and <strong>cache</strong> Will these trivial things be solved in a unified way?</p>\n<p>So there is hiproxy.</p>\n<h2 id=\"Feature\"><a href=\"#Feature\" class=\"headerlink\" title=\"Feature\"></a>Feature</h2><ul>\n<li>Nginx-styled configuration file format supported, configuration is simple and intuitive</li>\n<li>Hosts and extensions supported, as well as port number</li>\n<li>Plugins extending <code>rewrite</code> commands, CLI commands and page supported</li>\n<li>HTTPS certificate auto-generate</li>\n<li>Proxy auto-config</li>\n<li>Background start and log file output</li>\n<li>Configuration file auto-find</li>\n<li>Browser window auto-open and proxy auto-config</li>\n<li>Node.js API provided</li>\n<li>…</li>\n</ul>\n<h2 id=\"Concept\"><a href=\"#Concept\" class=\"headerlink\" title=\"Concept\"></a>Concept</h2><p>After rethought many of the existing development models and summed up some of the encountered problems, hiproxy is developed based on the following two concepts:</p>\n<ul>\n<li><strong>Workspace</strong>：hiproxy works in Workspace, the configuration files for all projects in the workspace are resolved by hiproxy. <em>The workspace can be specified via option <code>-w, --workspace &lt;workspace&gt;</code>, or directly into the workspace to start the proxy service</em>.</li>\n<li><strong>Shared configuration file</strong>: Configuration files are submitted to the repository, and team members share them. Previously, hosts and Nginx configurations were generally not submitted to the repository, and the team members were locally maintained, costly and inefficient.</li>\n</ul>\n<h2 id=\"Basic-principle\"><a href=\"#Basic-principle\" class=\"headerlink\" title=\"Basic principle\"></a>Basic principle</h2><p>The core functionality of hiproxy is the proxy request, it handles some of the development details at the same time as the proxy request, such as automatic generation of HTTPS certificates, automatic configuration of browser agents, and so on.</p>\n<p>The basic principles of hiproxy core functionality describe as follows.</p>\n<h3 id=\"Proxy-request\"><a href=\"#Proxy-request\" class=\"headerlink\" title=\"Proxy request\"></a>Proxy request</h3><p>hiproxy makes full use of the <a href=\"https://en.wikipedia.org/wiki/Man-in-the-middle_attack\" target=\"_blank\" rel=\"external\">Man-in-the-middle attack</a> model as intermediaries, data is forwarded at the client and server side to implement the HTTP and proxy for the HTTPS requests.</p>\n<h4 id=\"HTTP-request\"><a href=\"#HTTP-request\" class=\"headerlink\" title=\"HTTP request\"></a>HTTP request</h4><p>For the <strong>HTTP request</strong>, if the browser has configured the proxy, it will send <code>GET</code>/<code>POST</code> and so on to the hiproxy agent. After the hiproxy receives the request, it makes some changes to the requested information based on the user’s <code>hosts</code> and <code>rewrite</code> rules, and then goes to the appropriate server to request the resource and return it to the client.</p>\n<h4 id=\"HTTPS-request\"><a href=\"#HTTPS-request\" class=\"headerlink\" title=\"HTTPS request\"></a>HTTPS request</h4><p>For the <strong>HTTPS request</strong>, the browser will send a <code>CONNECT</code> request to hiproxy service after the proxy configured, then hiproxy will start a new TCP connection to the final target server (i.e. a new tunnel) and then transmit the data between the client and server.</p>\n<p>However, it’s only a simple proxy request, and hiproxy cannot obtain the requested information, such as parameters and Cookie, and there is no way to modify the response data. If we do not need to make corresponding changes to the request and response information, this will meet our needs.</p>\n<p>What needs to be done if we need to implement the same functionality as the HTTP request: do some changes to the request and response based on the requested information?</p>\n<p>Fortunately, we can make full use of <a href=\"https://en.wikipedia.org/wiki/Man-in-the-middle_attack\" target=\"_blank\" rel=\"external\">Man-in-the-middle attack</a> model. Because the final target server can get the requested information, we can start an intermediary service between the hiproxy and the final server (here referred to as <em>M</em>), when hiproxy receives a <code>CONNECT</code> request, it starts a new connection to the <em>M</em>, when the <em>M</em> receives the request, it makes some modifications to the request information, like the HTTP request agent, and then requests the resource from the target server and returns it to the client.</p>\n<h3 id=\"HTTPS-certificate-generation\"><a href=\"#HTTPS-certificate-generation\" class=\"headerlink\" title=\"HTTPS certificate generation\"></a>HTTPS certificate generation</h3><p>In the SSL/TLS handshake, the first message sent by the client (Client Hello) will be using the extension <a href=\"https://en.wikipedia.org/wiki/Server_Name_Indication\" target=\"_blank\" rel=\"external\">SNI(Server Name Indication)</a> to send the requested domain to the server. Although only the domain information is sent, other requests, paths, parameters, and cookie are not sent, but the domain is sufficient for the certificate to be generated.</p>\n<p>When hiproxy gets the domain for the request:</p>\n<ul>\n<li>If the user has configured the certificate for the corresponding domain, the user configured certificate is sent to the client.</li>\n<li>Otherwise, a new domain certificate is generated and returned to the client.</li>\n</ul>\n<h3 id=\"Browser-window\"><a href=\"#Browser-window\" class=\"headerlink\" title=\"Browser window\"></a>Browser window</h3><p>First, find the path corresponding to the browser in the system. For example, on OSX, look for <code>&lt;browser-name&gt;.app</code>, then start the app and pass arguments to configure the proxy server address.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;path-to-chrome-app&gt;.app [options] [url]</div></pre></td></tr></table></figure>\n<p>On Windows, you go to the registry to find the <code>exe</code> file path for the browser. Then run and pass arguments.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;path-to-chrome-app&gt;.exe [options] [url]</div></pre></td></tr></table></figure>\n<p>For Chrome/Opera, we need to pass two arguments:</p>\n<ul>\n<li><p><strong>Address of proxy service</strong>: <code>--proxy-pac-url</code> (PAC proxy file path) or <code>--proxy-server</code> (general agent address), hiproxy supports all.</p>\n</li>\n<li><p><strong>The directory where user data is stored</strong>: <code>--user-data-dir</code></p>\n</li>\n</ul>\n<p>When passing this argument, and the directory is not the default directory the browser uses to store user data, it will create a new browser instance which is independent of any other browser window and has no effect on each other(the instance has been configured with proxy, the request of other browser instance will not pass through the proxy configuration here).</p>\n<h3 id=\"Configuration-file\"><a href=\"#Configuration-file\" class=\"headerlink\" title=\"Configuration file\"></a>Configuration file</h3><p>hiproxy can use hosts as a simple proxy request and configure rewrite rules similar to the Nginx syntax for complex configurations.</p>\n<h4 id=\"hosts\"><a href=\"#hosts\" class=\"headerlink\" title=\"hosts\"></a>hosts</h4><p>Consistent with the system <code>hosts</code> syntax, in addition, port numbers are supported. Hosts can only configure the IP and port numbers corresponding to the domain, detailed routing configuration and request response modification are not supported. For more details, check <a href=\"../configuration/hosts.html\">hosts</a>。</p>\n<h4 id=\"hosts-configuration-sample\"><a href=\"#hosts-configuration-sample\" class=\"headerlink\" title=\"hosts configuration sample\"></a>hosts configuration sample</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># comment</span></div><div class=\"line\">127.0.0.1 example.com</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># ip + port</span></div><div class=\"line\">127.0.0.1:8800 blog.example.com life.example.com</div></pre></td></tr></table></figure>\n<h4 id=\"rewrite\"><a href=\"#rewrite\" class=\"headerlink\" title=\"rewrite\"></a>rewrite</h4><p>The rewrite rule configuration file allows you to use more complex configurations to satisfy complex usage scenarios. You can configure the route in detail and make modifications to the request response. The syntax for the rewrite rule configuration is very similar to that of the Nginx syntax. For more details, check <a href=\"../configuration/rewrite.html\">rewrite</a>。</p>\n<h4 id=\"rewrite-configuration-sample\"><a href=\"#rewrite-configuration-sample\" class=\"headerlink\" title=\"rewrite configuration sample\"></a>rewrite configuration sample</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># Global variable</span></div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$port</span> 8899;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ip</span>   127.0.0.1;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$online</span> 210.0.0.0;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Domain configuration</span></div><div class=\"line\">domain example.com &#123;</div><div class=\"line\">  location / &#123;</div><div class=\"line\">    proxy_pass http://<span class=\"variable\">$online</span>/;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  location /blog/ &#123;</div><div class=\"line\">    proxy_pass http://<span class=\"variable\">$ip</span>:<span class=\"variable\">$port</span>/blog/;</div><div class=\"line\">    proxy_set_header from <span class=\"string\">'hiproxy'</span>;</div><div class=\"line\">    set_header proxy <span class=\"string\">'hiproxy'</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Plugin-mechanism\"><a href=\"#Plugin-mechanism\" class=\"headerlink\" title=\"Plugin mechanism\"></a>Plugin mechanism</h3><p>When hiproxy starts, it automatically finds the module at the beginning of the <code>hiproxy-plugin-</code> from the directory in the NPM global module (<code>npm, root, -g</code>) and automatically resolve the plugin content after finding the modules.</p>\n<p>Therefore, we only need global install plugins independently, no need to upgrade hiproxy, and the hiproxy plugin development is also independent, the plugin project itself is not dependent on hiproxy.</p>\n<p>For detailed plugin documents, check <a href=\"../developers/plugin.html\">hiproxy Plugin</a>；</p>\n"},{"title":"Installation","_content":"\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## Install hiproxy\n\n### NPM\n\nhiproxy has already been available in [npm](https://www.npmjs.com/), install it via commands:\n```bash\nnpm install -g hiproxy\n```\n\nThe latest beta version is also available (might be unstable), install it via commands:\n```bash\nnpm install -g hiproxy@beta\n```\n\nInstall source code from github via commands:\n```bash\nnpm install -g hiproxy/hiproxy\n```\n\n**TIPS**: If you haven't installed NodeJS, download and install it from [Node.js](https://nodejs.org/en/)\n\n### YARN\n\nhiproxy can be installed by [yarn](https://yarnpkg.com):\n```bash\nyarn global add hiproxy\n```\n\n## Plugins installation\n\nhiproxy also supports plugins. The plugins can be installed individually from hiproxy, just global install them.\n\ne.g. If you want to install the plugin [hiporxy-plugin-dashboard](https://www.npmjs.com/package/hiproxy-plugin-dashboard), use the commands below:\n\n```bash\nnpm install hiproxy-plugin-dashboard -g\n```\n\nAfter installation, the next time hiproxy starts, those plugins will be automatically loaded.\n","source":"get_started/installation.md","raw":"title: Installation\n---\n\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## Install hiproxy\n\n### NPM\n\nhiproxy has already been available in [npm](https://www.npmjs.com/), install it via commands:\n```bash\nnpm install -g hiproxy\n```\n\nThe latest beta version is also available (might be unstable), install it via commands:\n```bash\nnpm install -g hiproxy@beta\n```\n\nInstall source code from github via commands:\n```bash\nnpm install -g hiproxy/hiproxy\n```\n\n**TIPS**: If you haven't installed NodeJS, download and install it from [Node.js](https://nodejs.org/en/)\n\n### YARN\n\nhiproxy can be installed by [yarn](https://yarnpkg.com):\n```bash\nyarn global add hiproxy\n```\n\n## Plugins installation\n\nhiproxy also supports plugins. The plugins can be installed individually from hiproxy, just global install them.\n\ne.g. If you want to install the plugin [hiporxy-plugin-dashboard](https://www.npmjs.com/package/hiproxy-plugin-dashboard), use the commands below:\n\n```bash\nnpm install hiproxy-plugin-dashboard -g\n```\n\nAfter installation, the next time hiproxy starts, those plugins will be automatically loaded.\n","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"get_started/installation.html","comments":1,"layout":"page","_id":"cj7nia0f3000ihy0firbpye5l","content":"<blockquote>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"Install-hiproxy\"><a href=\"#Install-hiproxy\" class=\"headerlink\" title=\"Install hiproxy\"></a>Install hiproxy</h2><h3 id=\"NPM\"><a href=\"#NPM\" class=\"headerlink\" title=\"NPM\"></a>NPM</h3><p>hiproxy has already been available in <a href=\"https://www.npmjs.com/\" target=\"_blank\" rel=\"external\">npm</a>, install it via commands:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g hiproxy</div></pre></td></tr></table></figure></p>\n<p>The latest beta version is also available (might be unstable), install it via commands:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g hiproxy@beta</div></pre></td></tr></table></figure></p>\n<p>Install source code from github via commands:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g hiproxy/hiproxy</div></pre></td></tr></table></figure></p>\n<p><strong>TIPS</strong>: If you haven’t installed NodeJS, download and install it from <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">Node.js</a></p>\n<h3 id=\"YARN\"><a href=\"#YARN\" class=\"headerlink\" title=\"YARN\"></a>YARN</h3><p>hiproxy can be installed by <a href=\"https://yarnpkg.com\" target=\"_blank\" rel=\"external\">yarn</a>:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yarn global add hiproxy</div></pre></td></tr></table></figure></p>\n<h2 id=\"Plugins-installation\"><a href=\"#Plugins-installation\" class=\"headerlink\" title=\"Plugins installation\"></a>Plugins installation</h2><p>hiproxy also supports plugins. The plugins can be installed individually from hiproxy, just global install them.</p>\n<p>e.g. If you want to install the plugin <a href=\"https://www.npmjs.com/package/hiproxy-plugin-dashboard\" target=\"_blank\" rel=\"external\">hiporxy-plugin-dashboard</a>, use the commands below:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hiproxy-plugin-dashboard -g</div></pre></td></tr></table></figure>\n<p>After installation, the next time hiproxy starts, those plugins will be automatically loaded.</p>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"Install-hiproxy\"><a href=\"#Install-hiproxy\" class=\"headerlink\" title=\"Install hiproxy\"></a>Install hiproxy</h2><h3 id=\"NPM\"><a href=\"#NPM\" class=\"headerlink\" title=\"NPM\"></a>NPM</h3><p>hiproxy has already been available in <a href=\"https://www.npmjs.com/\" target=\"_blank\" rel=\"external\">npm</a>, install it via commands:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g hiproxy</div></pre></td></tr></table></figure></p>\n<p>The latest beta version is also available (might be unstable), install it via commands:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g hiproxy@beta</div></pre></td></tr></table></figure></p>\n<p>Install source code from github via commands:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g hiproxy/hiproxy</div></pre></td></tr></table></figure></p>\n<p><strong>TIPS</strong>: If you haven’t installed NodeJS, download and install it from <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">Node.js</a></p>\n<h3 id=\"YARN\"><a href=\"#YARN\" class=\"headerlink\" title=\"YARN\"></a>YARN</h3><p>hiproxy can be installed by <a href=\"https://yarnpkg.com\" target=\"_blank\" rel=\"external\">yarn</a>:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yarn global add hiproxy</div></pre></td></tr></table></figure></p>\n<h2 id=\"Plugins-installation\"><a href=\"#Plugins-installation\" class=\"headerlink\" title=\"Plugins installation\"></a>Plugins installation</h2><p>hiproxy also supports plugins. The plugins can be installed individually from hiproxy, just global install them.</p>\n<p>e.g. If you want to install the plugin <a href=\"https://www.npmjs.com/package/hiproxy-plugin-dashboard\" target=\"_blank\" rel=\"external\">hiporxy-plugin-dashboard</a>, use the commands below:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hiproxy-plugin-dashboard -g</div></pre></td></tr></table></figure>\n<p>After installation, the next time hiproxy starts, those plugins will be automatically loaded.</p>\n"},{"title":"Run Example Project","_content":"\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## Introduction\n\nHere is an [Example](https://github.com/hiproxy/hiproxy-example), with a Workspace inside, this workspace contains three basic projects, they use port `8000`, `8001` and `8002` respectively.\n\nMeanwhile, a script named `server.js` is provided to start those three services, use command `npm start` or `node start`\n\nThe directory structure of this project is as follows:\n\n```bash\n.\n├── LICENSE\n├── README.md\n├── package.json\n├── start.js          # Service start\n└── workspace         # workspace\n    ├── blog-app      # blog app example\n    │   ├── app.js    # express app\n    │   ├── hosts     # hosts file\n    │   ├── public    # static resources\n    │   └── rewrite   # rewrite file\n    ├── main-app      # main app example\n    │   ├── app.js    # express app\n    │   ├── hosts     # hosts file\n    │   └── public    # static resources\n    └── news-app      # news app example\n        ├── app.js    # express app\n        └── hosts     # hosts file\n```\n\nIn directory `workspace`, three apps exist, with a `hosts` file for each:\n\n```bash\n# main-app hosts\n127.0.0.1:8000 www.example.com\n```\n\n```bash\n# blog-app hosts\n127.0.0.1:8001 blog.example.com\n```\n\n```bash\n# news-app hosts\n127.0.0.1:8002 news.example.com\n```\n\nFor `blog-app`, a `rewrite` file is included:\n\n```bash\n# rewrite rules\ndomain blog.example.io {\n  # rewrite / to 8001;\n  location / {\n    proxy_pass http://127.0.0.1:8001/;\n  }\n\n  # static files\n  location /static/ {\n    alias ./public/;\n\n    set_header server hiproxy;\n    set_cookie server hiproxy;\n  }\n}\n```\n\n...\n\n## STEPS\n\n### STEP 1: clone codes\n\nThe codes of example project is hosted on github, use Git command to clone those codes local\n\n```bash\ngit clone https://github.com/hiproxy/hiproxy-example.git\n```\n\n### STEP 2: install dependencies\n\nEnter the root directory of project `hiproxy-example/`, install all the third-party dependencies\n\n```bash\ncd hiproxy-example\nnpm install\n```\n\n### STEP 3: start service\n\nAfter cloning codes and installing dependencies, start the service provided by example project. Use command in `hiproxy-example/`:\n\n```bash\nnpm start\n```\n\n### STEP 4: start hiproxy\n\nWith all steps above done, start hiproxy to have the first taste of it. Use command in `hiproxy-example/`:\n\n```bash\nhiproxy start --https --open --workspace ./workspace\n```\n\n### STEP 5: View test page\n\nAfter running the command above, a browser window will be opened, with proxy already set. Visit any of the links below:\n\n* <http://blog.example.com/>\n* <http://www.example.com/>\n* <http://news.example.com/>\n* <http://blog.example.io/>\n* <http://blog.example.io/static/>\n\n","source":"get_started/run_example.md","raw":"title: Run Example Project\n---\n\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## Introduction\n\nHere is an [Example](https://github.com/hiproxy/hiproxy-example), with a Workspace inside, this workspace contains three basic projects, they use port `8000`, `8001` and `8002` respectively.\n\nMeanwhile, a script named `server.js` is provided to start those three services, use command `npm start` or `node start`\n\nThe directory structure of this project is as follows:\n\n```bash\n.\n├── LICENSE\n├── README.md\n├── package.json\n├── start.js          # Service start\n└── workspace         # workspace\n    ├── blog-app      # blog app example\n    │   ├── app.js    # express app\n    │   ├── hosts     # hosts file\n    │   ├── public    # static resources\n    │   └── rewrite   # rewrite file\n    ├── main-app      # main app example\n    │   ├── app.js    # express app\n    │   ├── hosts     # hosts file\n    │   └── public    # static resources\n    └── news-app      # news app example\n        ├── app.js    # express app\n        └── hosts     # hosts file\n```\n\nIn directory `workspace`, three apps exist, with a `hosts` file for each:\n\n```bash\n# main-app hosts\n127.0.0.1:8000 www.example.com\n```\n\n```bash\n# blog-app hosts\n127.0.0.1:8001 blog.example.com\n```\n\n```bash\n# news-app hosts\n127.0.0.1:8002 news.example.com\n```\n\nFor `blog-app`, a `rewrite` file is included:\n\n```bash\n# rewrite rules\ndomain blog.example.io {\n  # rewrite / to 8001;\n  location / {\n    proxy_pass http://127.0.0.1:8001/;\n  }\n\n  # static files\n  location /static/ {\n    alias ./public/;\n\n    set_header server hiproxy;\n    set_cookie server hiproxy;\n  }\n}\n```\n\n...\n\n## STEPS\n\n### STEP 1: clone codes\n\nThe codes of example project is hosted on github, use Git command to clone those codes local\n\n```bash\ngit clone https://github.com/hiproxy/hiproxy-example.git\n```\n\n### STEP 2: install dependencies\n\nEnter the root directory of project `hiproxy-example/`, install all the third-party dependencies\n\n```bash\ncd hiproxy-example\nnpm install\n```\n\n### STEP 3: start service\n\nAfter cloning codes and installing dependencies, start the service provided by example project. Use command in `hiproxy-example/`:\n\n```bash\nnpm start\n```\n\n### STEP 4: start hiproxy\n\nWith all steps above done, start hiproxy to have the first taste of it. Use command in `hiproxy-example/`:\n\n```bash\nhiproxy start --https --open --workspace ./workspace\n```\n\n### STEP 5: View test page\n\nAfter running the command above, a browser window will be opened, with proxy already set. Visit any of the links below:\n\n* <http://blog.example.com/>\n* <http://www.example.com/>\n* <http://news.example.com/>\n* <http://blog.example.io/>\n* <http://blog.example.io/static/>\n\n","date":"2017-09-16T15:46:18.000Z","updated":"2017-09-16T15:46:18.000Z","path":"get_started/run_example.html","comments":1,"layout":"page","_id":"cj7nia0f5000jhy0fw1tb3sx1","content":"<blockquote>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h2><p>Here is an <a href=\"https://github.com/hiproxy/hiproxy-example\" target=\"_blank\" rel=\"external\">Example</a>, with a Workspace inside, this workspace contains three basic projects, they use port <code>8000</code>, <code>8001</code> and <code>8002</code> respectively.</p>\n<p>Meanwhile, a script named <code>server.js</code> is provided to start those three services, use command <code>npm start</code> or <code>node start</code></p>\n<p>The directory structure of this project is as follows:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">.</div><div class=\"line\">├── LICENSE</div><div class=\"line\">├── README.md</div><div class=\"line\">├── package.json</div><div class=\"line\">├── start.js          <span class=\"comment\"># Service start</span></div><div class=\"line\">└── workspace         <span class=\"comment\"># workspace</span></div><div class=\"line\">    ├── blog-app      <span class=\"comment\"># blog app example</span></div><div class=\"line\">    │   ├── app.js    <span class=\"comment\"># express app</span></div><div class=\"line\">    │   ├── hosts     <span class=\"comment\"># hosts file</span></div><div class=\"line\">    │   ├── public    <span class=\"comment\"># static resources</span></div><div class=\"line\">    │   └── rewrite   <span class=\"comment\"># rewrite file</span></div><div class=\"line\">    ├── main-app      <span class=\"comment\"># main app example</span></div><div class=\"line\">    │   ├── app.js    <span class=\"comment\"># express app</span></div><div class=\"line\">    │   ├── hosts     <span class=\"comment\"># hosts file</span></div><div class=\"line\">    │   └── public    <span class=\"comment\"># static resources</span></div><div class=\"line\">    └── news-app      <span class=\"comment\"># news app example</span></div><div class=\"line\">        ├── app.js    <span class=\"comment\"># express app</span></div><div class=\"line\">        └── hosts     <span class=\"comment\"># hosts file</span></div></pre></td></tr></table></figure>\n<p>In directory <code>workspace</code>, three apps exist, with a <code>hosts</code> file for each:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># main-app hosts</span></div><div class=\"line\">127.0.0.1:8000 www.example.com</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># blog-app hosts</span></div><div class=\"line\">127.0.0.1:8001 blog.example.com</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># news-app hosts</span></div><div class=\"line\">127.0.0.1:8002 news.example.com</div></pre></td></tr></table></figure>\n<p>For <code>blog-app</code>, a <code>rewrite</code> file is included:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># rewrite rules</span></div><div class=\"line\">domain blog.example.io &#123;</div><div class=\"line\">  <span class=\"comment\"># rewrite / to 8001;</span></div><div class=\"line\">  location / &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:8001/;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># static files</span></div><div class=\"line\">  location /static/ &#123;</div><div class=\"line\">    <span class=\"built_in\">alias</span> ./public/;</div><div class=\"line\"></div><div class=\"line\">    set_header server hiproxy;</div><div class=\"line\">    set_cookie server hiproxy;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>…</p>\n<h2 id=\"STEPS\"><a href=\"#STEPS\" class=\"headerlink\" title=\"STEPS\"></a>STEPS</h2><h3 id=\"STEP-1-clone-codes\"><a href=\"#STEP-1-clone-codes\" class=\"headerlink\" title=\"STEP 1: clone codes\"></a>STEP 1: clone codes</h3><p>The codes of example project is hosted on github, use Git command to clone those codes local</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/hiproxy/hiproxy-example.git</div></pre></td></tr></table></figure>\n<h3 id=\"STEP-2-install-dependencies\"><a href=\"#STEP-2-install-dependencies\" class=\"headerlink\" title=\"STEP 2: install dependencies\"></a>STEP 2: install dependencies</h3><p>Enter the root directory of project <code>hiproxy-example/</code>, install all the third-party dependencies</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> hiproxy-example</div><div class=\"line\">npm install</div></pre></td></tr></table></figure>\n<h3 id=\"STEP-3-start-service\"><a href=\"#STEP-3-start-service\" class=\"headerlink\" title=\"STEP 3: start service\"></a>STEP 3: start service</h3><p>After cloning codes and installing dependencies, start the service provided by example project. Use command in <code>hiproxy-example/</code>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm start</div></pre></td></tr></table></figure>\n<h3 id=\"STEP-4-start-hiproxy\"><a href=\"#STEP-4-start-hiproxy\" class=\"headerlink\" title=\"STEP 4: start hiproxy\"></a>STEP 4: start hiproxy</h3><p>With all steps above done, start hiproxy to have the first taste of it. Use command in <code>hiproxy-example/</code>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hiproxy start --https --open --workspace ./workspace</div></pre></td></tr></table></figure>\n<h3 id=\"STEP-5-View-test-page\"><a href=\"#STEP-5-View-test-page\" class=\"headerlink\" title=\"STEP 5: View test page\"></a>STEP 5: View test page</h3><p>After running the command above, a browser window will be opened, with proxy already set. Visit any of the links below:</p>\n<ul>\n<li><a href=\"http://blog.example.com/\" target=\"_blank\" rel=\"external\">http://blog.example.com/</a></li>\n<li><a href=\"http://www.example.com/\" target=\"_blank\" rel=\"external\">http://www.example.com/</a></li>\n<li><a href=\"http://news.example.com/\" target=\"_blank\" rel=\"external\">http://news.example.com/</a></li>\n<li><a href=\"http://blog.example.io/\" target=\"_blank\" rel=\"external\">http://blog.example.io/</a></li>\n<li><a href=\"http://blog.example.io/static/\" target=\"_blank\" rel=\"external\">http://blog.example.io/static/</a></li>\n</ul>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h2><p>Here is an <a href=\"https://github.com/hiproxy/hiproxy-example\" target=\"_blank\" rel=\"external\">Example</a>, with a Workspace inside, this workspace contains three basic projects, they use port <code>8000</code>, <code>8001</code> and <code>8002</code> respectively.</p>\n<p>Meanwhile, a script named <code>server.js</code> is provided to start those three services, use command <code>npm start</code> or <code>node start</code></p>\n<p>The directory structure of this project is as follows:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">.</div><div class=\"line\">├── LICENSE</div><div class=\"line\">├── README.md</div><div class=\"line\">├── package.json</div><div class=\"line\">├── start.js          <span class=\"comment\"># Service start</span></div><div class=\"line\">└── workspace         <span class=\"comment\"># workspace</span></div><div class=\"line\">    ├── blog-app      <span class=\"comment\"># blog app example</span></div><div class=\"line\">    │   ├── app.js    <span class=\"comment\"># express app</span></div><div class=\"line\">    │   ├── hosts     <span class=\"comment\"># hosts file</span></div><div class=\"line\">    │   ├── public    <span class=\"comment\"># static resources</span></div><div class=\"line\">    │   └── rewrite   <span class=\"comment\"># rewrite file</span></div><div class=\"line\">    ├── main-app      <span class=\"comment\"># main app example</span></div><div class=\"line\">    │   ├── app.js    <span class=\"comment\"># express app</span></div><div class=\"line\">    │   ├── hosts     <span class=\"comment\"># hosts file</span></div><div class=\"line\">    │   └── public    <span class=\"comment\"># static resources</span></div><div class=\"line\">    └── news-app      <span class=\"comment\"># news app example</span></div><div class=\"line\">        ├── app.js    <span class=\"comment\"># express app</span></div><div class=\"line\">        └── hosts     <span class=\"comment\"># hosts file</span></div></pre></td></tr></table></figure>\n<p>In directory <code>workspace</code>, three apps exist, with a <code>hosts</code> file for each:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># main-app hosts</span></div><div class=\"line\">127.0.0.1:8000 www.example.com</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># blog-app hosts</span></div><div class=\"line\">127.0.0.1:8001 blog.example.com</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># news-app hosts</span></div><div class=\"line\">127.0.0.1:8002 news.example.com</div></pre></td></tr></table></figure>\n<p>For <code>blog-app</code>, a <code>rewrite</code> file is included:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># rewrite rules</span></div><div class=\"line\">domain blog.example.io &#123;</div><div class=\"line\">  <span class=\"comment\"># rewrite / to 8001;</span></div><div class=\"line\">  location / &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:8001/;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># static files</span></div><div class=\"line\">  location /static/ &#123;</div><div class=\"line\">    <span class=\"built_in\">alias</span> ./public/;</div><div class=\"line\"></div><div class=\"line\">    set_header server hiproxy;</div><div class=\"line\">    set_cookie server hiproxy;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>…</p>\n<h2 id=\"STEPS\"><a href=\"#STEPS\" class=\"headerlink\" title=\"STEPS\"></a>STEPS</h2><h3 id=\"STEP-1-clone-codes\"><a href=\"#STEP-1-clone-codes\" class=\"headerlink\" title=\"STEP 1: clone codes\"></a>STEP 1: clone codes</h3><p>The codes of example project is hosted on github, use Git command to clone those codes local</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/hiproxy/hiproxy-example.git</div></pre></td></tr></table></figure>\n<h3 id=\"STEP-2-install-dependencies\"><a href=\"#STEP-2-install-dependencies\" class=\"headerlink\" title=\"STEP 2: install dependencies\"></a>STEP 2: install dependencies</h3><p>Enter the root directory of project <code>hiproxy-example/</code>, install all the third-party dependencies</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> hiproxy-example</div><div class=\"line\">npm install</div></pre></td></tr></table></figure>\n<h3 id=\"STEP-3-start-service\"><a href=\"#STEP-3-start-service\" class=\"headerlink\" title=\"STEP 3: start service\"></a>STEP 3: start service</h3><p>After cloning codes and installing dependencies, start the service provided by example project. Use command in <code>hiproxy-example/</code>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm start</div></pre></td></tr></table></figure>\n<h3 id=\"STEP-4-start-hiproxy\"><a href=\"#STEP-4-start-hiproxy\" class=\"headerlink\" title=\"STEP 4: start hiproxy\"></a>STEP 4: start hiproxy</h3><p>With all steps above done, start hiproxy to have the first taste of it. Use command in <code>hiproxy-example/</code>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hiproxy start --https --open --workspace ./workspace</div></pre></td></tr></table></figure>\n<h3 id=\"STEP-5-View-test-page\"><a href=\"#STEP-5-View-test-page\" class=\"headerlink\" title=\"STEP 5: View test page\"></a>STEP 5: View test page</h3><p>After running the command above, a browser window will be opened, with proxy already set. Visit any of the links below:</p>\n<ul>\n<li><a href=\"http://blog.example.com/\" target=\"_blank\" rel=\"external\">http://blog.example.com/</a></li>\n<li><a href=\"http://www.example.com/\" target=\"_blank\" rel=\"external\">http://www.example.com/</a></li>\n<li><a href=\"http://news.example.com/\" target=\"_blank\" rel=\"external\">http://news.example.com/</a></li>\n<li><a href=\"http://blog.example.io/\" target=\"_blank\" rel=\"external\">http://blog.example.io/</a></li>\n<li><a href=\"http://blog.example.io/static/\" target=\"_blank\" rel=\"external\">http://blog.example.io/static/</a></li>\n</ul>\n"},{"title":"Rewrite Directive","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 指令\n\n`指令`（也称：`命令`）用于设置变量，或者对request/response做一些操作。\n\n### set\n\n描述：定义变量\n\n语法：**set** key value\n\n**作用域链**：global, domain, location\n\n例子：\n\n```bash\nset $server hiipack;\n```\n\n### 代理请求相关指令\n\n代理请求相关的指令，用于操作代理服务向目标服务器发送请求的`Request`对象。\n\n**作用域链**：domain, location\n\n#### * proxy_set_header\n\n描述：设置请求头部字段\n\n语法：**proxy_set_header** key value\n\n例子：\n\n```bash\nproxy_set_header Host some.example.com;\n```\n\n#### * proxy_hide_header\n\n描述：删除请求头部字段\n\n语法：**proxy_hide_header** key\n\n例子：\n\n```bash\nproxy_hide_header Host;\n```\n\n#### * proxy_set_cookie\n\n描述：设置请求Cookie\n\n语法：**proxy_set_cookie** key value\n\n例子：\n\n```bash\nproxy_set_cookie from hiproxy;\n```\n\n#### * proxy_hide_cookie\n\n描述：删除请求Cookie字段\n\n语法：**proxy_hide_cookie** key\n\n例子：\n\n```bash\nproxy_hide_cookie from;\n```\n\n### 代理响应相关指令\n\n代理响应相关的指令用于配置代理服务器响应浏览器的`Response`对象。\n\n**作用域链**：domain, location\n\n#### * set_header\n\n描述：添加Header字段\n\n语法：**set_header** key value\n\n例子：\n\n```bash\nset_header SERVER hiproxy;\n```\n\n#### * hide_header\n\n描述：删除Header字段\n\n语法：**hide_header** key\n\n*例子*：\n\n```bash\nhide_header SERVER;\n```\n\n#### * set_cookie\n\n描述：设置Cookie字段\n\n语法：**set_cookie** key value\n\n例子\n\n```bash\nset_cookie SESSION_ID 2BF36A09CB35FD71E;\n```\n\n#### * hide_cookie\n\n描述：删除Cookie字段\n\n语法：**hide_cookie** key\n\n*例子*：\n\n```bash\nhide_cookie SESSION_ID;\n```\n\n#### * send_file\n\n描述：返回指定的文件\n\n语法：**send_file** file_name\n\n例子：\n\n```bash\nsend_file index.html;\nsend_file /site/index.html;\n```\n\n#### * echo\n\n描述：返回指定内容\n\n语法：**echo** string\n\n例子：\n\n```bash\necho <h1>hello_echo</h1>;\necho <p>finish</p>;\n```\n\n\n### domain内部指令\n\n只在同一个domain内有效，且覆盖全局同名指令\n\n**作用域链**：domain\n\n#### * ssl_certificate\n\n描述：手动指定证书文件\n\n参数：**ssl_certificate** file.crt（只支持相对路径，后期完善）\n\n例子：\n\n```bash\nexample.com => {\n    ssl_certificate /user/root/.hiproxy/cert/example.crt;\n}\n\n```\n\n#### * ssl_certificate_key\n\n描述：手动指定私钥文件\n\n参数：**ssl_certificate_key** file.key（只支持相对路径，后期完善）\n\n例子：\n\n```bash\nexample.com => {\n    ssl_certificate_key /user/root/.hiproxy/cert/example.key;\n}\n\n```\n\n\n### location内部指令\n\n只在同一个location内有效，且覆盖全局及domain同名指令\n\n**作用域链**：domain, location\n\n#### * proxy_pass\n\n描述：设置请求转发的目标地址\n\n参数：**proxy_pass** url\n\n例子：\n\n```bash\nproxy_pass http://some.example.com/some/path/;\n```\n\n#### * alias\n\n描述：将对应的`location`映射到本地目录\n\n参数：**alias** path\n\n例子：\n\n```bash\nalias /Users/root/some/path/;\n```\n\n#### * root\n\n描述：将对应的`location`映射到本地目录时的默认文件，默认文件名为`index.html`\n\n参数：**root** file_name\n\n*例子*：\n\n```bash\nroot app.html;\n```\n","source":"rewrite/directive.md","raw":"title: Rewrite Directive\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 指令\n\n`指令`（也称：`命令`）用于设置变量，或者对request/response做一些操作。\n\n### set\n\n描述：定义变量\n\n语法：**set** key value\n\n**作用域链**：global, domain, location\n\n例子：\n\n```bash\nset $server hiipack;\n```\n\n### 代理请求相关指令\n\n代理请求相关的指令，用于操作代理服务向目标服务器发送请求的`Request`对象。\n\n**作用域链**：domain, location\n\n#### * proxy_set_header\n\n描述：设置请求头部字段\n\n语法：**proxy_set_header** key value\n\n例子：\n\n```bash\nproxy_set_header Host some.example.com;\n```\n\n#### * proxy_hide_header\n\n描述：删除请求头部字段\n\n语法：**proxy_hide_header** key\n\n例子：\n\n```bash\nproxy_hide_header Host;\n```\n\n#### * proxy_set_cookie\n\n描述：设置请求Cookie\n\n语法：**proxy_set_cookie** key value\n\n例子：\n\n```bash\nproxy_set_cookie from hiproxy;\n```\n\n#### * proxy_hide_cookie\n\n描述：删除请求Cookie字段\n\n语法：**proxy_hide_cookie** key\n\n例子：\n\n```bash\nproxy_hide_cookie from;\n```\n\n### 代理响应相关指令\n\n代理响应相关的指令用于配置代理服务器响应浏览器的`Response`对象。\n\n**作用域链**：domain, location\n\n#### * set_header\n\n描述：添加Header字段\n\n语法：**set_header** key value\n\n例子：\n\n```bash\nset_header SERVER hiproxy;\n```\n\n#### * hide_header\n\n描述：删除Header字段\n\n语法：**hide_header** key\n\n*例子*：\n\n```bash\nhide_header SERVER;\n```\n\n#### * set_cookie\n\n描述：设置Cookie字段\n\n语法：**set_cookie** key value\n\n例子\n\n```bash\nset_cookie SESSION_ID 2BF36A09CB35FD71E;\n```\n\n#### * hide_cookie\n\n描述：删除Cookie字段\n\n语法：**hide_cookie** key\n\n*例子*：\n\n```bash\nhide_cookie SESSION_ID;\n```\n\n#### * send_file\n\n描述：返回指定的文件\n\n语法：**send_file** file_name\n\n例子：\n\n```bash\nsend_file index.html;\nsend_file /site/index.html;\n```\n\n#### * echo\n\n描述：返回指定内容\n\n语法：**echo** string\n\n例子：\n\n```bash\necho <h1>hello_echo</h1>;\necho <p>finish</p>;\n```\n\n\n### domain内部指令\n\n只在同一个domain内有效，且覆盖全局同名指令\n\n**作用域链**：domain\n\n#### * ssl_certificate\n\n描述：手动指定证书文件\n\n参数：**ssl_certificate** file.crt（只支持相对路径，后期完善）\n\n例子：\n\n```bash\nexample.com => {\n    ssl_certificate /user/root/.hiproxy/cert/example.crt;\n}\n\n```\n\n#### * ssl_certificate_key\n\n描述：手动指定私钥文件\n\n参数：**ssl_certificate_key** file.key（只支持相对路径，后期完善）\n\n例子：\n\n```bash\nexample.com => {\n    ssl_certificate_key /user/root/.hiproxy/cert/example.key;\n}\n\n```\n\n\n### location内部指令\n\n只在同一个location内有效，且覆盖全局及domain同名指令\n\n**作用域链**：domain, location\n\n#### * proxy_pass\n\n描述：设置请求转发的目标地址\n\n参数：**proxy_pass** url\n\n例子：\n\n```bash\nproxy_pass http://some.example.com/some/path/;\n```\n\n#### * alias\n\n描述：将对应的`location`映射到本地目录\n\n参数：**alias** path\n\n例子：\n\n```bash\nalias /Users/root/some/path/;\n```\n\n#### * root\n\n描述：将对应的`location`映射到本地目录时的默认文件，默认文件名为`index.html`\n\n参数：**root** file_name\n\n*例子*：\n\n```bash\nroot app.html;\n```\n","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"rewrite/directive.html","comments":1,"layout":"page","_id":"cj7nia0fm000khy0fhcsf4icl","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"指令\"><a href=\"#指令\" class=\"headerlink\" title=\"指令\"></a>指令</h2><p><code>指令</code>（也称：<code>命令</code>）用于设置变量，或者对request/response做一些操作。</p>\n<h3 id=\"set\"><a href=\"#set\" class=\"headerlink\" title=\"set\"></a>set</h3><p>描述：定义变量</p>\n<p>语法：<strong>set</strong> key value</p>\n<p><strong>作用域链</strong>：global, domain, location</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$server</span> hiipack;</div></pre></td></tr></table></figure>\n<h3 id=\"代理请求相关指令\"><a href=\"#代理请求相关指令\" class=\"headerlink\" title=\"代理请求相关指令\"></a>代理请求相关指令</h3><p>代理请求相关的指令，用于操作代理服务向目标服务器发送请求的<code>Request</code>对象。</p>\n<p><strong>作用域链</strong>：domain, location</p>\n<h4 id=\"proxy-set-header\"><a href=\"#proxy-set-header\" class=\"headerlink\" title=\"* proxy_set_header\"></a>* proxy_set_header</h4><p>描述：设置请求头部字段</p>\n<p>语法：<strong>proxy_set_header</strong> key value</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_set_header Host some.example.com;</div></pre></td></tr></table></figure>\n<h4 id=\"proxy-hide-header\"><a href=\"#proxy-hide-header\" class=\"headerlink\" title=\"* proxy_hide_header\"></a>* proxy_hide_header</h4><p>描述：删除请求头部字段</p>\n<p>语法：<strong>proxy_hide_header</strong> key</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_hide_header Host;</div></pre></td></tr></table></figure>\n<h4 id=\"proxy-set-cookie\"><a href=\"#proxy-set-cookie\" class=\"headerlink\" title=\"* proxy_set_cookie\"></a>* proxy_set_cookie</h4><p>描述：设置请求Cookie</p>\n<p>语法：<strong>proxy_set_cookie</strong> key value</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_set_cookie from hiproxy;</div></pre></td></tr></table></figure>\n<h4 id=\"proxy-hide-cookie\"><a href=\"#proxy-hide-cookie\" class=\"headerlink\" title=\"* proxy_hide_cookie\"></a>* proxy_hide_cookie</h4><p>描述：删除请求Cookie字段</p>\n<p>语法：<strong>proxy_hide_cookie</strong> key</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_hide_cookie from;</div></pre></td></tr></table></figure>\n<h3 id=\"代理响应相关指令\"><a href=\"#代理响应相关指令\" class=\"headerlink\" title=\"代理响应相关指令\"></a>代理响应相关指令</h3><p>代理响应相关的指令用于配置代理服务器响应浏览器的<code>Response</code>对象。</p>\n<p><strong>作用域链</strong>：domain, location</p>\n<h4 id=\"set-header\"><a href=\"#set-header\" class=\"headerlink\" title=\"* set_header\"></a>* set_header</h4><p>描述：添加Header字段</p>\n<p>语法：<strong>set_header</strong> key value</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">set_header SERVER hiproxy;</div></pre></td></tr></table></figure>\n<h4 id=\"hide-header\"><a href=\"#hide-header\" class=\"headerlink\" title=\"* hide_header\"></a>* hide_header</h4><p>描述：删除Header字段</p>\n<p>语法：<strong>hide_header</strong> key</p>\n<p><em>例子</em>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hide_header SERVER;</div></pre></td></tr></table></figure>\n<h4 id=\"set-cookie\"><a href=\"#set-cookie\" class=\"headerlink\" title=\"* set_cookie\"></a>* set_cookie</h4><p>描述：设置Cookie字段</p>\n<p>语法：<strong>set_cookie</strong> key value</p>\n<p>例子</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">set_cookie SESSION_ID 2BF36A09CB35FD71E;</div></pre></td></tr></table></figure>\n<h4 id=\"hide-cookie\"><a href=\"#hide-cookie\" class=\"headerlink\" title=\"* hide_cookie\"></a>* hide_cookie</h4><p>描述：删除Cookie字段</p>\n<p>语法：<strong>hide_cookie</strong> key</p>\n<p><em>例子</em>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hide_cookie SESSION_ID;</div></pre></td></tr></table></figure>\n<h4 id=\"send-file\"><a href=\"#send-file\" class=\"headerlink\" title=\"* send_file\"></a>* send_file</h4><p>描述：返回指定的文件</p>\n<p>语法：<strong>send_file</strong> file_name</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">send_file index.html;</div><div class=\"line\">send_file /site/index.html;</div></pre></td></tr></table></figure>\n<h4 id=\"echo\"><a href=\"#echo\" class=\"headerlink\" title=\"* echo\"></a>* echo</h4><p>描述：返回指定内容</p>\n<p>语法：<strong>echo</strong> string</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">echo</span> &lt;h1&gt;hello_echo&lt;/h1&gt;;</div><div class=\"line\"><span class=\"built_in\">echo</span> &lt;p&gt;finish&lt;/p&gt;;</div></pre></td></tr></table></figure>\n<h3 id=\"domain内部指令\"><a href=\"#domain内部指令\" class=\"headerlink\" title=\"domain内部指令\"></a>domain内部指令</h3><p>只在同一个domain内有效，且覆盖全局同名指令</p>\n<p><strong>作用域链</strong>：domain</p>\n<h4 id=\"ssl-certificate\"><a href=\"#ssl-certificate\" class=\"headerlink\" title=\"* ssl_certificate\"></a>* ssl_certificate</h4><p>描述：手动指定证书文件</p>\n<p>参数：<strong>ssl_certificate</strong> file.crt（只支持相对路径，后期完善）</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">example.com =&gt; &#123;</div><div class=\"line\">    ssl_certificate /user/root/.hiproxy/cert/example.crt;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"ssl-certificate-key\"><a href=\"#ssl-certificate-key\" class=\"headerlink\" title=\"* ssl_certificate_key\"></a>* ssl_certificate_key</h4><p>描述：手动指定私钥文件</p>\n<p>参数：<strong>ssl_certificate_key</strong> file.key（只支持相对路径，后期完善）</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">example.com =&gt; &#123;</div><div class=\"line\">    ssl_certificate_key /user/root/.hiproxy/cert/example.key;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"location内部指令\"><a href=\"#location内部指令\" class=\"headerlink\" title=\"location内部指令\"></a>location内部指令</h3><p>只在同一个location内有效，且覆盖全局及domain同名指令</p>\n<p><strong>作用域链</strong>：domain, location</p>\n<h4 id=\"proxy-pass\"><a href=\"#proxy-pass\" class=\"headerlink\" title=\"* proxy_pass\"></a>* proxy_pass</h4><p>描述：设置请求转发的目标地址</p>\n<p>参数：<strong>proxy_pass</strong> url</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_pass http://some.example.com/some/path/;</div></pre></td></tr></table></figure>\n<h4 id=\"alias\"><a href=\"#alias\" class=\"headerlink\" title=\"* alias\"></a>* alias</h4><p>描述：将对应的<code>location</code>映射到本地目录</p>\n<p>参数：<strong>alias</strong> path</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">alias</span> /Users/root/some/path/;</div></pre></td></tr></table></figure>\n<h4 id=\"root\"><a href=\"#root\" class=\"headerlink\" title=\"* root\"></a>* root</h4><p>描述：将对应的<code>location</code>映射到本地目录时的默认文件，默认文件名为<code>index.html</code></p>\n<p>参数：<strong>root</strong> file_name</p>\n<p><em>例子</em>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">root app.html;</div></pre></td></tr></table></figure>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"指令\"><a href=\"#指令\" class=\"headerlink\" title=\"指令\"></a>指令</h2><p><code>指令</code>（也称：<code>命令</code>）用于设置变量，或者对request/response做一些操作。</p>\n<h3 id=\"set\"><a href=\"#set\" class=\"headerlink\" title=\"set\"></a>set</h3><p>描述：定义变量</p>\n<p>语法：<strong>set</strong> key value</p>\n<p><strong>作用域链</strong>：global, domain, location</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$server</span> hiipack;</div></pre></td></tr></table></figure>\n<h3 id=\"代理请求相关指令\"><a href=\"#代理请求相关指令\" class=\"headerlink\" title=\"代理请求相关指令\"></a>代理请求相关指令</h3><p>代理请求相关的指令，用于操作代理服务向目标服务器发送请求的<code>Request</code>对象。</p>\n<p><strong>作用域链</strong>：domain, location</p>\n<h4 id=\"proxy-set-header\"><a href=\"#proxy-set-header\" class=\"headerlink\" title=\"* proxy_set_header\"></a>* proxy_set_header</h4><p>描述：设置请求头部字段</p>\n<p>语法：<strong>proxy_set_header</strong> key value</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_set_header Host some.example.com;</div></pre></td></tr></table></figure>\n<h4 id=\"proxy-hide-header\"><a href=\"#proxy-hide-header\" class=\"headerlink\" title=\"* proxy_hide_header\"></a>* proxy_hide_header</h4><p>描述：删除请求头部字段</p>\n<p>语法：<strong>proxy_hide_header</strong> key</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_hide_header Host;</div></pre></td></tr></table></figure>\n<h4 id=\"proxy-set-cookie\"><a href=\"#proxy-set-cookie\" class=\"headerlink\" title=\"* proxy_set_cookie\"></a>* proxy_set_cookie</h4><p>描述：设置请求Cookie</p>\n<p>语法：<strong>proxy_set_cookie</strong> key value</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_set_cookie from hiproxy;</div></pre></td></tr></table></figure>\n<h4 id=\"proxy-hide-cookie\"><a href=\"#proxy-hide-cookie\" class=\"headerlink\" title=\"* proxy_hide_cookie\"></a>* proxy_hide_cookie</h4><p>描述：删除请求Cookie字段</p>\n<p>语法：<strong>proxy_hide_cookie</strong> key</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_hide_cookie from;</div></pre></td></tr></table></figure>\n<h3 id=\"代理响应相关指令\"><a href=\"#代理响应相关指令\" class=\"headerlink\" title=\"代理响应相关指令\"></a>代理响应相关指令</h3><p>代理响应相关的指令用于配置代理服务器响应浏览器的<code>Response</code>对象。</p>\n<p><strong>作用域链</strong>：domain, location</p>\n<h4 id=\"set-header\"><a href=\"#set-header\" class=\"headerlink\" title=\"* set_header\"></a>* set_header</h4><p>描述：添加Header字段</p>\n<p>语法：<strong>set_header</strong> key value</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">set_header SERVER hiproxy;</div></pre></td></tr></table></figure>\n<h4 id=\"hide-header\"><a href=\"#hide-header\" class=\"headerlink\" title=\"* hide_header\"></a>* hide_header</h4><p>描述：删除Header字段</p>\n<p>语法：<strong>hide_header</strong> key</p>\n<p><em>例子</em>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hide_header SERVER;</div></pre></td></tr></table></figure>\n<h4 id=\"set-cookie\"><a href=\"#set-cookie\" class=\"headerlink\" title=\"* set_cookie\"></a>* set_cookie</h4><p>描述：设置Cookie字段</p>\n<p>语法：<strong>set_cookie</strong> key value</p>\n<p>例子</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">set_cookie SESSION_ID 2BF36A09CB35FD71E;</div></pre></td></tr></table></figure>\n<h4 id=\"hide-cookie\"><a href=\"#hide-cookie\" class=\"headerlink\" title=\"* hide_cookie\"></a>* hide_cookie</h4><p>描述：删除Cookie字段</p>\n<p>语法：<strong>hide_cookie</strong> key</p>\n<p><em>例子</em>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hide_cookie SESSION_ID;</div></pre></td></tr></table></figure>\n<h4 id=\"send-file\"><a href=\"#send-file\" class=\"headerlink\" title=\"* send_file\"></a>* send_file</h4><p>描述：返回指定的文件</p>\n<p>语法：<strong>send_file</strong> file_name</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">send_file index.html;</div><div class=\"line\">send_file /site/index.html;</div></pre></td></tr></table></figure>\n<h4 id=\"echo\"><a href=\"#echo\" class=\"headerlink\" title=\"* echo\"></a>* echo</h4><p>描述：返回指定内容</p>\n<p>语法：<strong>echo</strong> string</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">echo</span> &lt;h1&gt;hello_echo&lt;/h1&gt;;</div><div class=\"line\"><span class=\"built_in\">echo</span> &lt;p&gt;finish&lt;/p&gt;;</div></pre></td></tr></table></figure>\n<h3 id=\"domain内部指令\"><a href=\"#domain内部指令\" class=\"headerlink\" title=\"domain内部指令\"></a>domain内部指令</h3><p>只在同一个domain内有效，且覆盖全局同名指令</p>\n<p><strong>作用域链</strong>：domain</p>\n<h4 id=\"ssl-certificate\"><a href=\"#ssl-certificate\" class=\"headerlink\" title=\"* ssl_certificate\"></a>* ssl_certificate</h4><p>描述：手动指定证书文件</p>\n<p>参数：<strong>ssl_certificate</strong> file.crt（只支持相对路径，后期完善）</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">example.com =&gt; &#123;</div><div class=\"line\">    ssl_certificate /user/root/.hiproxy/cert/example.crt;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"ssl-certificate-key\"><a href=\"#ssl-certificate-key\" class=\"headerlink\" title=\"* ssl_certificate_key\"></a>* ssl_certificate_key</h4><p>描述：手动指定私钥文件</p>\n<p>参数：<strong>ssl_certificate_key</strong> file.key（只支持相对路径，后期完善）</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">example.com =&gt; &#123;</div><div class=\"line\">    ssl_certificate_key /user/root/.hiproxy/cert/example.key;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"location内部指令\"><a href=\"#location内部指令\" class=\"headerlink\" title=\"location内部指令\"></a>location内部指令</h3><p>只在同一个location内有效，且覆盖全局及domain同名指令</p>\n<p><strong>作用域链</strong>：domain, location</p>\n<h4 id=\"proxy-pass\"><a href=\"#proxy-pass\" class=\"headerlink\" title=\"* proxy_pass\"></a>* proxy_pass</h4><p>描述：设置请求转发的目标地址</p>\n<p>参数：<strong>proxy_pass</strong> url</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_pass http://some.example.com/some/path/;</div></pre></td></tr></table></figure>\n<h4 id=\"alias\"><a href=\"#alias\" class=\"headerlink\" title=\"* alias\"></a>* alias</h4><p>描述：将对应的<code>location</code>映射到本地目录</p>\n<p>参数：<strong>alias</strong> path</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">alias</span> /Users/root/some/path/;</div></pre></td></tr></table></figure>\n<h4 id=\"root\"><a href=\"#root\" class=\"headerlink\" title=\"* root\"></a>* root</h4><p>描述：将对应的<code>location</code>映射到本地目录时的默认文件，默认文件名为<code>index.html</code></p>\n<p>参数：<strong>root</strong> file_name</p>\n<p><em>例子</em>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">root app.html;</div></pre></td></tr></table></figure>\n"},{"title":"Rewrite Introduction","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 简介\n\n**rewrite** 参考了[Nginx][Nginx]配置语法，通过简单的配置，就可以帮助前端开发在本地调试的基础上，方便的利用其他环境或者线上的API接口进行测试。\n\n当服务启动后，将自动扫描并监听各项目根目录下的`rewrite`文件，生成及实时更新转发规则，无需重启服务。\n\n**注**：hiproxy同时支持项目`rewrite`及[hosts][hosts]文件。如果仅需要简单的`域名+端口`转发，请参考[hosts][hosts]。\n\n## 基本语法\n\n### 变量\n\n**语法**\n```bash\n$变量名\n```\n**例子**\n\n```bash\n# 定义变量\nset $var_name value\n\n# 使用变量\n$var_name\n```\n### domain\n\n`domain` 用来指定一个域名，这个域名的所有配置都在 `domain` 块中。\n\n**语法**\n\n```bash\n[域名|变量] => {\n    # ...\n}\n```\n**例子**\n\n```bash\nset $domain some.example.com\n\n# 直接使用域名\nsome.example.com => {\n    # ...\n}\n\n# 或者使用变量\n$domain => {\n    # ...\n}\n```\n### location\n\nlocation 用来指定域名中的一个具体的路径，这个路径的所有配置都在 location 块中。\n\n**注意**：location必须位于domain块中。\n\n**语法**\n\n```bash\nlocation [目录|文件|正则表达式|变量] {\n    # ...\n}\n```\n**例子**\n\n```bash\n# 目录\nlocation /some/path/ {\n    # ...\n}\n\n# 具体文件\nlocation /some/file.htm {\n    # ...\n}\n\n# 正则表达式\nlocation ~ ^/some/(path|path1)/.* {\n    # ...\n}\n\n# 变量\nlocation $some/$path {\n    # ...\n}\n```\n### 命令\n\n命令用于设置一些变量，或者对`request`\\/`response`做一些操作。\n\n**语法**\n\n```bash\n命令 参数1 参数2 ... 参数N\n```\n\n**例子**\n\n```bash\n# 设置代理时的头部\nproxy_set_header Host some.example.com;\n\n# 设置response的cookie\nset_cookie UserID some_user_id;\n```\n\n### 注释\n\n用来注释某些不需要的内容，**只支持单行注释**。\n\n**语法**\n\n```bash\n# 注释内容\n```\n\n### 简写语法\n\n简写语法，可以用来定义一些基本的规则，不需要写`location`和其他的命令。\n\n**语法**\n\n```bash\n域名 ==> 域名|路径\n```\n\n**例子**\n\n```bash\njson.example.com => 127.0.0.1:8800;\n```\n\n## 更多例子\n\n```bash\nset $local 127.0.0.1:8800\n# simple rewrite rule\napi.hiproxy.org => local.hiproxy.org;\napi.hiproxy.org => 127.0.0.1:8800;\napi.hiproxy.org/mock => $local/mock;\n```\n\n```bash\n# rewrite folder\napi.hiproxy.org/user/ => {\n    proxy_pass local.hiproxy.org/user/;\n\n    # proxy request config\n    proxy_set_header Host api.hiproxy.org;\n    proxy_set_header other value;\n    proxy_hide_header other;\n\n    proxy_set_cookie userid 20150910121359;\n    proxy_hide_cookie sessionid;\n\n    # response config\n    set_cookie sessionID E3BF86A90ACDD6C5FF49ACB09;\n    set_header proxy hiproxy;\n\n    # allow CORS\n    set_header Access-Control-Allow-Origin *;\n\n    hide_header proxy;\n    hide_cookie sessionID;\n}\n```\n\n```bash\n# regexp support\n~ /(demo|example)/([^\\/]*\\.(html|htm))$ => {\n   proxy_pass http://127.0.0.1:9999/$1/src/$2;\n}\n```\n\n```bash\nset $domain api.hiproxy.org;\nset $local 127.0.0.1:8800;\nset $api api;\nset $test $api.example.com;\nset $id 1234567;\n\n# standard rewrite url\n$domain => {\n    proxy_pass http://$local/api/mock/;\n    set $id 1234;\n    set $mock_user user_$id;\n    set_header Host $domain;\n    set_header UserID $mock_user;\n    set_header Access-Control-Allow-Origin *;\n}\n\nblog.hiproxy.org => {\n    set_header Access-Control-Allow-Origin *;\n\n    set $node_server 127.0.0.1:3008;\n    set $order order;\n    set $cookie1 login=true;expires=20160909;\n\n    location /$api/$order/detail {\n        proxy_pass http://$node_server/user/?domain=$domain;\n        set_header Set-Cookie userID 200908204140;\n    }\n\n    location ~ /(usercenter|userinfo)/ {\n        set $cookie login=true;expires=20180808;\n        set $id 56789;\n\n        proxy_pass http://127.0.0.1:3008/info/;\n\n        set_cookie userID 200908204140;\n        set_cookie userName user_$id;\n    }\n\n    location ~ /local\\/(.*)(\\?(.*))? {\n        send_file ./mock/$1.json;\n    }\n\n    location /dev {\n        #alias /site/path/;\n        alias ./src/view/;\n        root app.html\n    }\n\n    location /multiple {\n        echo <h1>hello_echo</h1>;\n        echo <p>test echo directive</p>;\n        echo <p>finish</p>;\n    }\n\n}\n```\n\n\n[hosts]: ../configuration/hosts.html\n[Nginx]: http://nginx.org/en/docs/\n","source":"rewrite/index.md","raw":"title: Rewrite Introduction\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 简介\n\n**rewrite** 参考了[Nginx][Nginx]配置语法，通过简单的配置，就可以帮助前端开发在本地调试的基础上，方便的利用其他环境或者线上的API接口进行测试。\n\n当服务启动后，将自动扫描并监听各项目根目录下的`rewrite`文件，生成及实时更新转发规则，无需重启服务。\n\n**注**：hiproxy同时支持项目`rewrite`及[hosts][hosts]文件。如果仅需要简单的`域名+端口`转发，请参考[hosts][hosts]。\n\n## 基本语法\n\n### 变量\n\n**语法**\n```bash\n$变量名\n```\n**例子**\n\n```bash\n# 定义变量\nset $var_name value\n\n# 使用变量\n$var_name\n```\n### domain\n\n`domain` 用来指定一个域名，这个域名的所有配置都在 `domain` 块中。\n\n**语法**\n\n```bash\n[域名|变量] => {\n    # ...\n}\n```\n**例子**\n\n```bash\nset $domain some.example.com\n\n# 直接使用域名\nsome.example.com => {\n    # ...\n}\n\n# 或者使用变量\n$domain => {\n    # ...\n}\n```\n### location\n\nlocation 用来指定域名中的一个具体的路径，这个路径的所有配置都在 location 块中。\n\n**注意**：location必须位于domain块中。\n\n**语法**\n\n```bash\nlocation [目录|文件|正则表达式|变量] {\n    # ...\n}\n```\n**例子**\n\n```bash\n# 目录\nlocation /some/path/ {\n    # ...\n}\n\n# 具体文件\nlocation /some/file.htm {\n    # ...\n}\n\n# 正则表达式\nlocation ~ ^/some/(path|path1)/.* {\n    # ...\n}\n\n# 变量\nlocation $some/$path {\n    # ...\n}\n```\n### 命令\n\n命令用于设置一些变量，或者对`request`\\/`response`做一些操作。\n\n**语法**\n\n```bash\n命令 参数1 参数2 ... 参数N\n```\n\n**例子**\n\n```bash\n# 设置代理时的头部\nproxy_set_header Host some.example.com;\n\n# 设置response的cookie\nset_cookie UserID some_user_id;\n```\n\n### 注释\n\n用来注释某些不需要的内容，**只支持单行注释**。\n\n**语法**\n\n```bash\n# 注释内容\n```\n\n### 简写语法\n\n简写语法，可以用来定义一些基本的规则，不需要写`location`和其他的命令。\n\n**语法**\n\n```bash\n域名 ==> 域名|路径\n```\n\n**例子**\n\n```bash\njson.example.com => 127.0.0.1:8800;\n```\n\n## 更多例子\n\n```bash\nset $local 127.0.0.1:8800\n# simple rewrite rule\napi.hiproxy.org => local.hiproxy.org;\napi.hiproxy.org => 127.0.0.1:8800;\napi.hiproxy.org/mock => $local/mock;\n```\n\n```bash\n# rewrite folder\napi.hiproxy.org/user/ => {\n    proxy_pass local.hiproxy.org/user/;\n\n    # proxy request config\n    proxy_set_header Host api.hiproxy.org;\n    proxy_set_header other value;\n    proxy_hide_header other;\n\n    proxy_set_cookie userid 20150910121359;\n    proxy_hide_cookie sessionid;\n\n    # response config\n    set_cookie sessionID E3BF86A90ACDD6C5FF49ACB09;\n    set_header proxy hiproxy;\n\n    # allow CORS\n    set_header Access-Control-Allow-Origin *;\n\n    hide_header proxy;\n    hide_cookie sessionID;\n}\n```\n\n```bash\n# regexp support\n~ /(demo|example)/([^\\/]*\\.(html|htm))$ => {\n   proxy_pass http://127.0.0.1:9999/$1/src/$2;\n}\n```\n\n```bash\nset $domain api.hiproxy.org;\nset $local 127.0.0.1:8800;\nset $api api;\nset $test $api.example.com;\nset $id 1234567;\n\n# standard rewrite url\n$domain => {\n    proxy_pass http://$local/api/mock/;\n    set $id 1234;\n    set $mock_user user_$id;\n    set_header Host $domain;\n    set_header UserID $mock_user;\n    set_header Access-Control-Allow-Origin *;\n}\n\nblog.hiproxy.org => {\n    set_header Access-Control-Allow-Origin *;\n\n    set $node_server 127.0.0.1:3008;\n    set $order order;\n    set $cookie1 login=true;expires=20160909;\n\n    location /$api/$order/detail {\n        proxy_pass http://$node_server/user/?domain=$domain;\n        set_header Set-Cookie userID 200908204140;\n    }\n\n    location ~ /(usercenter|userinfo)/ {\n        set $cookie login=true;expires=20180808;\n        set $id 56789;\n\n        proxy_pass http://127.0.0.1:3008/info/;\n\n        set_cookie userID 200908204140;\n        set_cookie userName user_$id;\n    }\n\n    location ~ /local\\/(.*)(\\?(.*))? {\n        send_file ./mock/$1.json;\n    }\n\n    location /dev {\n        #alias /site/path/;\n        alias ./src/view/;\n        root app.html\n    }\n\n    location /multiple {\n        echo <h1>hello_echo</h1>;\n        echo <p>test echo directive</p>;\n        echo <p>finish</p>;\n    }\n\n}\n```\n\n\n[hosts]: ../configuration/hosts.html\n[Nginx]: http://nginx.org/en/docs/\n","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"rewrite/index.html","comments":1,"layout":"page","_id":"cj7nia0gu000lhy0fhhxf073p","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><strong>rewrite</strong> 参考了<a href=\"http://nginx.org/en/docs/\" target=\"_blank\" rel=\"external\">Nginx</a>配置语法，通过简单的配置，就可以帮助前端开发在本地调试的基础上，方便的利用其他环境或者线上的API接口进行测试。</p>\n<p>当服务启动后，将自动扫描并监听各项目根目录下的<code>rewrite</code>文件，生成及实时更新转发规则，无需重启服务。</p>\n<p><strong>注</strong>：hiproxy同时支持项目<code>rewrite</code>及<a href=\"../configuration/hosts.html\">hosts</a>文件。如果仅需要简单的<code>域名+端口</code>转发，请参考<a href=\"../configuration/hosts.html\">hosts</a>。</p>\n<h2 id=\"基本语法\"><a href=\"#基本语法\" class=\"headerlink\" title=\"基本语法\"></a>基本语法</h2><h3 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h3><p><strong>语法</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$变量名</div></pre></td></tr></table></figure></p>\n<p><strong>例子</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 定义变量</span></div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$var_name</span> value</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 使用变量</span></div><div class=\"line\"><span class=\"variable\">$var_name</span></div></pre></td></tr></table></figure>\n<h3 id=\"domain\"><a href=\"#domain\" class=\"headerlink\" title=\"domain\"></a>domain</h3><p><code>domain</code> 用来指定一个域名，这个域名的所有配置都在 <code>domain</code> 块中。</p>\n<p><strong>语法</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[域名|变量] =&gt; &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong>例子</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$domain</span> some.example.com</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 直接使用域名</span></div><div class=\"line\">some.example.com =&gt; &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 或者使用变量</span></div><div class=\"line\"><span class=\"variable\">$domain</span> =&gt; &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"location\"><a href=\"#location\" class=\"headerlink\" title=\"location\"></a>location</h3><p>location 用来指定域名中的一个具体的路径，这个路径的所有配置都在 location 块中。</p>\n<p><strong>注意</strong>：location必须位于domain块中。</p>\n<p><strong>语法</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">location [目录|文件|正则表达式|变量] &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong>例子</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 目录</span></div><div class=\"line\">location /some/path/ &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 具体文件</span></div><div class=\"line\">location /some/file.htm &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 正则表达式</span></div><div class=\"line\">location ~ ^/some/(path|path1)/.* &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 变量</span></div><div class=\"line\">location <span class=\"variable\">$some</span>/<span class=\"variable\">$path</span> &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h3><p>命令用于设置一些变量，或者对<code>request</code>\\/<code>response</code>做一些操作。</p>\n<p><strong>语法</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">命令 参数1 参数2 ... 参数N</div></pre></td></tr></table></figure>\n<p><strong>例子</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 设置代理时的头部</span></div><div class=\"line\">proxy_set_header Host some.example.com;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 设置response的cookie</span></div><div class=\"line\">set_cookie UserID some_user_id;</div></pre></td></tr></table></figure>\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><p>用来注释某些不需要的内容，<strong>只支持单行注释</strong>。</p>\n<p><strong>语法</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 注释内容</span></div></pre></td></tr></table></figure>\n<h3 id=\"简写语法\"><a href=\"#简写语法\" class=\"headerlink\" title=\"简写语法\"></a>简写语法</h3><p>简写语法，可以用来定义一些基本的规则，不需要写<code>location</code>和其他的命令。</p>\n<p><strong>语法</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">域名 ==&gt; 域名|路径</div></pre></td></tr></table></figure>\n<p><strong>例子</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">json.example.com =&gt; 127.0.0.1:8800;</div></pre></td></tr></table></figure>\n<h2 id=\"更多例子\"><a href=\"#更多例子\" class=\"headerlink\" title=\"更多例子\"></a>更多例子</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$local</span> 127.0.0.1:8800</div><div class=\"line\"><span class=\"comment\"># simple rewrite rule</span></div><div class=\"line\">api.hiproxy.org =&gt; local.hiproxy.org;</div><div class=\"line\">api.hiproxy.org =&gt; 127.0.0.1:8800;</div><div class=\"line\">api.hiproxy.org/mock =&gt; <span class=\"variable\">$local</span>/mock;</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># rewrite folder</span></div><div class=\"line\">api.hiproxy.org/user/ =&gt; &#123;</div><div class=\"line\">    proxy_pass local.hiproxy.org/user/;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># proxy request config</span></div><div class=\"line\">    proxy_set_header Host api.hiproxy.org;</div><div class=\"line\">    proxy_set_header other value;</div><div class=\"line\">    proxy_hide_header other;</div><div class=\"line\"></div><div class=\"line\">    proxy_set_cookie userid 20150910121359;</div><div class=\"line\">    proxy_hide_cookie sessionid;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># response config</span></div><div class=\"line\">    set_cookie sessionID E3BF86A90ACDD6C5FF49ACB09;</div><div class=\"line\">    set_header proxy hiproxy;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># allow CORS</span></div><div class=\"line\">    set_header Access-Control-Allow-Origin *;</div><div class=\"line\"></div><div class=\"line\">    hide_header proxy;</div><div class=\"line\">    hide_cookie sessionID;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># regexp support</span></div><div class=\"line\">~ /(demo|example)/([^\\/]*\\.(html|htm))$ =&gt; &#123;</div><div class=\"line\">   proxy_pass http://127.0.0.1:9999/<span class=\"variable\">$1</span>/src/<span class=\"variable\">$2</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$domain</span> api.hiproxy.org;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$local</span> 127.0.0.1:8800;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$api</span> api;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$test</span> <span class=\"variable\">$api</span>.example.com;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$id</span> 1234567;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># standard rewrite url</span></div><div class=\"line\"><span class=\"variable\">$domain</span> =&gt; &#123;</div><div class=\"line\">    proxy_pass http://<span class=\"variable\">$local</span>/api/mock/;</div><div class=\"line\">    <span class=\"built_in\">set</span> <span class=\"variable\">$id</span> 1234;</div><div class=\"line\">    <span class=\"built_in\">set</span> <span class=\"variable\">$mock_user</span> user_<span class=\"variable\">$id</span>;</div><div class=\"line\">    set_header Host <span class=\"variable\">$domain</span>;</div><div class=\"line\">    set_header UserID <span class=\"variable\">$mock_user</span>;</div><div class=\"line\">    set_header Access-Control-Allow-Origin *;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">blog.hiproxy.org =&gt; &#123;</div><div class=\"line\">    set_header Access-Control-Allow-Origin *;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">set</span> <span class=\"variable\">$node_server</span> 127.0.0.1:3008;</div><div class=\"line\">    <span class=\"built_in\">set</span> <span class=\"variable\">$order</span> order;</div><div class=\"line\">    <span class=\"built_in\">set</span> <span class=\"variable\">$cookie1</span> login=<span class=\"literal\">true</span>;expires=20160909;</div><div class=\"line\"></div><div class=\"line\">    location /<span class=\"variable\">$api</span>/<span class=\"variable\">$order</span>/detail &#123;</div><div class=\"line\">        proxy_pass http://<span class=\"variable\">$node_server</span>/user/?domain=<span class=\"variable\">$domain</span>;</div><div class=\"line\">        set_header Set-Cookie userID 200908204140;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location ~ /(usercenter|userinfo)/ &#123;</div><div class=\"line\">        <span class=\"built_in\">set</span> <span class=\"variable\">$cookie</span> login=<span class=\"literal\">true</span>;expires=20180808;</div><div class=\"line\">        <span class=\"built_in\">set</span> <span class=\"variable\">$id</span> 56789;</div><div class=\"line\"></div><div class=\"line\">        proxy_pass http://127.0.0.1:3008/info/;</div><div class=\"line\"></div><div class=\"line\">        set_cookie userID 200908204140;</div><div class=\"line\">        set_cookie userName user_<span class=\"variable\">$id</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location ~ /<span class=\"built_in\">local</span>\\/(.*)(\\?(.*))? &#123;</div><div class=\"line\">        send_file ./mock/<span class=\"variable\">$1</span>.json;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location /dev &#123;</div><div class=\"line\">        <span class=\"comment\">#alias /site/path/;</span></div><div class=\"line\">        <span class=\"built_in\">alias</span> ./src/view/;</div><div class=\"line\">        root app.html</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location /multiple &#123;</div><div class=\"line\">        <span class=\"built_in\">echo</span> &lt;h1&gt;hello_echo&lt;/h1&gt;;</div><div class=\"line\">        <span class=\"built_in\">echo</span> &lt;p&gt;<span class=\"built_in\">test</span> <span class=\"built_in\">echo</span> directive&lt;/p&gt;;</div><div class=\"line\">        <span class=\"built_in\">echo</span> &lt;p&gt;finish&lt;/p&gt;;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><strong>rewrite</strong> 参考了<a href=\"http://nginx.org/en/docs/\" target=\"_blank\" rel=\"external\">Nginx</a>配置语法，通过简单的配置，就可以帮助前端开发在本地调试的基础上，方便的利用其他环境或者线上的API接口进行测试。</p>\n<p>当服务启动后，将自动扫描并监听各项目根目录下的<code>rewrite</code>文件，生成及实时更新转发规则，无需重启服务。</p>\n<p><strong>注</strong>：hiproxy同时支持项目<code>rewrite</code>及<a href=\"../configuration/hosts.html\">hosts</a>文件。如果仅需要简单的<code>域名+端口</code>转发，请参考<a href=\"../configuration/hosts.html\">hosts</a>。</p>\n<h2 id=\"基本语法\"><a href=\"#基本语法\" class=\"headerlink\" title=\"基本语法\"></a>基本语法</h2><h3 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h3><p><strong>语法</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$变量名</div></pre></td></tr></table></figure></p>\n<p><strong>例子</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 定义变量</span></div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$var_name</span> value</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 使用变量</span></div><div class=\"line\"><span class=\"variable\">$var_name</span></div></pre></td></tr></table></figure>\n<h3 id=\"domain\"><a href=\"#domain\" class=\"headerlink\" title=\"domain\"></a>domain</h3><p><code>domain</code> 用来指定一个域名，这个域名的所有配置都在 <code>domain</code> 块中。</p>\n<p><strong>语法</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[域名|变量] =&gt; &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong>例子</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$domain</span> some.example.com</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 直接使用域名</span></div><div class=\"line\">some.example.com =&gt; &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 或者使用变量</span></div><div class=\"line\"><span class=\"variable\">$domain</span> =&gt; &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"location\"><a href=\"#location\" class=\"headerlink\" title=\"location\"></a>location</h3><p>location 用来指定域名中的一个具体的路径，这个路径的所有配置都在 location 块中。</p>\n<p><strong>注意</strong>：location必须位于domain块中。</p>\n<p><strong>语法</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">location [目录|文件|正则表达式|变量] &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong>例子</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 目录</span></div><div class=\"line\">location /some/path/ &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 具体文件</span></div><div class=\"line\">location /some/file.htm &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 正则表达式</span></div><div class=\"line\">location ~ ^/some/(path|path1)/.* &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 变量</span></div><div class=\"line\">location <span class=\"variable\">$some</span>/<span class=\"variable\">$path</span> &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h3><p>命令用于设置一些变量，或者对<code>request</code>\\/<code>response</code>做一些操作。</p>\n<p><strong>语法</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">命令 参数1 参数2 ... 参数N</div></pre></td></tr></table></figure>\n<p><strong>例子</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 设置代理时的头部</span></div><div class=\"line\">proxy_set_header Host some.example.com;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 设置response的cookie</span></div><div class=\"line\">set_cookie UserID some_user_id;</div></pre></td></tr></table></figure>\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><p>用来注释某些不需要的内容，<strong>只支持单行注释</strong>。</p>\n<p><strong>语法</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 注释内容</span></div></pre></td></tr></table></figure>\n<h3 id=\"简写语法\"><a href=\"#简写语法\" class=\"headerlink\" title=\"简写语法\"></a>简写语法</h3><p>简写语法，可以用来定义一些基本的规则，不需要写<code>location</code>和其他的命令。</p>\n<p><strong>语法</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">域名 ==&gt; 域名|路径</div></pre></td></tr></table></figure>\n<p><strong>例子</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">json.example.com =&gt; 127.0.0.1:8800;</div></pre></td></tr></table></figure>\n<h2 id=\"更多例子\"><a href=\"#更多例子\" class=\"headerlink\" title=\"更多例子\"></a>更多例子</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$local</span> 127.0.0.1:8800</div><div class=\"line\"><span class=\"comment\"># simple rewrite rule</span></div><div class=\"line\">api.hiproxy.org =&gt; local.hiproxy.org;</div><div class=\"line\">api.hiproxy.org =&gt; 127.0.0.1:8800;</div><div class=\"line\">api.hiproxy.org/mock =&gt; <span class=\"variable\">$local</span>/mock;</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># rewrite folder</span></div><div class=\"line\">api.hiproxy.org/user/ =&gt; &#123;</div><div class=\"line\">    proxy_pass local.hiproxy.org/user/;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># proxy request config</span></div><div class=\"line\">    proxy_set_header Host api.hiproxy.org;</div><div class=\"line\">    proxy_set_header other value;</div><div class=\"line\">    proxy_hide_header other;</div><div class=\"line\"></div><div class=\"line\">    proxy_set_cookie userid 20150910121359;</div><div class=\"line\">    proxy_hide_cookie sessionid;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># response config</span></div><div class=\"line\">    set_cookie sessionID E3BF86A90ACDD6C5FF49ACB09;</div><div class=\"line\">    set_header proxy hiproxy;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># allow CORS</span></div><div class=\"line\">    set_header Access-Control-Allow-Origin *;</div><div class=\"line\"></div><div class=\"line\">    hide_header proxy;</div><div class=\"line\">    hide_cookie sessionID;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># regexp support</span></div><div class=\"line\">~ /(demo|example)/([^\\/]*\\.(html|htm))$ =&gt; &#123;</div><div class=\"line\">   proxy_pass http://127.0.0.1:9999/<span class=\"variable\">$1</span>/src/<span class=\"variable\">$2</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$domain</span> api.hiproxy.org;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$local</span> 127.0.0.1:8800;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$api</span> api;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$test</span> <span class=\"variable\">$api</span>.example.com;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$id</span> 1234567;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># standard rewrite url</span></div><div class=\"line\"><span class=\"variable\">$domain</span> =&gt; &#123;</div><div class=\"line\">    proxy_pass http://<span class=\"variable\">$local</span>/api/mock/;</div><div class=\"line\">    <span class=\"built_in\">set</span> <span class=\"variable\">$id</span> 1234;</div><div class=\"line\">    <span class=\"built_in\">set</span> <span class=\"variable\">$mock_user</span> user_<span class=\"variable\">$id</span>;</div><div class=\"line\">    set_header Host <span class=\"variable\">$domain</span>;</div><div class=\"line\">    set_header UserID <span class=\"variable\">$mock_user</span>;</div><div class=\"line\">    set_header Access-Control-Allow-Origin *;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">blog.hiproxy.org =&gt; &#123;</div><div class=\"line\">    set_header Access-Control-Allow-Origin *;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">set</span> <span class=\"variable\">$node_server</span> 127.0.0.1:3008;</div><div class=\"line\">    <span class=\"built_in\">set</span> <span class=\"variable\">$order</span> order;</div><div class=\"line\">    <span class=\"built_in\">set</span> <span class=\"variable\">$cookie1</span> login=<span class=\"literal\">true</span>;expires=20160909;</div><div class=\"line\"></div><div class=\"line\">    location /<span class=\"variable\">$api</span>/<span class=\"variable\">$order</span>/detail &#123;</div><div class=\"line\">        proxy_pass http://<span class=\"variable\">$node_server</span>/user/?domain=<span class=\"variable\">$domain</span>;</div><div class=\"line\">        set_header Set-Cookie userID 200908204140;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location ~ /(usercenter|userinfo)/ &#123;</div><div class=\"line\">        <span class=\"built_in\">set</span> <span class=\"variable\">$cookie</span> login=<span class=\"literal\">true</span>;expires=20180808;</div><div class=\"line\">        <span class=\"built_in\">set</span> <span class=\"variable\">$id</span> 56789;</div><div class=\"line\"></div><div class=\"line\">        proxy_pass http://127.0.0.1:3008/info/;</div><div class=\"line\"></div><div class=\"line\">        set_cookie userID 200908204140;</div><div class=\"line\">        set_cookie userName user_<span class=\"variable\">$id</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location ~ /<span class=\"built_in\">local</span>\\/(.*)(\\?(.*))? &#123;</div><div class=\"line\">        send_file ./mock/<span class=\"variable\">$1</span>.json;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location /dev &#123;</div><div class=\"line\">        <span class=\"comment\">#alias /site/path/;</span></div><div class=\"line\">        <span class=\"built_in\">alias</span> ./src/view/;</div><div class=\"line\">        root app.html</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location /multiple &#123;</div><div class=\"line\">        <span class=\"built_in\">echo</span> &lt;h1&gt;hello_echo&lt;/h1&gt;;</div><div class=\"line\">        <span class=\"built_in\">echo</span> &lt;p&gt;<span class=\"built_in\">test</span> <span class=\"built_in\">echo</span> directive&lt;/p&gt;;</div><div class=\"line\">        <span class=\"built_in\">echo</span> &lt;p&gt;finish&lt;/p&gt;;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"title":"Rewrite built in variables","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\nhiproxy的rewrite规则配置文件中，我们可以自己定义全局变量（在全局作用域中使用`set $var value`），也可以在其他作用域中定义变量；\n\nhiproxy内置了一些变量，这些内置变量可以在相应的作用域中直接使用，不需要去定义并赋值，而且这些内置变量也不能被用户重新定义覆盖。\n\n## 全局变量\n\n这些全局变量，在配置文件的**任何地方都可以使用**。\n\n> 提示：hiproxy暂时没有内置的全局变量。将来会添加！\n\n## location块级变量\n\n这些变量，只能在`location`块中使用，这些变量主要是存储与请求相关的一些信息，比如请求的参数（`$query_string`）、Cookie（`$cookie_name`）和host（`$host`)等。现在支持的所有内置变量：\n\n### $host\n当前请求的URL对应的`host`或者请求头部的`Host`字段。\n\n### $hostname\n当前请求的URL对应的`hostname`或者请求头部的`Host`字段对应的`hostname`。\n\n### $server_port\n请求的服务端口号，默认`80`。\n\n### $search\n请求的参数字符串（包括`?`），比如`?from=app&v=19482848253`。\n\n### $query_string\n请求的参数字符串（**不包括`?`**），比如`from=app&v=19482848253`。\n\n### $scheme\n请求的协议，`http`或者`https`。\n\n### $request_uri\n请求的完整地址，比如`http://hiproxy.org:8081/docs/index.html?from=google&v=_1847295727524#get-started`。\n\n### $path\n请求的`path`（包括参数），比如`/docs/index.html?from=google&v=_1847295727524#get-started`。\n\n### $path_name\n请求的`path_name`（不包括参数），比如`/docs/index.html`。\n\n### $base_name\n请求path的最后一部分，比如path为`/docs/index.html`，则$base_name为`index.html`。\n\n### $dir_name\n请求path的目录名称，比如path为`/docs/index.html`，则$dir_name为`/docs/`。\n\n### $hash\n请求url中的`hash`(包括`#`)，比如'#get-started'。\n\n### $hash_value\n请求url中的`hash`值(不包括`#`)，比如'get-started'。\n\n### $uri\n同`$request_uri`。\n\n### $cookie_*name*\n`cookie`的值，`name`表示字段名称，这个名称中的大写字母都改成了小写，`-`替换成了`_`。比如`$cookie_userId`表示`cookie`中`useId`的值。\n\n### $http_*name*\n请求头（request）中的字段值，`name`表示字段名称，这个名称中的大写字母都改成了小写，`-`替换成了`_`。比如请求头信息中包含`User-Agent: user agent`，可以使用变量`$http_user_agent`来获取这个值。\n\n### $arg_*name*\n请求参数的值，`name`表示字段名称，这个名称中的大写字母都改成了小写，`-`替换成了`_`。比如请求参数为`?from=google&v=_1847295727524`，可以通过`$arg_from`来获取`from`的值。\n\n","source":"rewrite/built_in_variable.md","raw":"title: Rewrite built in variables\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\nhiproxy的rewrite规则配置文件中，我们可以自己定义全局变量（在全局作用域中使用`set $var value`），也可以在其他作用域中定义变量；\n\nhiproxy内置了一些变量，这些内置变量可以在相应的作用域中直接使用，不需要去定义并赋值，而且这些内置变量也不能被用户重新定义覆盖。\n\n## 全局变量\n\n这些全局变量，在配置文件的**任何地方都可以使用**。\n\n> 提示：hiproxy暂时没有内置的全局变量。将来会添加！\n\n## location块级变量\n\n这些变量，只能在`location`块中使用，这些变量主要是存储与请求相关的一些信息，比如请求的参数（`$query_string`）、Cookie（`$cookie_name`）和host（`$host`)等。现在支持的所有内置变量：\n\n### $host\n当前请求的URL对应的`host`或者请求头部的`Host`字段。\n\n### $hostname\n当前请求的URL对应的`hostname`或者请求头部的`Host`字段对应的`hostname`。\n\n### $server_port\n请求的服务端口号，默认`80`。\n\n### $search\n请求的参数字符串（包括`?`），比如`?from=app&v=19482848253`。\n\n### $query_string\n请求的参数字符串（**不包括`?`**），比如`from=app&v=19482848253`。\n\n### $scheme\n请求的协议，`http`或者`https`。\n\n### $request_uri\n请求的完整地址，比如`http://hiproxy.org:8081/docs/index.html?from=google&v=_1847295727524#get-started`。\n\n### $path\n请求的`path`（包括参数），比如`/docs/index.html?from=google&v=_1847295727524#get-started`。\n\n### $path_name\n请求的`path_name`（不包括参数），比如`/docs/index.html`。\n\n### $base_name\n请求path的最后一部分，比如path为`/docs/index.html`，则$base_name为`index.html`。\n\n### $dir_name\n请求path的目录名称，比如path为`/docs/index.html`，则$dir_name为`/docs/`。\n\n### $hash\n请求url中的`hash`(包括`#`)，比如'#get-started'。\n\n### $hash_value\n请求url中的`hash`值(不包括`#`)，比如'get-started'。\n\n### $uri\n同`$request_uri`。\n\n### $cookie_*name*\n`cookie`的值，`name`表示字段名称，这个名称中的大写字母都改成了小写，`-`替换成了`_`。比如`$cookie_userId`表示`cookie`中`useId`的值。\n\n### $http_*name*\n请求头（request）中的字段值，`name`表示字段名称，这个名称中的大写字母都改成了小写，`-`替换成了`_`。比如请求头信息中包含`User-Agent: user agent`，可以使用变量`$http_user_agent`来获取这个值。\n\n### $arg_*name*\n请求参数的值，`name`表示字段名称，这个名称中的大写字母都改成了小写，`-`替换成了`_`。比如请求参数为`?from=google&v=_1847295727524`，可以通过`$arg_from`来获取`from`的值。\n\n","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"rewrite/built_in_variable.html","comments":1,"layout":"page","_id":"cj7nia0gv000mhy0fkk2j3l8v","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<p>hiproxy的rewrite规则配置文件中，我们可以自己定义全局变量（在全局作用域中使用<code>set $var value</code>），也可以在其他作用域中定义变量；</p>\n<p>hiproxy内置了一些变量，这些内置变量可以在相应的作用域中直接使用，不需要去定义并赋值，而且这些内置变量也不能被用户重新定义覆盖。</p>\n<h2 id=\"全局变量\"><a href=\"#全局变量\" class=\"headerlink\" title=\"全局变量\"></a>全局变量</h2><p>这些全局变量，在配置文件的<strong>任何地方都可以使用</strong>。</p>\n<blockquote>\n<p>提示：hiproxy暂时没有内置的全局变量。将来会添加！</p>\n</blockquote>\n<h2 id=\"location块级变量\"><a href=\"#location块级变量\" class=\"headerlink\" title=\"location块级变量\"></a>location块级变量</h2><p>这些变量，只能在<code>location</code>块中使用，这些变量主要是存储与请求相关的一些信息，比如请求的参数（<code>$query_string</code>）、Cookie（<code>$cookie_name</code>）和host（<code>$host</code>)等。现在支持的所有内置变量：</p>\n<h3 id=\"host\"><a href=\"#host\" class=\"headerlink\" title=\"$host\"></a>$host</h3><p>当前请求的URL对应的<code>host</code>或者请求头部的<code>Host</code>字段。</p>\n<h3 id=\"hostname\"><a href=\"#hostname\" class=\"headerlink\" title=\"$hostname\"></a>$hostname</h3><p>当前请求的URL对应的<code>hostname</code>或者请求头部的<code>Host</code>字段对应的<code>hostname</code>。</p>\n<h3 id=\"server-port\"><a href=\"#server-port\" class=\"headerlink\" title=\"$server_port\"></a>$server_port</h3><p>请求的服务端口号，默认<code>80</code>。</p>\n<h3 id=\"search\"><a href=\"#search\" class=\"headerlink\" title=\"$search\"></a>$search</h3><p>请求的参数字符串（包括<code>?</code>），比如<code>?from=app&amp;v=19482848253</code>。</p>\n<h3 id=\"query-string\"><a href=\"#query-string\" class=\"headerlink\" title=\"$query_string\"></a>$query_string</h3><p>请求的参数字符串（<strong>不包括<code>?</code></strong>），比如<code>from=app&amp;v=19482848253</code>。</p>\n<h3 id=\"scheme\"><a href=\"#scheme\" class=\"headerlink\" title=\"$scheme\"></a>$scheme</h3><p>请求的协议，<code>http</code>或者<code>https</code>。</p>\n<h3 id=\"request-uri\"><a href=\"#request-uri\" class=\"headerlink\" title=\"$request_uri\"></a>$request_uri</h3><p>请求的完整地址，比如<code>http://hiproxy.org:8081/docs/index.html?from=google&amp;v=_1847295727524#get-started</code>。</p>\n<h3 id=\"path\"><a href=\"#path\" class=\"headerlink\" title=\"$path\"></a>$path</h3><p>请求的<code>path</code>（包括参数），比如<code>/docs/index.html?from=google&amp;v=_1847295727524#get-started</code>。</p>\n<h3 id=\"path-name\"><a href=\"#path-name\" class=\"headerlink\" title=\"$path_name\"></a>$path_name</h3><p>请求的<code>path_name</code>（不包括参数），比如<code>/docs/index.html</code>。</p>\n<h3 id=\"base-name\"><a href=\"#base-name\" class=\"headerlink\" title=\"$base_name\"></a>$base_name</h3><p>请求path的最后一部分，比如path为<code>/docs/index.html</code>，则$base_name为<code>index.html</code>。</p>\n<h3 id=\"dir-name\"><a href=\"#dir-name\" class=\"headerlink\" title=\"$dir_name\"></a>$dir_name</h3><p>请求path的目录名称，比如path为<code>/docs/index.html</code>，则$dir_name为<code>/docs/</code>。</p>\n<h3 id=\"hash\"><a href=\"#hash\" class=\"headerlink\" title=\"$hash\"></a>$hash</h3><p>请求url中的<code>hash</code>(包括<code>#</code>)，比如’#get-started’。</p>\n<h3 id=\"hash-value\"><a href=\"#hash-value\" class=\"headerlink\" title=\"$hash_value\"></a>$hash_value</h3><p>请求url中的<code>hash</code>值(不包括<code>#</code>)，比如’get-started’。</p>\n<h3 id=\"uri\"><a href=\"#uri\" class=\"headerlink\" title=\"$uri\"></a>$uri</h3><p>同<code>$request_uri</code>。</p>\n<h3 id=\"cookie-name\"><a href=\"#cookie-name\" class=\"headerlink\" title=\"$cookie_name\"></a>$cookie_<em>name</em></h3><p><code>cookie</code>的值，<code>name</code>表示字段名称，这个名称中的大写字母都改成了小写，<code>-</code>替换成了<code>_</code>。比如<code>$cookie_userId</code>表示<code>cookie</code>中<code>useId</code>的值。</p>\n<h3 id=\"http-name\"><a href=\"#http-name\" class=\"headerlink\" title=\"$http_name\"></a>$http_<em>name</em></h3><p>请求头（request）中的字段值，<code>name</code>表示字段名称，这个名称中的大写字母都改成了小写，<code>-</code>替换成了<code>_</code>。比如请求头信息中包含<code>User-Agent: user agent</code>，可以使用变量<code>$http_user_agent</code>来获取这个值。</p>\n<h3 id=\"arg-name\"><a href=\"#arg-name\" class=\"headerlink\" title=\"$arg_name\"></a>$arg_<em>name</em></h3><p>请求参数的值，<code>name</code>表示字段名称，这个名称中的大写字母都改成了小写，<code>-</code>替换成了<code>_</code>。比如请求参数为<code>?from=google&amp;v=_1847295727524</code>，可以通过<code>$arg_from</code>来获取<code>from</code>的值。</p>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<p>hiproxy的rewrite规则配置文件中，我们可以自己定义全局变量（在全局作用域中使用<code>set $var value</code>），也可以在其他作用域中定义变量；</p>\n<p>hiproxy内置了一些变量，这些内置变量可以在相应的作用域中直接使用，不需要去定义并赋值，而且这些内置变量也不能被用户重新定义覆盖。</p>\n<h2 id=\"全局变量\"><a href=\"#全局变量\" class=\"headerlink\" title=\"全局变量\"></a>全局变量</h2><p>这些全局变量，在配置文件的<strong>任何地方都可以使用</strong>。</p>\n<blockquote>\n<p>提示：hiproxy暂时没有内置的全局变量。将来会添加！</p>\n</blockquote>\n<h2 id=\"location块级变量\"><a href=\"#location块级变量\" class=\"headerlink\" title=\"location块级变量\"></a>location块级变量</h2><p>这些变量，只能在<code>location</code>块中使用，这些变量主要是存储与请求相关的一些信息，比如请求的参数（<code>$query_string</code>）、Cookie（<code>$cookie_name</code>）和host（<code>$host</code>)等。现在支持的所有内置变量：</p>\n<h3 id=\"host\"><a href=\"#host\" class=\"headerlink\" title=\"$host\"></a>$host</h3><p>当前请求的URL对应的<code>host</code>或者请求头部的<code>Host</code>字段。</p>\n<h3 id=\"hostname\"><a href=\"#hostname\" class=\"headerlink\" title=\"$hostname\"></a>$hostname</h3><p>当前请求的URL对应的<code>hostname</code>或者请求头部的<code>Host</code>字段对应的<code>hostname</code>。</p>\n<h3 id=\"server-port\"><a href=\"#server-port\" class=\"headerlink\" title=\"$server_port\"></a>$server_port</h3><p>请求的服务端口号，默认<code>80</code>。</p>\n<h3 id=\"search\"><a href=\"#search\" class=\"headerlink\" title=\"$search\"></a>$search</h3><p>请求的参数字符串（包括<code>?</code>），比如<code>?from=app&amp;v=19482848253</code>。</p>\n<h3 id=\"query-string\"><a href=\"#query-string\" class=\"headerlink\" title=\"$query_string\"></a>$query_string</h3><p>请求的参数字符串（<strong>不包括<code>?</code></strong>），比如<code>from=app&amp;v=19482848253</code>。</p>\n<h3 id=\"scheme\"><a href=\"#scheme\" class=\"headerlink\" title=\"$scheme\"></a>$scheme</h3><p>请求的协议，<code>http</code>或者<code>https</code>。</p>\n<h3 id=\"request-uri\"><a href=\"#request-uri\" class=\"headerlink\" title=\"$request_uri\"></a>$request_uri</h3><p>请求的完整地址，比如<code>http://hiproxy.org:8081/docs/index.html?from=google&amp;v=_1847295727524#get-started</code>。</p>\n<h3 id=\"path\"><a href=\"#path\" class=\"headerlink\" title=\"$path\"></a>$path</h3><p>请求的<code>path</code>（包括参数），比如<code>/docs/index.html?from=google&amp;v=_1847295727524#get-started</code>。</p>\n<h3 id=\"path-name\"><a href=\"#path-name\" class=\"headerlink\" title=\"$path_name\"></a>$path_name</h3><p>请求的<code>path_name</code>（不包括参数），比如<code>/docs/index.html</code>。</p>\n<h3 id=\"base-name\"><a href=\"#base-name\" class=\"headerlink\" title=\"$base_name\"></a>$base_name</h3><p>请求path的最后一部分，比如path为<code>/docs/index.html</code>，则$base_name为<code>index.html</code>。</p>\n<h3 id=\"dir-name\"><a href=\"#dir-name\" class=\"headerlink\" title=\"$dir_name\"></a>$dir_name</h3><p>请求path的目录名称，比如path为<code>/docs/index.html</code>，则$dir_name为<code>/docs/</code>。</p>\n<h3 id=\"hash\"><a href=\"#hash\" class=\"headerlink\" title=\"$hash\"></a>$hash</h3><p>请求url中的<code>hash</code>(包括<code>#</code>)，比如’#get-started’。</p>\n<h3 id=\"hash-value\"><a href=\"#hash-value\" class=\"headerlink\" title=\"$hash_value\"></a>$hash_value</h3><p>请求url中的<code>hash</code>值(不包括<code>#</code>)，比如’get-started’。</p>\n<h3 id=\"uri\"><a href=\"#uri\" class=\"headerlink\" title=\"$uri\"></a>$uri</h3><p>同<code>$request_uri</code>。</p>\n<h3 id=\"cookie-name\"><a href=\"#cookie-name\" class=\"headerlink\" title=\"$cookie_name\"></a>$cookie_<em>name</em></h3><p><code>cookie</code>的值，<code>name</code>表示字段名称，这个名称中的大写字母都改成了小写，<code>-</code>替换成了<code>_</code>。比如<code>$cookie_userId</code>表示<code>cookie</code>中<code>useId</code>的值。</p>\n<h3 id=\"http-name\"><a href=\"#http-name\" class=\"headerlink\" title=\"$http_name\"></a>$http_<em>name</em></h3><p>请求头（request）中的字段值，<code>name</code>表示字段名称，这个名称中的大写字母都改成了小写，<code>-</code>替换成了<code>_</code>。比如请求头信息中包含<code>User-Agent: user agent</code>，可以使用变量<code>$http_user_agent</code>来获取这个值。</p>\n<h3 id=\"arg-name\"><a href=\"#arg-name\" class=\"headerlink\" title=\"$arg_name\"></a>$arg_<em>name</em></h3><p>请求参数的值，<code>name</code>表示字段名称，这个名称中的大写字母都改成了小写，<code>-</code>替换成了<code>_</code>。比如请求参数为<code>?from=google&amp;v=_1847295727524</code>，可以通过<code>$arg_from</code>来获取<code>from</code>的值。</p>\n"},{"title":"Rewrite Context","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 代码块\n\nhiproxy的代码块，分为三类：\n\n* **全局块**：所有的配置文件中不在其他块的代码，都在全局块中；\n* **domain块**：位于全局块中；\n* **location块**：位于domain块中；\n\n## 作用域\n\nhiproxy 配置文件中涉及到的作用域有5种：\n\n* **全局作用域**：*全局块*对应的作用域。这里的变量可以在任何地方访问到；\n* **domain作用域**：*domain块*对应的作用域。\n* **location作用域**：*location块*对应的作用域。\n* **request作用域**：隐式作用域，不对应具体的代码块，这些作用域中的指令，可以分布在任何代码块中。\n* **response作用域**：隐式作用域，不对应具体的代码块，这些作用域中的指令，可以分布在任何代码块中。\n\n## 代码块层级关系\n\n```\nglobal\n    |- domain\n        |- location\n        |- location\n        |- ...\n    |- domain\n        |- location\n        |- location\n        |- ...\n```\n\n## 变量查找\n\n当前作用域中查找变量的规则为：\n\n1. 如果当前作用域有这个变量，*返回* 这个变量的值。\n2. 查找上一级作用域，如果上一级作用域中有这个变量，*返回* 这个变量的值。\n3. 否则，如果上一级作用域是全局作用域，*返回* 变量名称（包括`$`符号\\)。\n4. 重复步骤*[2-3]*。\n\n## 指令执行\n\n代码块中的指令在对应的时机（request／response）会自动执行，此外，还会执行上一级代码块中的指令，比如：\n\n```bash\nwww1.test.com => {\n    # 1    \n    proxy_set_header Host www.test.com;\n\n    location / {\n        # 2\n        proxy_pass http://52.88.88.88/;\n    }\n\n    location /index.html {\n        # 3\n        proxy_pass http://127.0.0.1:8800/girl/view/index.html;\n    }\n\n    location ~ /\\/(native|gallery|picture|font)\\/(.*)/ {\n        # 4\n        proxy_pass http://88.88.88.88/$1/$2;\n    }\n}\n```\n\n上面的配置中，在执行\\#2、\\#3和\\#4处的指令同时，都会执行配置在\\#1处的指令，也就是说: \n\n`/`、`/index.html`和`/\\/(native|gallery|picture|font)\\/(.*)/`对应的请求，都会加上请求头部`Host`，值为`www.test.com`\n\n","source":"rewrite/scope.md","raw":"title: Rewrite Context\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 代码块\n\nhiproxy的代码块，分为三类：\n\n* **全局块**：所有的配置文件中不在其他块的代码，都在全局块中；\n* **domain块**：位于全局块中；\n* **location块**：位于domain块中；\n\n## 作用域\n\nhiproxy 配置文件中涉及到的作用域有5种：\n\n* **全局作用域**：*全局块*对应的作用域。这里的变量可以在任何地方访问到；\n* **domain作用域**：*domain块*对应的作用域。\n* **location作用域**：*location块*对应的作用域。\n* **request作用域**：隐式作用域，不对应具体的代码块，这些作用域中的指令，可以分布在任何代码块中。\n* **response作用域**：隐式作用域，不对应具体的代码块，这些作用域中的指令，可以分布在任何代码块中。\n\n## 代码块层级关系\n\n```\nglobal\n    |- domain\n        |- location\n        |- location\n        |- ...\n    |- domain\n        |- location\n        |- location\n        |- ...\n```\n\n## 变量查找\n\n当前作用域中查找变量的规则为：\n\n1. 如果当前作用域有这个变量，*返回* 这个变量的值。\n2. 查找上一级作用域，如果上一级作用域中有这个变量，*返回* 这个变量的值。\n3. 否则，如果上一级作用域是全局作用域，*返回* 变量名称（包括`$`符号\\)。\n4. 重复步骤*[2-3]*。\n\n## 指令执行\n\n代码块中的指令在对应的时机（request／response）会自动执行，此外，还会执行上一级代码块中的指令，比如：\n\n```bash\nwww1.test.com => {\n    # 1    \n    proxy_set_header Host www.test.com;\n\n    location / {\n        # 2\n        proxy_pass http://52.88.88.88/;\n    }\n\n    location /index.html {\n        # 3\n        proxy_pass http://127.0.0.1:8800/girl/view/index.html;\n    }\n\n    location ~ /\\/(native|gallery|picture|font)\\/(.*)/ {\n        # 4\n        proxy_pass http://88.88.88.88/$1/$2;\n    }\n}\n```\n\n上面的配置中，在执行\\#2、\\#3和\\#4处的指令同时，都会执行配置在\\#1处的指令，也就是说: \n\n`/`、`/index.html`和`/\\/(native|gallery|picture|font)\\/(.*)/`对应的请求，都会加上请求头部`Host`，值为`www.test.com`\n\n","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"rewrite/scope.html","comments":1,"layout":"page","_id":"cj7nia0gw000nhy0fzmbp306m","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h2><p>hiproxy的代码块，分为三类：</p>\n<ul>\n<li><strong>全局块</strong>：所有的配置文件中不在其他块的代码，都在全局块中；</li>\n<li><strong>domain块</strong>：位于全局块中；</li>\n<li><strong>location块</strong>：位于domain块中；</li>\n</ul>\n<h2 id=\"作用域\"><a href=\"#作用域\" class=\"headerlink\" title=\"作用域\"></a>作用域</h2><p>hiproxy 配置文件中涉及到的作用域有5种：</p>\n<ul>\n<li><strong>全局作用域</strong>：<em>全局块</em>对应的作用域。这里的变量可以在任何地方访问到；</li>\n<li><strong>domain作用域</strong>：<em>domain块</em>对应的作用域。</li>\n<li><strong>location作用域</strong>：<em>location块</em>对应的作用域。</li>\n<li><strong>request作用域</strong>：隐式作用域，不对应具体的代码块，这些作用域中的指令，可以分布在任何代码块中。</li>\n<li><strong>response作用域</strong>：隐式作用域，不对应具体的代码块，这些作用域中的指令，可以分布在任何代码块中。</li>\n</ul>\n<h2 id=\"代码块层级关系\"><a href=\"#代码块层级关系\" class=\"headerlink\" title=\"代码块层级关系\"></a>代码块层级关系</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">global</div><div class=\"line\">    |- domain</div><div class=\"line\">        |- location</div><div class=\"line\">        |- location</div><div class=\"line\">        |- ...</div><div class=\"line\">    |- domain</div><div class=\"line\">        |- location</div><div class=\"line\">        |- location</div><div class=\"line\">        |- ...</div></pre></td></tr></table></figure>\n<h2 id=\"变量查找\"><a href=\"#变量查找\" class=\"headerlink\" title=\"变量查找\"></a>变量查找</h2><p>当前作用域中查找变量的规则为：</p>\n<ol>\n<li>如果当前作用域有这个变量，<em>返回</em> 这个变量的值。</li>\n<li>查找上一级作用域，如果上一级作用域中有这个变量，<em>返回</em> 这个变量的值。</li>\n<li>否则，如果上一级作用域是全局作用域，<em>返回</em> 变量名称（包括<code>$</code>符号)。</li>\n<li>重复步骤<em>[2-3]</em>。</li>\n</ol>\n<h2 id=\"指令执行\"><a href=\"#指令执行\" class=\"headerlink\" title=\"指令执行\"></a>指令执行</h2><p>代码块中的指令在对应的时机（request／response）会自动执行，此外，还会执行上一级代码块中的指令，比如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">www1.test.com =&gt; &#123;</div><div class=\"line\">    <span class=\"comment\"># 1    </span></div><div class=\"line\">    proxy_set_header Host www.test.com;</div><div class=\"line\"></div><div class=\"line\">    location / &#123;</div><div class=\"line\">        <span class=\"comment\"># 2</span></div><div class=\"line\">        proxy_pass http://52.88.88.88/;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location /index.html &#123;</div><div class=\"line\">        <span class=\"comment\"># 3</span></div><div class=\"line\">        proxy_pass http://127.0.0.1:8800/girl/view/index.html;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location ~ /\\/(native|gallery|picture|font)\\/(.*)/ &#123;</div><div class=\"line\">        <span class=\"comment\"># 4</span></div><div class=\"line\">        proxy_pass http://88.88.88.88/<span class=\"variable\">$1</span>/<span class=\"variable\">$2</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的配置中，在执行#2、#3和#4处的指令同时，都会执行配置在#1处的指令，也就是说: </p>\n<p><code>/</code>、<code>/index.html</code>和<code>/\\/(native|gallery|picture|font)\\/(.*)/</code>对应的请求，都会加上请求头部<code>Host</code>，值为<code>www.test.com</code></p>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h2><p>hiproxy的代码块，分为三类：</p>\n<ul>\n<li><strong>全局块</strong>：所有的配置文件中不在其他块的代码，都在全局块中；</li>\n<li><strong>domain块</strong>：位于全局块中；</li>\n<li><strong>location块</strong>：位于domain块中；</li>\n</ul>\n<h2 id=\"作用域\"><a href=\"#作用域\" class=\"headerlink\" title=\"作用域\"></a>作用域</h2><p>hiproxy 配置文件中涉及到的作用域有5种：</p>\n<ul>\n<li><strong>全局作用域</strong>：<em>全局块</em>对应的作用域。这里的变量可以在任何地方访问到；</li>\n<li><strong>domain作用域</strong>：<em>domain块</em>对应的作用域。</li>\n<li><strong>location作用域</strong>：<em>location块</em>对应的作用域。</li>\n<li><strong>request作用域</strong>：隐式作用域，不对应具体的代码块，这些作用域中的指令，可以分布在任何代码块中。</li>\n<li><strong>response作用域</strong>：隐式作用域，不对应具体的代码块，这些作用域中的指令，可以分布在任何代码块中。</li>\n</ul>\n<h2 id=\"代码块层级关系\"><a href=\"#代码块层级关系\" class=\"headerlink\" title=\"代码块层级关系\"></a>代码块层级关系</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">global</div><div class=\"line\">    |- domain</div><div class=\"line\">        |- location</div><div class=\"line\">        |- location</div><div class=\"line\">        |- ...</div><div class=\"line\">    |- domain</div><div class=\"line\">        |- location</div><div class=\"line\">        |- location</div><div class=\"line\">        |- ...</div></pre></td></tr></table></figure>\n<h2 id=\"变量查找\"><a href=\"#变量查找\" class=\"headerlink\" title=\"变量查找\"></a>变量查找</h2><p>当前作用域中查找变量的规则为：</p>\n<ol>\n<li>如果当前作用域有这个变量，<em>返回</em> 这个变量的值。</li>\n<li>查找上一级作用域，如果上一级作用域中有这个变量，<em>返回</em> 这个变量的值。</li>\n<li>否则，如果上一级作用域是全局作用域，<em>返回</em> 变量名称（包括<code>$</code>符号)。</li>\n<li>重复步骤<em>[2-3]</em>。</li>\n</ol>\n<h2 id=\"指令执行\"><a href=\"#指令执行\" class=\"headerlink\" title=\"指令执行\"></a>指令执行</h2><p>代码块中的指令在对应的时机（request／response）会自动执行，此外，还会执行上一级代码块中的指令，比如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">www1.test.com =&gt; &#123;</div><div class=\"line\">    <span class=\"comment\"># 1    </span></div><div class=\"line\">    proxy_set_header Host www.test.com;</div><div class=\"line\"></div><div class=\"line\">    location / &#123;</div><div class=\"line\">        <span class=\"comment\"># 2</span></div><div class=\"line\">        proxy_pass http://52.88.88.88/;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location /index.html &#123;</div><div class=\"line\">        <span class=\"comment\"># 3</span></div><div class=\"line\">        proxy_pass http://127.0.0.1:8800/girl/view/index.html;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location ~ /\\/(native|gallery|picture|font)\\/(.*)/ &#123;</div><div class=\"line\">        <span class=\"comment\"># 4</span></div><div class=\"line\">        proxy_pass http://88.88.88.88/<span class=\"variable\">$1</span>/<span class=\"variable\">$2</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的配置中，在执行#2、#3和#4处的指令同时，都会执行配置在#1处的指令，也就是说: </p>\n<p><code>/</code>、<code>/index.html</code>和<code>/\\/(native|gallery|picture|font)\\/(.*)/</code>对应的请求，都会加上请求头部<code>Host</code>，值为<code>www.test.com</code></p>\n"},{"layout":"index","description":"hiproxy是一个基于Node.js开发的轻量级网络代理工具，主要目的是为了解决多个开发者在开发过程中遇到的hosts管理和反向代理的问题。","subtitle":"基于Node.js的轻量可扩展的代理工具","comments":0,"_content":"ul#intro-feature-list\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-bolt\n      h3.intro-feature-title 轻量可扩展\n      p.intro-feature-desc hiproxy是一个轻量级的代理工具，依赖的库比较少，安装快速，开发者可以对hiproxy进行扩展，支持扩展命令、指令和页面。\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-cog\n      h3.intro-feature-title 复用现有开发习惯\n      p.intro-feature-desc 采用hosts和Nginx风格的配置，最大程度复用之前的开发、配置习惯。学习成本低，使用起来更加轻松。\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-lock\n      h3.intro-feature-title HTTPS证书自动生成与管理\n      p.intro-feature-desc hiproxy可以扮演CA角色，生成根证书。并且能自动根据每次请求的域名信息，生成相对应的域名证书。\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-chrome\n      h3.intro-feature-title 跟浏览器高度融合\n      p.intro-feature-desc hiproxy在启动服务的时候，可以贴心地打开一个新的浏览器窗口并自动配置好代理，省去了用户自己设置代理的步骤。\n","source":"zh-cn/index.jade","raw":"layout: index\ndescription: hiproxy是一个基于Node.js开发的轻量级网络代理工具，主要目的是为了解决多个开发者在开发过程中遇到的hosts管理和反向代理的问题。\nsubtitle: 基于Node.js的轻量可扩展的代理工具\ncomments: false\n---\nul#intro-feature-list\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-bolt\n      h3.intro-feature-title 轻量可扩展\n      p.intro-feature-desc hiproxy是一个轻量级的代理工具，依赖的库比较少，安装快速，开发者可以对hiproxy进行扩展，支持扩展命令、指令和页面。\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-cog\n      h3.intro-feature-title 复用现有开发习惯\n      p.intro-feature-desc 采用hosts和Nginx风格的配置，最大程度复用之前的开发、配置习惯。学习成本低，使用起来更加轻松。\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-lock\n      h3.intro-feature-title HTTPS证书自动生成与管理\n      p.intro-feature-desc hiproxy可以扮演CA角色，生成根证书。并且能自动根据每次请求的域名信息，生成相对应的域名证书。\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-chrome\n      h3.intro-feature-title 跟浏览器高度融合\n      p.intro-feature-desc hiproxy在启动服务的时候，可以贴心地打开一个新的浏览器窗口并自动配置好代理，省去了用户自己设置代理的步骤。\n","date":"2017-09-16T04:26:44.000Z","updated":"2017-09-16T04:26:44.000Z","path":"zh-cn/index.html","title":"","_id":"cj7nia0gx000ohy0fph59f2fb","content":"<ul id=\"intro-feature-list\"><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-bolt\"></i></div><h3 class=\"intro-feature-title\">轻量可扩展</h3><p class=\"intro-feature-desc\">hiproxy是一个轻量级的代理工具，依赖的库比较少，安装快速，开发者可以对hiproxy进行扩展，支持扩展命令、指令和页面。</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-cog\"></i></div><h3 class=\"intro-feature-title\">复用现有开发习惯</h3><p class=\"intro-feature-desc\">采用hosts和Nginx风格的配置，最大程度复用之前的开发、配置习惯。学习成本低，使用起来更加轻松。</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-lock\"></i></div><h3 class=\"intro-feature-title\">HTTPS证书自动生成与管理</h3><p class=\"intro-feature-desc\">hiproxy可以扮演CA角色，生成根证书。并且能自动根据每次请求的域名信息，生成相对应的域名证书。</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-chrome\"></i></div><h3 class=\"intro-feature-title\">跟浏览器高度融合</h3><p class=\"intro-feature-desc\">hiproxy在启动服务的时候，可以贴心地打开一个新的浏览器窗口并自动配置好代理，省去了用户自己设置代理的步骤。</p></div></li></ul>","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<ul id=\"intro-feature-list\"><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-bolt\"></i></div><h3 class=\"intro-feature-title\">轻量可扩展</h3><p class=\"intro-feature-desc\">hiproxy是一个轻量级的代理工具，依赖的库比较少，安装快速，开发者可以对hiproxy进行扩展，支持扩展命令、指令和页面。</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-cog\"></i></div><h3 class=\"intro-feature-title\">复用现有开发习惯</h3><p class=\"intro-feature-desc\">采用hosts和Nginx风格的配置，最大程度复用之前的开发、配置习惯。学习成本低，使用起来更加轻松。</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-lock\"></i></div><h3 class=\"intro-feature-title\">HTTPS证书自动生成与管理</h3><p class=\"intro-feature-desc\">hiproxy可以扮演CA角色，生成根证书。并且能自动根据每次请求的域名信息，生成相对应的域名证书。</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-chrome\"></i></div><h3 class=\"intro-feature-title\">跟浏览器高度融合</h3><p class=\"intro-feature-desc\">hiproxy在启动服务的时候，可以贴心地打开一个新的浏览器窗口并自动配置好代理，省去了用户自己设置代理的步骤。</p></div></li></ul>"},{"title":"Events","_content":"\n## ProxyServer ⇐ <code>EventEmitter</code>\n**Kind**: global class  \n**Extends**: <code>EventEmitter</code>  \n\n* [\"start\"](#ProxyServer+event_start)\n* [\"stop\"](#ProxyServer+event_stop)\n* [\"addHostsFile\"](#ProxyServer+event_addHostsFile)\n* [\"addRewriteFile\"](#ProxyServer+event_addRewriteFile)\n* [\"creatPacFile\"](#ProxyServer+event_creatPacFile)\n* [\"httpsRequest\"](#ProxyServer+event_httpsRequest)\n* [\"connect\"](#ProxyServer+event_connect)\n* [\"setResponse\"](#ProxyServer+event_setResponse)\n* [\"request\"](#ProxyServer+event_request)\n* [\"getProxyInfo\"](#ProxyServer+event_getProxyInfo)\n* [\"setRequest\"](#ProxyServer+event_setRequest)\n* [\"setResponse\"](#ProxyServer+event_setResponse)\n* [\"data\"](#ProxyServer+event_data)\n* [\"response\"](#ProxyServer+event_response)\n\n<a name=\"ProxyServer+event_start\"></a>\n\n### \"start\"\nEmitted when the hiproxy server(s) start.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| servers | <code>Array</code> | http/https server |\n| localIP | <code>String</code> | the local ip address |\n\n<a name=\"ProxyServer+event_stop\"></a>\n\n### \"stop\"\nEmitted when the hiproxy server(s) stop.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n<a name=\"ProxyServer+event_addHostsFile\"></a>\n\n### \"addHostsFile\"\nEmitted when add hosts file.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| filePath | <code>Array</code> \\| <code>String</code> | rewrite file path(s) |\n\n<a name=\"ProxyServer+event_addRewriteFile\"></a>\n\n### \"addRewriteFile\"\nEmitted when add rewrite file.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| filePath | <code>Array</code> \\| <code>String</code> | rewrite file path(s) |\n\n<a name=\"ProxyServer+event_creatPacFile\"></a>\n\n### \"creatPacFile\"\nEmitter when the `pac` proxy file is created or updated.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| domains | <code>Object</code> | domain list |\n\n<a name=\"ProxyServer+event_httpsRequest\"></a>\n\n### \"httpsRequest\"\nEmitted each time there is a request to the https server.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| request | <code>http.IncomingMessage</code> | request object |\n| response | <code>http.ServerResponse</code> | response object |\n\n<a name=\"ProxyServer+event_connect\"></a>\n\n### \"connect\"\nEmitted each time the server responds to a request with a `CONNECT` method.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| request | <code>http.IncomingMessage</code> | request object |\n| socket | <code>net.Socket</code> | socket object |\n| head | <code>Buffer</code> | head |\n\n<a name=\"ProxyServer+event_setResponse\"></a>\n\n### \"setResponse\"\nEmitted each time the server set response info (eg: headers).\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| response | <code>http.ServerResponse</code> | request object |\n\n<a name=\"ProxyServer+event_request\"></a>\n\n### \"request\"\nEmitted each time there is a request.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| request | <code>http.IncomingMessage</code> | request object |\n| response | <code>http.ServerResponse</code> | response object |\n\n<a name=\"ProxyServer+event_getProxyInfo\"></a>\n\n### \"getProxyInfo\"\nEmitted each time the hiproxy server get proxy info for current request.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| proxyInfo | <code>Object</code> | proxy info object |\n\n<a name=\"ProxyServer+event_setRequest\"></a>\n\n### \"setRequest\"\nEmitted each time the hiproxy server set request options (eg: headers and host) before request data from remote server\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| request | <code>http.IncomingMessage</code> | request |\n| proxyOptions | <code>Object</code> | the proxy header options |\n\n<a name=\"ProxyServer+event_setResponse\"></a>\n\n### \"setResponse\"\nEmitted each time the server set response info (eg: headers).\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| response | <code>http.ServerResponse</code> | request object |\n\n<a name=\"ProxyServer+event_data\"></a>\n\n### \"data\"\nEmitted whenever the response stream received some chunk of data.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| data | <code>Buffer</code> | response data |\n\n<a name=\"ProxyServer+event_data\"></a>\n\n### \"response\"\nEmitted when a response is end. This event is emitted only once.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| response | <code>http.ServerResponse</code> | response object |","source":"zh-cn/api/events.md","raw":"title: Events\n---\n\n## ProxyServer ⇐ <code>EventEmitter</code>\n**Kind**: global class  \n**Extends**: <code>EventEmitter</code>  \n\n* [\"start\"](#ProxyServer+event_start)\n* [\"stop\"](#ProxyServer+event_stop)\n* [\"addHostsFile\"](#ProxyServer+event_addHostsFile)\n* [\"addRewriteFile\"](#ProxyServer+event_addRewriteFile)\n* [\"creatPacFile\"](#ProxyServer+event_creatPacFile)\n* [\"httpsRequest\"](#ProxyServer+event_httpsRequest)\n* [\"connect\"](#ProxyServer+event_connect)\n* [\"setResponse\"](#ProxyServer+event_setResponse)\n* [\"request\"](#ProxyServer+event_request)\n* [\"getProxyInfo\"](#ProxyServer+event_getProxyInfo)\n* [\"setRequest\"](#ProxyServer+event_setRequest)\n* [\"setResponse\"](#ProxyServer+event_setResponse)\n* [\"data\"](#ProxyServer+event_data)\n* [\"response\"](#ProxyServer+event_response)\n\n<a name=\"ProxyServer+event_start\"></a>\n\n### \"start\"\nEmitted when the hiproxy server(s) start.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| servers | <code>Array</code> | http/https server |\n| localIP | <code>String</code> | the local ip address |\n\n<a name=\"ProxyServer+event_stop\"></a>\n\n### \"stop\"\nEmitted when the hiproxy server(s) stop.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n<a name=\"ProxyServer+event_addHostsFile\"></a>\n\n### \"addHostsFile\"\nEmitted when add hosts file.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| filePath | <code>Array</code> \\| <code>String</code> | rewrite file path(s) |\n\n<a name=\"ProxyServer+event_addRewriteFile\"></a>\n\n### \"addRewriteFile\"\nEmitted when add rewrite file.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| filePath | <code>Array</code> \\| <code>String</code> | rewrite file path(s) |\n\n<a name=\"ProxyServer+event_creatPacFile\"></a>\n\n### \"creatPacFile\"\nEmitter when the `pac` proxy file is created or updated.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| domains | <code>Object</code> | domain list |\n\n<a name=\"ProxyServer+event_httpsRequest\"></a>\n\n### \"httpsRequest\"\nEmitted each time there is a request to the https server.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| request | <code>http.IncomingMessage</code> | request object |\n| response | <code>http.ServerResponse</code> | response object |\n\n<a name=\"ProxyServer+event_connect\"></a>\n\n### \"connect\"\nEmitted each time the server responds to a request with a `CONNECT` method.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| request | <code>http.IncomingMessage</code> | request object |\n| socket | <code>net.Socket</code> | socket object |\n| head | <code>Buffer</code> | head |\n\n<a name=\"ProxyServer+event_setResponse\"></a>\n\n### \"setResponse\"\nEmitted each time the server set response info (eg: headers).\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| response | <code>http.ServerResponse</code> | request object |\n\n<a name=\"ProxyServer+event_request\"></a>\n\n### \"request\"\nEmitted each time there is a request.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| request | <code>http.IncomingMessage</code> | request object |\n| response | <code>http.ServerResponse</code> | response object |\n\n<a name=\"ProxyServer+event_getProxyInfo\"></a>\n\n### \"getProxyInfo\"\nEmitted each time the hiproxy server get proxy info for current request.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| proxyInfo | <code>Object</code> | proxy info object |\n\n<a name=\"ProxyServer+event_setRequest\"></a>\n\n### \"setRequest\"\nEmitted each time the hiproxy server set request options (eg: headers and host) before request data from remote server\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| request | <code>http.IncomingMessage</code> | request |\n| proxyOptions | <code>Object</code> | the proxy header options |\n\n<a name=\"ProxyServer+event_setResponse\"></a>\n\n### \"setResponse\"\nEmitted each time the server set response info (eg: headers).\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| response | <code>http.ServerResponse</code> | request object |\n\n<a name=\"ProxyServer+event_data\"></a>\n\n### \"data\"\nEmitted whenever the response stream received some chunk of data.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| data | <code>Buffer</code> | response data |\n\n<a name=\"ProxyServer+event_data\"></a>\n\n### \"response\"\nEmitted when a response is end. This event is emitted only once.\n\n**Kind**: event emitted by [<code>ProxyServer</code>](#ProxyServer)  \n**Properties**\n\n| Name | Type | Description |\n| --- | --- | --- |\n| response | <code>http.ServerResponse</code> | response object |","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"zh-cn/api/events.html","comments":1,"layout":"page","_id":"cj7nia0iq000phy0fi49qfxa2","content":"<h2 id=\"ProxyServer-⇐-EventEmitter\"><a href=\"#ProxyServer-⇐-EventEmitter\" class=\"headerlink\" title=\"ProxyServer ⇐ EventEmitter\"></a>ProxyServer ⇐ <code>EventEmitter</code></h2><p><strong>Kind</strong>: global class<br><strong>Extends</strong>: <code>EventEmitter</code>  </p>\n<ul>\n<li><a href=\"#ProxyServer+event_start\">“start”</a></li>\n<li><a href=\"#ProxyServer+event_stop\">“stop”</a></li>\n<li><a href=\"#ProxyServer+event_addHostsFile\">“addHostsFile”</a></li>\n<li><a href=\"#ProxyServer+event_addRewriteFile\">“addRewriteFile”</a></li>\n<li><a href=\"#ProxyServer+event_creatPacFile\">“creatPacFile”</a></li>\n<li><a href=\"#ProxyServer+event_httpsRequest\">“httpsRequest”</a></li>\n<li><a href=\"#ProxyServer+event_connect\">“connect”</a></li>\n<li><a href=\"#ProxyServer+event_setResponse\">“setResponse”</a></li>\n<li><a href=\"#ProxyServer+event_request\">“request”</a></li>\n<li><a href=\"#ProxyServer+event_getProxyInfo\">“getProxyInfo”</a></li>\n<li><a href=\"#ProxyServer+event_setRequest\">“setRequest”</a></li>\n<li><a href=\"#ProxyServer+event_setResponse\">“setResponse”</a></li>\n<li><a href=\"#ProxyServer+event_data\">“data”</a></li>\n<li><a href=\"#ProxyServer+event_response\">“response”</a></li>\n</ul>\n<p><a name=\"ProxyServer+event_start\"></a></p>\n<h3 id=\"“start”\"><a href=\"#“start”\" class=\"headerlink\" title=\"“start”\"></a>“start”</h3><p>Emitted when the hiproxy server(s) start.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>servers</td>\n<td><code>Array</code></td>\n<td>http/https server</td>\n</tr>\n<tr>\n<td>localIP</td>\n<td><code>String</code></td>\n<td>the local ip address</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_stop\"></a></p>\n<h3 id=\"“stop”\"><a href=\"#“stop”\" class=\"headerlink\" title=\"“stop”\"></a>“stop”</h3><p>Emitted when the hiproxy server(s) stop.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><a name=\"ProxyServer+event_addHostsFile\"></a></p>\n<h3 id=\"“addHostsFile”\"><a href=\"#“addHostsFile”\" class=\"headerlink\" title=\"“addHostsFile”\"></a>“addHostsFile”</h3><p>Emitted when add hosts file.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>filePath</td>\n<td><code>Array</code> \\</td>\n<td><code>String</code></td>\n<td>rewrite file path(s)</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_addRewriteFile\"></a></p>\n<h3 id=\"“addRewriteFile”\"><a href=\"#“addRewriteFile”\" class=\"headerlink\" title=\"“addRewriteFile”\"></a>“addRewriteFile”</h3><p>Emitted when add rewrite file.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>filePath</td>\n<td><code>Array</code> \\</td>\n<td><code>String</code></td>\n<td>rewrite file path(s)</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_creatPacFile\"></a></p>\n<h3 id=\"“creatPacFile”\"><a href=\"#“creatPacFile”\" class=\"headerlink\" title=\"“creatPacFile”\"></a>“creatPacFile”</h3><p>Emitter when the <code>pac</code> proxy file is created or updated.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>domains</td>\n<td><code>Object</code></td>\n<td>domain list</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_httpsRequest\"></a></p>\n<h3 id=\"“httpsRequest”\"><a href=\"#“httpsRequest”\" class=\"headerlink\" title=\"“httpsRequest”\"></a>“httpsRequest”</h3><p>Emitted each time there is a request to the https server.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>request</td>\n<td><code>http.IncomingMessage</code></td>\n<td>request object</td>\n</tr>\n<tr>\n<td>response</td>\n<td><code>http.ServerResponse</code></td>\n<td>response object</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_connect\"></a></p>\n<h3 id=\"“connect”\"><a href=\"#“connect”\" class=\"headerlink\" title=\"“connect”\"></a>“connect”</h3><p>Emitted each time the server responds to a request with a <code>CONNECT</code> method.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>request</td>\n<td><code>http.IncomingMessage</code></td>\n<td>request object</td>\n</tr>\n<tr>\n<td>socket</td>\n<td><code>net.Socket</code></td>\n<td>socket object</td>\n</tr>\n<tr>\n<td>head</td>\n<td><code>Buffer</code></td>\n<td>head</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_setResponse\"></a></p>\n<h3 id=\"“setResponse”\"><a href=\"#“setResponse”\" class=\"headerlink\" title=\"“setResponse”\"></a>“setResponse”</h3><p>Emitted each time the server set response info (eg: headers).</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>response</td>\n<td><code>http.ServerResponse</code></td>\n<td>request object</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_request\"></a></p>\n<h3 id=\"“request”\"><a href=\"#“request”\" class=\"headerlink\" title=\"“request”\"></a>“request”</h3><p>Emitted each time there is a request.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>request</td>\n<td><code>http.IncomingMessage</code></td>\n<td>request object</td>\n</tr>\n<tr>\n<td>response</td>\n<td><code>http.ServerResponse</code></td>\n<td>response object</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_getProxyInfo\"></a></p>\n<h3 id=\"“getProxyInfo”\"><a href=\"#“getProxyInfo”\" class=\"headerlink\" title=\"“getProxyInfo”\"></a>“getProxyInfo”</h3><p>Emitted each time the hiproxy server get proxy info for current request.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>proxyInfo</td>\n<td><code>Object</code></td>\n<td>proxy info object</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_setRequest\"></a></p>\n<h3 id=\"“setRequest”\"><a href=\"#“setRequest”\" class=\"headerlink\" title=\"“setRequest”\"></a>“setRequest”</h3><p>Emitted each time the hiproxy server set request options (eg: headers and host) before request data from remote server</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>request</td>\n<td><code>http.IncomingMessage</code></td>\n<td>request</td>\n</tr>\n<tr>\n<td>proxyOptions</td>\n<td><code>Object</code></td>\n<td>the proxy header options</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_setResponse\"></a></p>\n<h3 id=\"“setResponse”-1\"><a href=\"#“setResponse”-1\" class=\"headerlink\" title=\"“setResponse”\"></a>“setResponse”</h3><p>Emitted each time the server set response info (eg: headers).</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>response</td>\n<td><code>http.ServerResponse</code></td>\n<td>request object</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_data\"></a></p>\n<h3 id=\"“data”\"><a href=\"#“data”\" class=\"headerlink\" title=\"“data”\"></a>“data”</h3><p>Emitted whenever the response stream received some chunk of data.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td><code>Buffer</code></td>\n<td>response data</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_data\"></a></p>\n<h3 id=\"“response”\"><a href=\"#“response”\" class=\"headerlink\" title=\"“response”\"></a>“response”</h3><p>Emitted when a response is end. This event is emitted only once.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>response</td>\n<td><code>http.ServerResponse</code></td>\n<td>response object</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<h2 id=\"ProxyServer-⇐-EventEmitter\"><a href=\"#ProxyServer-⇐-EventEmitter\" class=\"headerlink\" title=\"ProxyServer ⇐ EventEmitter\"></a>ProxyServer ⇐ <code>EventEmitter</code></h2><p><strong>Kind</strong>: global class<br><strong>Extends</strong>: <code>EventEmitter</code>  </p>\n<ul>\n<li><a href=\"#ProxyServer+event_start\">“start”</a></li>\n<li><a href=\"#ProxyServer+event_stop\">“stop”</a></li>\n<li><a href=\"#ProxyServer+event_addHostsFile\">“addHostsFile”</a></li>\n<li><a href=\"#ProxyServer+event_addRewriteFile\">“addRewriteFile”</a></li>\n<li><a href=\"#ProxyServer+event_creatPacFile\">“creatPacFile”</a></li>\n<li><a href=\"#ProxyServer+event_httpsRequest\">“httpsRequest”</a></li>\n<li><a href=\"#ProxyServer+event_connect\">“connect”</a></li>\n<li><a href=\"#ProxyServer+event_setResponse\">“setResponse”</a></li>\n<li><a href=\"#ProxyServer+event_request\">“request”</a></li>\n<li><a href=\"#ProxyServer+event_getProxyInfo\">“getProxyInfo”</a></li>\n<li><a href=\"#ProxyServer+event_setRequest\">“setRequest”</a></li>\n<li><a href=\"#ProxyServer+event_setResponse\">“setResponse”</a></li>\n<li><a href=\"#ProxyServer+event_data\">“data”</a></li>\n<li><a href=\"#ProxyServer+event_response\">“response”</a></li>\n</ul>\n<p><a name=\"ProxyServer+event_start\"></a></p>\n<h3 id=\"“start”\"><a href=\"#“start”\" class=\"headerlink\" title=\"“start”\"></a>“start”</h3><p>Emitted when the hiproxy server(s) start.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>servers</td>\n<td><code>Array</code></td>\n<td>http/https server</td>\n</tr>\n<tr>\n<td>localIP</td>\n<td><code>String</code></td>\n<td>the local ip address</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_stop\"></a></p>\n<h3 id=\"“stop”\"><a href=\"#“stop”\" class=\"headerlink\" title=\"“stop”\"></a>“stop”</h3><p>Emitted when the hiproxy server(s) stop.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><a name=\"ProxyServer+event_addHostsFile\"></a></p>\n<h3 id=\"“addHostsFile”\"><a href=\"#“addHostsFile”\" class=\"headerlink\" title=\"“addHostsFile”\"></a>“addHostsFile”</h3><p>Emitted when add hosts file.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>filePath</td>\n<td><code>Array</code> \\</td>\n<td><code>String</code></td>\n<td>rewrite file path(s)</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_addRewriteFile\"></a></p>\n<h3 id=\"“addRewriteFile”\"><a href=\"#“addRewriteFile”\" class=\"headerlink\" title=\"“addRewriteFile”\"></a>“addRewriteFile”</h3><p>Emitted when add rewrite file.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>filePath</td>\n<td><code>Array</code> \\</td>\n<td><code>String</code></td>\n<td>rewrite file path(s)</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_creatPacFile\"></a></p>\n<h3 id=\"“creatPacFile”\"><a href=\"#“creatPacFile”\" class=\"headerlink\" title=\"“creatPacFile”\"></a>“creatPacFile”</h3><p>Emitter when the <code>pac</code> proxy file is created or updated.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>domains</td>\n<td><code>Object</code></td>\n<td>domain list</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_httpsRequest\"></a></p>\n<h3 id=\"“httpsRequest”\"><a href=\"#“httpsRequest”\" class=\"headerlink\" title=\"“httpsRequest”\"></a>“httpsRequest”</h3><p>Emitted each time there is a request to the https server.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>request</td>\n<td><code>http.IncomingMessage</code></td>\n<td>request object</td>\n</tr>\n<tr>\n<td>response</td>\n<td><code>http.ServerResponse</code></td>\n<td>response object</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_connect\"></a></p>\n<h3 id=\"“connect”\"><a href=\"#“connect”\" class=\"headerlink\" title=\"“connect”\"></a>“connect”</h3><p>Emitted each time the server responds to a request with a <code>CONNECT</code> method.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>request</td>\n<td><code>http.IncomingMessage</code></td>\n<td>request object</td>\n</tr>\n<tr>\n<td>socket</td>\n<td><code>net.Socket</code></td>\n<td>socket object</td>\n</tr>\n<tr>\n<td>head</td>\n<td><code>Buffer</code></td>\n<td>head</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_setResponse\"></a></p>\n<h3 id=\"“setResponse”\"><a href=\"#“setResponse”\" class=\"headerlink\" title=\"“setResponse”\"></a>“setResponse”</h3><p>Emitted each time the server set response info (eg: headers).</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>response</td>\n<td><code>http.ServerResponse</code></td>\n<td>request object</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_request\"></a></p>\n<h3 id=\"“request”\"><a href=\"#“request”\" class=\"headerlink\" title=\"“request”\"></a>“request”</h3><p>Emitted each time there is a request.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>request</td>\n<td><code>http.IncomingMessage</code></td>\n<td>request object</td>\n</tr>\n<tr>\n<td>response</td>\n<td><code>http.ServerResponse</code></td>\n<td>response object</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_getProxyInfo\"></a></p>\n<h3 id=\"“getProxyInfo”\"><a href=\"#“getProxyInfo”\" class=\"headerlink\" title=\"“getProxyInfo”\"></a>“getProxyInfo”</h3><p>Emitted each time the hiproxy server get proxy info for current request.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>proxyInfo</td>\n<td><code>Object</code></td>\n<td>proxy info object</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_setRequest\"></a></p>\n<h3 id=\"“setRequest”\"><a href=\"#“setRequest”\" class=\"headerlink\" title=\"“setRequest”\"></a>“setRequest”</h3><p>Emitted each time the hiproxy server set request options (eg: headers and host) before request data from remote server</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>request</td>\n<td><code>http.IncomingMessage</code></td>\n<td>request</td>\n</tr>\n<tr>\n<td>proxyOptions</td>\n<td><code>Object</code></td>\n<td>the proxy header options</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_setResponse\"></a></p>\n<h3 id=\"“setResponse”-1\"><a href=\"#“setResponse”-1\" class=\"headerlink\" title=\"“setResponse”\"></a>“setResponse”</h3><p>Emitted each time the server set response info (eg: headers).</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>response</td>\n<td><code>http.ServerResponse</code></td>\n<td>request object</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_data\"></a></p>\n<h3 id=\"“data”\"><a href=\"#“data”\" class=\"headerlink\" title=\"“data”\"></a>“data”</h3><p>Emitted whenever the response stream received some chunk of data.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td><code>Buffer</code></td>\n<td>response data</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+event_data\"></a></p>\n<h3 id=\"“response”\"><a href=\"#“response”\" class=\"headerlink\" title=\"“response”\"></a>“response”</h3><p>Emitted when a response is end. This event is emitted only once.</p>\n<p><strong>Kind</strong>: event emitted by <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Properties</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>response</td>\n<td><code>http.ServerResponse</code></td>\n<td>response object</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"Node.js API","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n> \n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n<a name=\"ProxyServer\"></a>\n\n## ProxyServer ⇐ <code>EventEmitter</code>\n**Kind**: global class  \n**Extends**: <code>EventEmitter</code>  \n\n* [ProxyServer](#ProxyServer) ⇐ <code>EventEmitter</code>\n    * [new ProxyServer(httpPort, httpsPort)](#new_ProxyServer_new)\n    * [.start(httpPort, httpsPort)](#ProxyServer+start) ⇒ <code>Promise</code>\n    * [.stop()](#ProxyServer+stop) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n    * [.restart()](#ProxyServer+restart) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n    * [.addHostsFile(filePath)](#ProxyServer+addHostsFile) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n    * [.addRewriteFile(filePath)](#ProxyServer+addRewriteFile) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n    * [.openBrowser(browserName, url, [usePacProxy])](#ProxyServer+openBrowser) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n    * [.findConfigFiels([dir])](#ProxyServer+findConfigFiels) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n\n<a name=\"new_ProxyServer_new\"></a>\n\n### new ProxyServer(httpPort, httpsPort)\nhiproxy代理服务器\n\n\n| Param | Type | Description |\n| --- | --- | --- |\n| httpPort | <code>Number</code> | http代理服务端口号 |\n| httpsPort | <code>Number</code> | https代理服务器端口号 |\n\n<a name=\"ProxyServer+start\"></a>\n\n### proxyServer.start([config]) ⇒ <code>Promise</code>\n启动代理服务\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| config | <code>Object</code> | 配置字段 |\n\n<a name=\"ProxyServer+stop\"></a>\n\n### proxyServer.stop() ⇒ [<code>ProxyServer</code>](#ProxyServer)\n停止代理服务\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n<a name=\"ProxyServer+restart\"></a>\n\n### proxyServer.restart() ⇒ [<code>ProxyServer</code>](#ProxyServer)\n重启代理服务\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n<a name=\"ProxyServer+addHostsFile\"></a>\n\n### proxyServer.addHostsFile(filePath) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n添加Hosts文件\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| filePath | <code>String</code> \\| <code>Array</code> | `hosts`文件路径（绝对路径） |\n\n<a name=\"ProxyServer+addRewriteFile\"></a>\n\n### proxyServer.addRewriteFile(filePath) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n添加rewrite文件\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| filePath | <code>String</code> \\| <code>Array</code> | `rewrite`文件路径（绝对路径） |\n\n<a name=\"ProxyServer+openBrowser\"></a>\n\n### proxyServer.openBrowser(browserName, url, [usePacProxy]) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n打开浏览器窗口\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| browserName | <code>String</code> |  | 浏览器名称 |\n| url | <code>String</code> |  | 要打开的url |\n| [usePacProxy] | <code>Boolean</code> | <code>false</code> | 是否使用自动代理 |\n\n<a name=\"ProxyServer+findConfigFiels\"></a>\n\n### proxyServer.findConfigFiles([dir]) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n在指定工作空间（目录）下查找配置文件\nhiproxy会在指定的空间下所有一级目录下查找配置文件\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| [dir] | <code>String</code> | <code>process.cwd()</code> | 工作空间（目录） |\n\n\n### proxyServer.enableConfFile(confFileType, filePath) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n启用指定配置文件\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| confFileType | <code>String</code> |  | 文件类型(host/rewrite) |\n| filePath | <code>String</code> \\| <code>Array</code> |  | 修改的文件路径 |\n\n### proxyServer.disableConfFile(confFileType, filePath) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n禁用指定配置文件\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| confFileType | <code>String</code> |  | 文件类型(host/rewrite) |\n| filePath | <code>String</code> \\| <code>Array</code> |  | 修改的文件路径 |\n","source":"zh-cn/api/index.md","raw":"title: Node.js API\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n> \n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n<a name=\"ProxyServer\"></a>\n\n## ProxyServer ⇐ <code>EventEmitter</code>\n**Kind**: global class  \n**Extends**: <code>EventEmitter</code>  \n\n* [ProxyServer](#ProxyServer) ⇐ <code>EventEmitter</code>\n    * [new ProxyServer(httpPort, httpsPort)](#new_ProxyServer_new)\n    * [.start(httpPort, httpsPort)](#ProxyServer+start) ⇒ <code>Promise</code>\n    * [.stop()](#ProxyServer+stop) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n    * [.restart()](#ProxyServer+restart) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n    * [.addHostsFile(filePath)](#ProxyServer+addHostsFile) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n    * [.addRewriteFile(filePath)](#ProxyServer+addRewriteFile) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n    * [.openBrowser(browserName, url, [usePacProxy])](#ProxyServer+openBrowser) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n    * [.findConfigFiels([dir])](#ProxyServer+findConfigFiels) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n\n<a name=\"new_ProxyServer_new\"></a>\n\n### new ProxyServer(httpPort, httpsPort)\nhiproxy代理服务器\n\n\n| Param | Type | Description |\n| --- | --- | --- |\n| httpPort | <code>Number</code> | http代理服务端口号 |\n| httpsPort | <code>Number</code> | https代理服务器端口号 |\n\n<a name=\"ProxyServer+start\"></a>\n\n### proxyServer.start([config]) ⇒ <code>Promise</code>\n启动代理服务\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| config | <code>Object</code> | 配置字段 |\n\n<a name=\"ProxyServer+stop\"></a>\n\n### proxyServer.stop() ⇒ [<code>ProxyServer</code>](#ProxyServer)\n停止代理服务\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n<a name=\"ProxyServer+restart\"></a>\n\n### proxyServer.restart() ⇒ [<code>ProxyServer</code>](#ProxyServer)\n重启代理服务\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n<a name=\"ProxyServer+addHostsFile\"></a>\n\n### proxyServer.addHostsFile(filePath) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n添加Hosts文件\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| filePath | <code>String</code> \\| <code>Array</code> | `hosts`文件路径（绝对路径） |\n\n<a name=\"ProxyServer+addRewriteFile\"></a>\n\n### proxyServer.addRewriteFile(filePath) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n添加rewrite文件\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| filePath | <code>String</code> \\| <code>Array</code> | `rewrite`文件路径（绝对路径） |\n\n<a name=\"ProxyServer+openBrowser\"></a>\n\n### proxyServer.openBrowser(browserName, url, [usePacProxy]) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n打开浏览器窗口\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| browserName | <code>String</code> |  | 浏览器名称 |\n| url | <code>String</code> |  | 要打开的url |\n| [usePacProxy] | <code>Boolean</code> | <code>false</code> | 是否使用自动代理 |\n\n<a name=\"ProxyServer+findConfigFiels\"></a>\n\n### proxyServer.findConfigFiles([dir]) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n在指定工作空间（目录）下查找配置文件\nhiproxy会在指定的空间下所有一级目录下查找配置文件\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| [dir] | <code>String</code> | <code>process.cwd()</code> | 工作空间（目录） |\n\n\n### proxyServer.enableConfFile(confFileType, filePath) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n启用指定配置文件\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| confFileType | <code>String</code> |  | 文件类型(host/rewrite) |\n| filePath | <code>String</code> \\| <code>Array</code> |  | 修改的文件路径 |\n\n### proxyServer.disableConfFile(confFileType, filePath) ⇒ [<code>ProxyServer</code>](#ProxyServer)\n禁用指定配置文件\n\n**Kind**: instance method of [<code>ProxyServer</code>](#ProxyServer)  \n**Access**: public  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| confFileType | <code>String</code> |  | 文件类型(host/rewrite) |\n| filePath | <code>String</code> \\| <code>Array</code> |  | 修改的文件路径 |\n","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"zh-cn/api/index.html","comments":1,"layout":"page","_id":"cj7nia0iq000qhy0fp9rt3l0o","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<p><a name=\"ProxyServer\"></a></p>\n<h2 id=\"ProxyServer-⇐-EventEmitter\"><a href=\"#ProxyServer-⇐-EventEmitter\" class=\"headerlink\" title=\"ProxyServer ⇐ EventEmitter\"></a>ProxyServer ⇐ <code>EventEmitter</code></h2><p><strong>Kind</strong>: global class<br><strong>Extends</strong>: <code>EventEmitter</code>  </p>\n<ul>\n<li><a href=\"#ProxyServer\">ProxyServer</a> ⇐ <code>EventEmitter</code><ul>\n<li><a href=\"#new_ProxyServer_new\">new ProxyServer(httpPort, httpsPort)</a></li>\n<li><a href=\"#ProxyServer+start\">.start(httpPort, httpsPort)</a> ⇒ <code>Promise</code></li>\n<li><a href=\"#ProxyServer+stop\">.stop()</a> ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></li>\n<li><a href=\"#ProxyServer+restart\">.restart()</a> ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></li>\n<li><a href=\"#ProxyServer+addHostsFile\">.addHostsFile(filePath)</a> ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></li>\n<li><a href=\"#ProxyServer+addRewriteFile\">.addRewriteFile(filePath)</a> ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></li>\n<li><a href=\"#ProxyServer+openBrowser\">.openBrowser(browserName, url, [usePacProxy])</a> ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></li>\n<li><a href=\"#ProxyServer+findConfigFiels\">.findConfigFiels([dir])</a> ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></li>\n</ul>\n</li>\n</ul>\n<p><a name=\"new_ProxyServer_new\"></a></p>\n<h3 id=\"new-ProxyServer-httpPort-httpsPort\"><a href=\"#new-ProxyServer-httpPort-httpsPort\" class=\"headerlink\" title=\"new ProxyServer(httpPort, httpsPort)\"></a>new ProxyServer(httpPort, httpsPort)</h3><p>hiproxy代理服务器</p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>httpPort</td>\n<td><code>Number</code></td>\n<td>http代理服务端口号</td>\n</tr>\n<tr>\n<td>httpsPort</td>\n<td><code>Number</code></td>\n<td>https代理服务器端口号</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+start\"></a></p>\n<h3 id=\"proxyServer-start-config-⇒-Promise\"><a href=\"#proxyServer-start-config-⇒-Promise\" class=\"headerlink\" title=\"proxyServer.start([config]) ⇒ Promise\"></a>proxyServer.start([config]) ⇒ <code>Promise</code></h3><p>启动代理服务</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>config</td>\n<td><code>Object</code></td>\n<td>配置字段</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+stop\"></a></p>\n<h3 id=\"proxyServer-stop-⇒-ProxyServer\"><a href=\"#proxyServer-stop-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.stop() ⇒ ProxyServer\"></a>proxyServer.stop() ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>停止代理服务</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public<br><a name=\"ProxyServer+restart\"></a></p>\n<h3 id=\"proxyServer-restart-⇒-ProxyServer\"><a href=\"#proxyServer-restart-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.restart() ⇒ ProxyServer\"></a>proxyServer.restart() ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>重启代理服务</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public<br><a name=\"ProxyServer+addHostsFile\"></a></p>\n<h3 id=\"proxyServer-addHostsFile-filePath-⇒-ProxyServer\"><a href=\"#proxyServer-addHostsFile-filePath-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.addHostsFile(filePath) ⇒ ProxyServer\"></a>proxyServer.addHostsFile(filePath) ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>添加Hosts文件</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>filePath</td>\n<td><code>String</code> \\</td>\n<td><code>Array</code></td>\n<td><code>hosts</code>文件路径（绝对路径）</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+addRewriteFile\"></a></p>\n<h3 id=\"proxyServer-addRewriteFile-filePath-⇒-ProxyServer\"><a href=\"#proxyServer-addRewriteFile-filePath-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.addRewriteFile(filePath) ⇒ ProxyServer\"></a>proxyServer.addRewriteFile(filePath) ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>添加rewrite文件</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>filePath</td>\n<td><code>String</code> \\</td>\n<td><code>Array</code></td>\n<td><code>rewrite</code>文件路径（绝对路径）</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+openBrowser\"></a></p>\n<h3 id=\"proxyServer-openBrowser-browserName-url-usePacProxy-⇒-ProxyServer\"><a href=\"#proxyServer-openBrowser-browserName-url-usePacProxy-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.openBrowser(browserName, url, [usePacProxy]) ⇒ ProxyServer\"></a>proxyServer.openBrowser(browserName, url, [usePacProxy]) ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>打开浏览器窗口</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>browserName</td>\n<td><code>String</code></td>\n<td></td>\n<td>浏览器名称</td>\n</tr>\n<tr>\n<td>url</td>\n<td><code>String</code></td>\n<td></td>\n<td>要打开的url</td>\n</tr>\n<tr>\n<td>[usePacProxy]</td>\n<td><code>Boolean</code></td>\n<td><code>false</code></td>\n<td>是否使用自动代理</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+findConfigFiels\"></a></p>\n<h3 id=\"proxyServer-findConfigFiles-dir-⇒-ProxyServer\"><a href=\"#proxyServer-findConfigFiles-dir-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.findConfigFiles([dir]) ⇒ ProxyServer\"></a>proxyServer.findConfigFiles([dir]) ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>在指定工作空间（目录）下查找配置文件<br>hiproxy会在指定的空间下所有一级目录下查找配置文件</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[dir]</td>\n<td><code>String</code></td>\n<td><code>process.cwd()</code></td>\n<td>工作空间（目录）</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"proxyServer-enableConfFile-confFileType-filePath-⇒-ProxyServer\"><a href=\"#proxyServer-enableConfFile-confFileType-filePath-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.enableConfFile(confFileType, filePath) ⇒ ProxyServer\"></a>proxyServer.enableConfFile(confFileType, filePath) ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>启用指定配置文件</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>confFileType</td>\n<td><code>String</code></td>\n<td></td>\n<td>文件类型(host/rewrite)</td>\n</tr>\n<tr>\n<td>filePath</td>\n<td><code>String</code> \\</td>\n<td><code>Array</code></td>\n<td></td>\n<td>修改的文件路径</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"proxyServer-disableConfFile-confFileType-filePath-⇒-ProxyServer\"><a href=\"#proxyServer-disableConfFile-confFileType-filePath-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.disableConfFile(confFileType, filePath) ⇒ ProxyServer\"></a>proxyServer.disableConfFile(confFileType, filePath) ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>禁用指定配置文件</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>confFileType</td>\n<td><code>String</code></td>\n<td></td>\n<td>文件类型(host/rewrite)</td>\n</tr>\n<tr>\n<td>filePath</td>\n<td><code>String</code> \\</td>\n<td><code>Array</code></td>\n<td></td>\n<td>修改的文件路径</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<p><a name=\"ProxyServer\"></a></p>\n<h2 id=\"ProxyServer-⇐-EventEmitter\"><a href=\"#ProxyServer-⇐-EventEmitter\" class=\"headerlink\" title=\"ProxyServer ⇐ EventEmitter\"></a>ProxyServer ⇐ <code>EventEmitter</code></h2><p><strong>Kind</strong>: global class<br><strong>Extends</strong>: <code>EventEmitter</code>  </p>\n<ul>\n<li><a href=\"#ProxyServer\">ProxyServer</a> ⇐ <code>EventEmitter</code><ul>\n<li><a href=\"#new_ProxyServer_new\">new ProxyServer(httpPort, httpsPort)</a></li>\n<li><a href=\"#ProxyServer+start\">.start(httpPort, httpsPort)</a> ⇒ <code>Promise</code></li>\n<li><a href=\"#ProxyServer+stop\">.stop()</a> ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></li>\n<li><a href=\"#ProxyServer+restart\">.restart()</a> ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></li>\n<li><a href=\"#ProxyServer+addHostsFile\">.addHostsFile(filePath)</a> ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></li>\n<li><a href=\"#ProxyServer+addRewriteFile\">.addRewriteFile(filePath)</a> ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></li>\n<li><a href=\"#ProxyServer+openBrowser\">.openBrowser(browserName, url, [usePacProxy])</a> ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></li>\n<li><a href=\"#ProxyServer+findConfigFiels\">.findConfigFiels([dir])</a> ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></li>\n</ul>\n</li>\n</ul>\n<p><a name=\"new_ProxyServer_new\"></a></p>\n<h3 id=\"new-ProxyServer-httpPort-httpsPort\"><a href=\"#new-ProxyServer-httpPort-httpsPort\" class=\"headerlink\" title=\"new ProxyServer(httpPort, httpsPort)\"></a>new ProxyServer(httpPort, httpsPort)</h3><p>hiproxy代理服务器</p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>httpPort</td>\n<td><code>Number</code></td>\n<td>http代理服务端口号</td>\n</tr>\n<tr>\n<td>httpsPort</td>\n<td><code>Number</code></td>\n<td>https代理服务器端口号</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+start\"></a></p>\n<h3 id=\"proxyServer-start-config-⇒-Promise\"><a href=\"#proxyServer-start-config-⇒-Promise\" class=\"headerlink\" title=\"proxyServer.start([config]) ⇒ Promise\"></a>proxyServer.start([config]) ⇒ <code>Promise</code></h3><p>启动代理服务</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>config</td>\n<td><code>Object</code></td>\n<td>配置字段</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+stop\"></a></p>\n<h3 id=\"proxyServer-stop-⇒-ProxyServer\"><a href=\"#proxyServer-stop-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.stop() ⇒ ProxyServer\"></a>proxyServer.stop() ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>停止代理服务</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public<br><a name=\"ProxyServer+restart\"></a></p>\n<h3 id=\"proxyServer-restart-⇒-ProxyServer\"><a href=\"#proxyServer-restart-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.restart() ⇒ ProxyServer\"></a>proxyServer.restart() ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>重启代理服务</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public<br><a name=\"ProxyServer+addHostsFile\"></a></p>\n<h3 id=\"proxyServer-addHostsFile-filePath-⇒-ProxyServer\"><a href=\"#proxyServer-addHostsFile-filePath-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.addHostsFile(filePath) ⇒ ProxyServer\"></a>proxyServer.addHostsFile(filePath) ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>添加Hosts文件</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>filePath</td>\n<td><code>String</code> \\</td>\n<td><code>Array</code></td>\n<td><code>hosts</code>文件路径（绝对路径）</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+addRewriteFile\"></a></p>\n<h3 id=\"proxyServer-addRewriteFile-filePath-⇒-ProxyServer\"><a href=\"#proxyServer-addRewriteFile-filePath-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.addRewriteFile(filePath) ⇒ ProxyServer\"></a>proxyServer.addRewriteFile(filePath) ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>添加rewrite文件</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>filePath</td>\n<td><code>String</code> \\</td>\n<td><code>Array</code></td>\n<td><code>rewrite</code>文件路径（绝对路径）</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+openBrowser\"></a></p>\n<h3 id=\"proxyServer-openBrowser-browserName-url-usePacProxy-⇒-ProxyServer\"><a href=\"#proxyServer-openBrowser-browserName-url-usePacProxy-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.openBrowser(browserName, url, [usePacProxy]) ⇒ ProxyServer\"></a>proxyServer.openBrowser(browserName, url, [usePacProxy]) ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>打开浏览器窗口</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>browserName</td>\n<td><code>String</code></td>\n<td></td>\n<td>浏览器名称</td>\n</tr>\n<tr>\n<td>url</td>\n<td><code>String</code></td>\n<td></td>\n<td>要打开的url</td>\n</tr>\n<tr>\n<td>[usePacProxy]</td>\n<td><code>Boolean</code></td>\n<td><code>false</code></td>\n<td>是否使用自动代理</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ProxyServer+findConfigFiels\"></a></p>\n<h3 id=\"proxyServer-findConfigFiles-dir-⇒-ProxyServer\"><a href=\"#proxyServer-findConfigFiles-dir-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.findConfigFiles([dir]) ⇒ ProxyServer\"></a>proxyServer.findConfigFiles([dir]) ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>在指定工作空间（目录）下查找配置文件<br>hiproxy会在指定的空间下所有一级目录下查找配置文件</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[dir]</td>\n<td><code>String</code></td>\n<td><code>process.cwd()</code></td>\n<td>工作空间（目录）</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"proxyServer-enableConfFile-confFileType-filePath-⇒-ProxyServer\"><a href=\"#proxyServer-enableConfFile-confFileType-filePath-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.enableConfFile(confFileType, filePath) ⇒ ProxyServer\"></a>proxyServer.enableConfFile(confFileType, filePath) ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>启用指定配置文件</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>confFileType</td>\n<td><code>String</code></td>\n<td></td>\n<td>文件类型(host/rewrite)</td>\n</tr>\n<tr>\n<td>filePath</td>\n<td><code>String</code> \\</td>\n<td><code>Array</code></td>\n<td></td>\n<td>修改的文件路径</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"proxyServer-disableConfFile-confFileType-filePath-⇒-ProxyServer\"><a href=\"#proxyServer-disableConfFile-confFileType-filePath-⇒-ProxyServer\" class=\"headerlink\" title=\"proxyServer.disableConfFile(confFileType, filePath) ⇒ ProxyServer\"></a>proxyServer.disableConfFile(confFileType, filePath) ⇒ <a href=\"#ProxyServer\"><code>ProxyServer</code></a></h3><p>禁用指定配置文件</p>\n<p><strong>Kind</strong>: instance method of <a href=\"#ProxyServer\"><code>ProxyServer</code></a><br><strong>Access</strong>: public  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>confFileType</td>\n<td><code>String</code></td>\n<td></td>\n<td>文件类型(host/rewrite)</td>\n</tr>\n<tr>\n<td>filePath</td>\n<td><code>String</code> \\</td>\n<td><code>Array</code></td>\n<td></td>\n<td>修改的文件路径</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"配置文件查找","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n> \n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n如果是遵循[hiproxy的理念](../get_started/#Concept)的存放配置文件（包括配置文件的文件名），当hiproxy的启动时，能够自动查找项目的配置文件，不需要手动指定配置文件。\n\n如果没有遵循，把配置文件存放在其他路径或者不是使用默认的文件名称（hosts文件默认文件名称为`hosts`，rewrite文件默认的文件名称为`rewrite`），需要在启动的时候，手动指定配置文件名称。\n\n## 指定配置文件\n\n要指定配置文件名称，可以使用选项`-c, --hosts-file <files>`和`-r, --rewrite-file <files>`。\n\n`-c, --hosts-file <files>`用来指定hosts的文件路径，多个文件使用`,`分隔。\n\n`-r, --rewrite-file <files>`用来指定rewrite的文件路径，多个文件使用`,`分隔。\n\n`<files>`也支持使用**简单的通配符模式**来指定多个文件，比如`--rewrite-file ./*/*.conf`。\n\n> **注意**\n>\n> 如果指定了对应的配置文件，hiproxy会查找指定的文件，不再查找默认的`hosts`或者`rewrite`，比如：\n> * 指定了`-c ./*/hosts.conf`，则不再查找名称为`hosts`的文件。\n> * 指定了`-r ./*/rewrite.conf`，则不再查找名称为`rewrite`的文件。\n\n## 配置文件名称通配符\n\n支持的通配符有：\n\n通配符 | 说明 | 示例 | 匹配 | 不匹配\n---------|----------|---------|----------|---------\n \\* | 匹配一个或者多个字符 | ./test-*.js | ./test-hello.js | ./test-.js\n ? | 匹配一个字符 | ./test?.js | ./testA.js | ./testAB.js\n [abc] | 匹配方括号的中任意字符。 | ./test[ABC].js | ./testA.js | ./testD.js\n [^abc] | 匹配非方括号的中任意字符。 | ./test[^ABC].js | ./testD.js | ./testA.js\n [!abc] | 同[^abc] | ./test[!ABC].js | ./testD.js | ./testA.js\n\n> **注意**\n> \n> 不支持使用`**`来查找任意层级目录中的文件。\n","source":"zh-cn/configuration/find_conf.md","raw":"title: 配置文件查找\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n> \n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n如果是遵循[hiproxy的理念](../get_started/#Concept)的存放配置文件（包括配置文件的文件名），当hiproxy的启动时，能够自动查找项目的配置文件，不需要手动指定配置文件。\n\n如果没有遵循，把配置文件存放在其他路径或者不是使用默认的文件名称（hosts文件默认文件名称为`hosts`，rewrite文件默认的文件名称为`rewrite`），需要在启动的时候，手动指定配置文件名称。\n\n## 指定配置文件\n\n要指定配置文件名称，可以使用选项`-c, --hosts-file <files>`和`-r, --rewrite-file <files>`。\n\n`-c, --hosts-file <files>`用来指定hosts的文件路径，多个文件使用`,`分隔。\n\n`-r, --rewrite-file <files>`用来指定rewrite的文件路径，多个文件使用`,`分隔。\n\n`<files>`也支持使用**简单的通配符模式**来指定多个文件，比如`--rewrite-file ./*/*.conf`。\n\n> **注意**\n>\n> 如果指定了对应的配置文件，hiproxy会查找指定的文件，不再查找默认的`hosts`或者`rewrite`，比如：\n> * 指定了`-c ./*/hosts.conf`，则不再查找名称为`hosts`的文件。\n> * 指定了`-r ./*/rewrite.conf`，则不再查找名称为`rewrite`的文件。\n\n## 配置文件名称通配符\n\n支持的通配符有：\n\n通配符 | 说明 | 示例 | 匹配 | 不匹配\n---------|----------|---------|----------|---------\n \\* | 匹配一个或者多个字符 | ./test-*.js | ./test-hello.js | ./test-.js\n ? | 匹配一个字符 | ./test?.js | ./testA.js | ./testAB.js\n [abc] | 匹配方括号的中任意字符。 | ./test[ABC].js | ./testA.js | ./testD.js\n [^abc] | 匹配非方括号的中任意字符。 | ./test[^ABC].js | ./testD.js | ./testA.js\n [!abc] | 同[^abc] | ./test[!ABC].js | ./testD.js | ./testA.js\n\n> **注意**\n> \n> 不支持使用`**`来查找任意层级目录中的文件。\n","date":"2017-09-16T04:30:46.000Z","updated":"2017-09-16T04:30:46.000Z","path":"zh-cn/configuration/find_conf.html","comments":1,"layout":"page","_id":"cj7nia0ir000rhy0f2e4pj6us","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<p>如果是遵循<a href=\"../get_started/#Concept\">hiproxy的理念</a>的存放配置文件（包括配置文件的文件名），当hiproxy的启动时，能够自动查找项目的配置文件，不需要手动指定配置文件。</p>\n<p>如果没有遵循，把配置文件存放在其他路径或者不是使用默认的文件名称（hosts文件默认文件名称为<code>hosts</code>，rewrite文件默认的文件名称为<code>rewrite</code>），需要在启动的时候，手动指定配置文件名称。</p>\n<h2 id=\"指定配置文件\"><a href=\"#指定配置文件\" class=\"headerlink\" title=\"指定配置文件\"></a>指定配置文件</h2><p>要指定配置文件名称，可以使用选项<code>-c, --hosts-file &lt;files&gt;</code>和<code>-r, --rewrite-file &lt;files&gt;</code>。</p>\n<p><code>-c, --hosts-file &lt;files&gt;</code>用来指定hosts的文件路径，多个文件使用<code>,</code>分隔。</p>\n<p><code>-r, --rewrite-file &lt;files&gt;</code>用来指定rewrite的文件路径，多个文件使用<code>,</code>分隔。</p>\n<p><code>&lt;files&gt;</code>也支持使用<strong>简单的通配符模式</strong>来指定多个文件，比如<code>--rewrite-file ./*/*.conf</code>。</p>\n<blockquote>\n<p><strong>注意</strong></p>\n<p>如果指定了对应的配置文件，hiproxy会查找指定的文件，不再查找默认的<code>hosts</code>或者<code>rewrite</code>，比如：</p>\n<ul>\n<li>指定了<code>-c ./*/hosts.conf</code>，则不再查找名称为<code>hosts</code>的文件。</li>\n<li>指定了<code>-r ./*/rewrite.conf</code>，则不再查找名称为<code>rewrite</code>的文件。</li>\n</ul>\n</blockquote>\n<h2 id=\"配置文件名称通配符\"><a href=\"#配置文件名称通配符\" class=\"headerlink\" title=\"配置文件名称通配符\"></a>配置文件名称通配符</h2><p>支持的通配符有：</p>\n<table>\n<thead>\n<tr>\n<th>通配符</th>\n<th>说明</th>\n<th>示例</th>\n<th>匹配</th>\n<th>不匹配</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td> *</td>\n<td>匹配一个或者多个字符</td>\n<td>./test-*.js</td>\n<td>./test-hello.js</td>\n<td>./test-.js</td>\n</tr>\n<tr>\n<td> ?</td>\n<td>匹配一个字符</td>\n<td>./test?.js</td>\n<td>./testA.js</td>\n<td>./testAB.js</td>\n</tr>\n<tr>\n<td> [abc]</td>\n<td>匹配方括号的中任意字符。</td>\n<td>./test[ABC].js</td>\n<td>./testA.js</td>\n<td>./testD.js</td>\n</tr>\n<tr>\n<td> [^abc]</td>\n<td>匹配非方括号的中任意字符。</td>\n<td>./test[^ABC].js</td>\n<td>./testD.js</td>\n<td>./testA.js</td>\n</tr>\n<tr>\n<td> [!abc]</td>\n<td>同[^abc]</td>\n<td>./test[!ABC].js</td>\n<td>./testD.js</td>\n<td>./testA.js</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p><strong>注意</strong></p>\n<p>不支持使用<code>**</code>来查找任意层级目录中的文件。</p>\n</blockquote>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<p>如果是遵循<a href=\"../get_started/#Concept\">hiproxy的理念</a>的存放配置文件（包括配置文件的文件名），当hiproxy的启动时，能够自动查找项目的配置文件，不需要手动指定配置文件。</p>\n<p>如果没有遵循，把配置文件存放在其他路径或者不是使用默认的文件名称（hosts文件默认文件名称为<code>hosts</code>，rewrite文件默认的文件名称为<code>rewrite</code>），需要在启动的时候，手动指定配置文件名称。</p>\n<h2 id=\"指定配置文件\"><a href=\"#指定配置文件\" class=\"headerlink\" title=\"指定配置文件\"></a>指定配置文件</h2><p>要指定配置文件名称，可以使用选项<code>-c, --hosts-file &lt;files&gt;</code>和<code>-r, --rewrite-file &lt;files&gt;</code>。</p>\n<p><code>-c, --hosts-file &lt;files&gt;</code>用来指定hosts的文件路径，多个文件使用<code>,</code>分隔。</p>\n<p><code>-r, --rewrite-file &lt;files&gt;</code>用来指定rewrite的文件路径，多个文件使用<code>,</code>分隔。</p>\n<p><code>&lt;files&gt;</code>也支持使用<strong>简单的通配符模式</strong>来指定多个文件，比如<code>--rewrite-file ./*/*.conf</code>。</p>\n<blockquote>\n<p><strong>注意</strong></p>\n<p>如果指定了对应的配置文件，hiproxy会查找指定的文件，不再查找默认的<code>hosts</code>或者<code>rewrite</code>，比如：</p>\n<ul>\n<li>指定了<code>-c ./*/hosts.conf</code>，则不再查找名称为<code>hosts</code>的文件。</li>\n<li>指定了<code>-r ./*/rewrite.conf</code>，则不再查找名称为<code>rewrite</code>的文件。</li>\n</ul>\n</blockquote>\n<h2 id=\"配置文件名称通配符\"><a href=\"#配置文件名称通配符\" class=\"headerlink\" title=\"配置文件名称通配符\"></a>配置文件名称通配符</h2><p>支持的通配符有：</p>\n<table>\n<thead>\n<tr>\n<th>通配符</th>\n<th>说明</th>\n<th>示例</th>\n<th>匹配</th>\n<th>不匹配</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td> *</td>\n<td>匹配一个或者多个字符</td>\n<td>./test-*.js</td>\n<td>./test-hello.js</td>\n<td>./test-.js</td>\n</tr>\n<tr>\n<td> ?</td>\n<td>匹配一个字符</td>\n<td>./test?.js</td>\n<td>./testA.js</td>\n<td>./testAB.js</td>\n</tr>\n<tr>\n<td> [abc]</td>\n<td>匹配方括号的中任意字符。</td>\n<td>./test[ABC].js</td>\n<td>./testA.js</td>\n<td>./testD.js</td>\n</tr>\n<tr>\n<td> [^abc]</td>\n<td>匹配非方括号的中任意字符。</td>\n<td>./test[^ABC].js</td>\n<td>./testD.js</td>\n<td>./testA.js</td>\n</tr>\n<tr>\n<td> [!abc]</td>\n<td>同[^abc]</td>\n<td>./test[!ABC].js</td>\n<td>./testD.js</td>\n<td>./testA.js</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p><strong>注意</strong></p>\n<p>不支持使用<code>**</code>来查找任意层级目录中的文件。</p>\n</blockquote>\n"},{"title":"Hosts","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 简介\n\n**Hosts** 可以看作一个增强版的系统`hosts`，其最大特性是可以**支持端口转发**。\n\n**注**：hiproxy同时支持项目`hosts`及[rewrite][rewrite]文件。`hosts`仅支持简单的域名转发，如果需要设置高级域名转发规则，请参考[rewrite][../rewrite/]。\n\n## 工作机制\n**hiproxy** 启动时，会读取并解析各项目根目录中的`hosts`文件，代理服务器接收到请求后，会根据`hosts`文件做相应文请求的转发。\n\n\n## 特性\n* 支持端口转发；\n* 使用项目`hosts`文件，不会有系统自带`hosts`的缓存问题；\n* 修改项目`hosts`文件后，不需要重启hiproxy，hiproxy会自动自动更新`hosts`规则。\n\n## 语法\n\n语法跟系统`hosts`语法基本一致，唯一区别是hiproxy的`hosts`支持**IP+端口**，语法如下:\n\n```\nIP[:端口] 域名1 域名2 域名3 ... 域名N\n```\n\n## 例子\n\n```bash\n# custom hosts with port :)\n\n127.0.0.1:8800 hiproxy.org blog.hiproxy.org\n127.0.0.1 hiproxy.org blog.hiproxy.org\n```\n","source":"zh-cn/configuration/hosts.md","raw":"title: Hosts\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 简介\n\n**Hosts** 可以看作一个增强版的系统`hosts`，其最大特性是可以**支持端口转发**。\n\n**注**：hiproxy同时支持项目`hosts`及[rewrite][rewrite]文件。`hosts`仅支持简单的域名转发，如果需要设置高级域名转发规则，请参考[rewrite][../rewrite/]。\n\n## 工作机制\n**hiproxy** 启动时，会读取并解析各项目根目录中的`hosts`文件，代理服务器接收到请求后，会根据`hosts`文件做相应文请求的转发。\n\n\n## 特性\n* 支持端口转发；\n* 使用项目`hosts`文件，不会有系统自带`hosts`的缓存问题；\n* 修改项目`hosts`文件后，不需要重启hiproxy，hiproxy会自动自动更新`hosts`规则。\n\n## 语法\n\n语法跟系统`hosts`语法基本一致，唯一区别是hiproxy的`hosts`支持**IP+端口**，语法如下:\n\n```\nIP[:端口] 域名1 域名2 域名3 ... 域名N\n```\n\n## 例子\n\n```bash\n# custom hosts with port :)\n\n127.0.0.1:8800 hiproxy.org blog.hiproxy.org\n127.0.0.1 hiproxy.org blog.hiproxy.org\n```\n","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"zh-cn/configuration/hosts.html","comments":1,"layout":"page","_id":"cj7nia0is000shy0fcpbv10dh","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><strong>Hosts</strong> 可以看作一个增强版的系统<code>hosts</code>，其最大特性是可以<strong>支持端口转发</strong>。</p>\n<p><strong>注</strong>：hiproxy同时支持项目<code>hosts</code>及[rewrite][rewrite]文件。<code>hosts</code>仅支持简单的域名转发，如果需要设置高级域名转发规则，请参考[rewrite][../rewrite/]。</p>\n<h2 id=\"工作机制\"><a href=\"#工作机制\" class=\"headerlink\" title=\"工作机制\"></a>工作机制</h2><p><strong>hiproxy</strong> 启动时，会读取并解析各项目根目录中的<code>hosts</code>文件，代理服务器接收到请求后，会根据<code>hosts</code>文件做相应文请求的转发。</p>\n<h2 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h2><ul>\n<li>支持端口转发；</li>\n<li>使用项目<code>hosts</code>文件，不会有系统自带<code>hosts</code>的缓存问题；</li>\n<li>修改项目<code>hosts</code>文件后，不需要重启hiproxy，hiproxy会自动自动更新<code>hosts</code>规则。</li>\n</ul>\n<h2 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h2><p>语法跟系统<code>hosts</code>语法基本一致，唯一区别是hiproxy的<code>hosts</code>支持<strong>IP+端口</strong>，语法如下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">IP[:端口] 域名1 域名2 域名3 ... 域名N</div></pre></td></tr></table></figure>\n<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># custom hosts with port :)</span></div><div class=\"line\"></div><div class=\"line\">127.0.0.1:8800 hiproxy.org blog.hiproxy.org</div><div class=\"line\">127.0.0.1 hiproxy.org blog.hiproxy.org</div></pre></td></tr></table></figure>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><strong>Hosts</strong> 可以看作一个增强版的系统<code>hosts</code>，其最大特性是可以<strong>支持端口转发</strong>。</p>\n<p><strong>注</strong>：hiproxy同时支持项目<code>hosts</code>及[rewrite][rewrite]文件。<code>hosts</code>仅支持简单的域名转发，如果需要设置高级域名转发规则，请参考[rewrite][../rewrite/]。</p>\n<h2 id=\"工作机制\"><a href=\"#工作机制\" class=\"headerlink\" title=\"工作机制\"></a>工作机制</h2><p><strong>hiproxy</strong> 启动时，会读取并解析各项目根目录中的<code>hosts</code>文件，代理服务器接收到请求后，会根据<code>hosts</code>文件做相应文请求的转发。</p>\n<h2 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h2><ul>\n<li>支持端口转发；</li>\n<li>使用项目<code>hosts</code>文件，不会有系统自带<code>hosts</code>的缓存问题；</li>\n<li>修改项目<code>hosts</code>文件后，不需要重启hiproxy，hiproxy会自动自动更新<code>hosts</code>规则。</li>\n</ul>\n<h2 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h2><p>语法跟系统<code>hosts</code>语法基本一致，唯一区别是hiproxy的<code>hosts</code>支持<strong>IP+端口</strong>，语法如下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">IP[:端口] 域名1 域名2 域名3 ... 域名N</div></pre></td></tr></table></figure>\n<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># custom hosts with port :)</span></div><div class=\"line\"></div><div class=\"line\">127.0.0.1:8800 hiproxy.org blog.hiproxy.org</div><div class=\"line\">127.0.0.1 hiproxy.org blog.hiproxy.org</div></pre></td></tr></table></figure>\n"},{"title":"简介","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 配置文件类型\n\nhiproxy可以使用hosts来做简单的请求代理，对于复杂的配置使用跟Nginx语法类似的rewrite规则配置。\n\n### hosts\n\n跟系统`hosts`语法一致，此外也支持端口号。hosts只能配置域名对应的ip和端口号，不支持详细的路由配置以及对请求响应做修改。更多详细信息请查看[hosts](../configuration/hosts.html)。\n\n### hosts配置示例\n\n```bash\n# comment\n127.0.0.1 example.com\n\n# ip + port\n127.0.0.1:8800 blog.example.com life.example.com\n```\n\n### rewrite\n\nrewrite规则配置文件，可以使用更复杂的配置、满足复杂的使用场景。可以对路由进行详细的配置以及对请求响应做修改。rewrite配置的语法，跟Nginx语法非常类似。更多详细信息请查看[rewrite](../configuration/rewrite.html)。\n\n### rewrite配置示例\n\n```bash\n# 全局变量\nset $port 8899;\nset $ip   127.0.0.1;\nset $online 210.0.0.0;\n\n# 域名配置\ndomain example.com {\n  location / {\n    proxy_pass http://$online/;\n  }\n\n  location /blog/ {\n    proxy_pass http://$ip:$port/blog/;\n    proxy_set_header from 'hiproxy';\n    set_header proxy 'hiproxy';\n  }\n}\n```\n\n## 配置文件位置\n\nhiproxy推荐把配置文件存放在具体的**项目根目录**（hosts文件名称为`hosts`，rewrite配置文件名称为`rewrite`），项目位于工作空间中，也就是类似如下结构：\n\n```bash\nworkspace\n  ├── app-1 # 项目1\n  │   ├── hosts   # hosts文件\n  │   ├── rewrite # rewrite文件\n  │   └── src     # 项目代码\n  │   └── ...     # 其他文件\n  │\n  ├── app-2 # 项目2\n  │   ├── hosts   # hosts文件\n  │   ├── rewrite # rewrite文件\n  │   └── src     # 项目代码\n  │   └── ...     # 其他文件\n  │\n  └── app-3 # 项目3\n      ├── hosts   # hosts文件\n      ├── rewrite # rewrite文件\n      └── src     # 项目代码\n      └── ...     # 其他文件\n```\n\n这样的好处在于，这些配置文件可以提交代码仓库，团队成员共享，节约维护成本。hiproxy也能自动查找这些文件。\n\n## 配置文件查找\n\n如果是遵循上面的规则存放配置文件（包括配置文件的文件名），当hiproxy的工作空间为`workspace`目录时，能够自动查找到上面三个项目的配置文件，不需要手动指定配置文件。\n\n如果没有遵循上面的规则，把配置文件存放在其他路径或者不是使用默认的文件名称（hosts文件默认文件名称为`hosts`，rewrite文件默认的文件名称为`rewrite`），需要在启动的时候，手动指定配置文件名称。\n\n详情请查看[配置文件查找](./find_conf.html)。\n\n## 配置文件更新\n\nhiproxy支持两种代理方式：[PAC(Proxy-Auto-Config)](https://en.wikipedia.org/wiki/Proxy_auto-config)和普通代理。\n\n默认情况下使用普通代理，启动时添加选项`--pac-proxy`会使用PAC代理。\n\n不同的代理方式，对于配置文件更新的处理也不一样。\n\n如果使用普通代理，配置文件更新之后，不用重启浏览器，直接更刷新浏览器即可生效。\n\n但是如果使用PAC代理，如果新增了域名，目前`.pac`文件并不会立刻更新，需要手动刷新浏览器的代理文件。可以访问<chrome://net-internals/#proxy>然后点击`Re-apply settings`。\n\n## 代理规则合并\n\n所有配置文件中的规则最终都会合并到一个大的规则树中。也就是说配置了代理之后，在处理请求的时候，所有配置文件中的规则都是平等的。**不同域名中的规则互不影响。相同域名中的规则合并，如果有重复的路由，后加载的配置文件中的路由覆盖之前加载的配置文件内容**。\n\n比如，有两个配置文件`workspace/blog/rewrite`和`workspace/docs/rewrite`，文件内容如下:\n\n```bash\n# workspace/blog/rewrite\n\ndomain hiproxy.org {\n  location /blog/ {\n    proxy_pass http://127.0.0.1:8000/;\n  }\n}\n\ndomain blog.hiproxy.org {\n  location / {\n    proxy_pass http://127.0.0.1:8000/;\n  }\n}\n```\n\n```bash\n# workspace/docs/rewrite\n\ndomain hiproxy.org {\n  location /docs/ {\n    proxy_pass http://127.0.0.1:9000/;\n  }\n}\n```\n\n合并之后的规则为：\n\n```bash\n# 合并之后的规则\n\ndomain hiproxy.org {\n  location /blog/ {\n    proxy_pass http://127.0.0.1:8000/;\n  }\n}\n\ndomain hiproxy.org {\n  location /docs/ {\n    proxy_pass http://127.0.0.1:9000/;\n  }\n}\n\ndomain blog.hiproxy.org {\n  location / {\n    proxy_pass http://127.0.0.1:8000/;\n  }\n}\n```\n\n","source":"zh-cn/configuration/index.md","raw":"title: 简介\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 配置文件类型\n\nhiproxy可以使用hosts来做简单的请求代理，对于复杂的配置使用跟Nginx语法类似的rewrite规则配置。\n\n### hosts\n\n跟系统`hosts`语法一致，此外也支持端口号。hosts只能配置域名对应的ip和端口号，不支持详细的路由配置以及对请求响应做修改。更多详细信息请查看[hosts](../configuration/hosts.html)。\n\n### hosts配置示例\n\n```bash\n# comment\n127.0.0.1 example.com\n\n# ip + port\n127.0.0.1:8800 blog.example.com life.example.com\n```\n\n### rewrite\n\nrewrite规则配置文件，可以使用更复杂的配置、满足复杂的使用场景。可以对路由进行详细的配置以及对请求响应做修改。rewrite配置的语法，跟Nginx语法非常类似。更多详细信息请查看[rewrite](../configuration/rewrite.html)。\n\n### rewrite配置示例\n\n```bash\n# 全局变量\nset $port 8899;\nset $ip   127.0.0.1;\nset $online 210.0.0.0;\n\n# 域名配置\ndomain example.com {\n  location / {\n    proxy_pass http://$online/;\n  }\n\n  location /blog/ {\n    proxy_pass http://$ip:$port/blog/;\n    proxy_set_header from 'hiproxy';\n    set_header proxy 'hiproxy';\n  }\n}\n```\n\n## 配置文件位置\n\nhiproxy推荐把配置文件存放在具体的**项目根目录**（hosts文件名称为`hosts`，rewrite配置文件名称为`rewrite`），项目位于工作空间中，也就是类似如下结构：\n\n```bash\nworkspace\n  ├── app-1 # 项目1\n  │   ├── hosts   # hosts文件\n  │   ├── rewrite # rewrite文件\n  │   └── src     # 项目代码\n  │   └── ...     # 其他文件\n  │\n  ├── app-2 # 项目2\n  │   ├── hosts   # hosts文件\n  │   ├── rewrite # rewrite文件\n  │   └── src     # 项目代码\n  │   └── ...     # 其他文件\n  │\n  └── app-3 # 项目3\n      ├── hosts   # hosts文件\n      ├── rewrite # rewrite文件\n      └── src     # 项目代码\n      └── ...     # 其他文件\n```\n\n这样的好处在于，这些配置文件可以提交代码仓库，团队成员共享，节约维护成本。hiproxy也能自动查找这些文件。\n\n## 配置文件查找\n\n如果是遵循上面的规则存放配置文件（包括配置文件的文件名），当hiproxy的工作空间为`workspace`目录时，能够自动查找到上面三个项目的配置文件，不需要手动指定配置文件。\n\n如果没有遵循上面的规则，把配置文件存放在其他路径或者不是使用默认的文件名称（hosts文件默认文件名称为`hosts`，rewrite文件默认的文件名称为`rewrite`），需要在启动的时候，手动指定配置文件名称。\n\n详情请查看[配置文件查找](./find_conf.html)。\n\n## 配置文件更新\n\nhiproxy支持两种代理方式：[PAC(Proxy-Auto-Config)](https://en.wikipedia.org/wiki/Proxy_auto-config)和普通代理。\n\n默认情况下使用普通代理，启动时添加选项`--pac-proxy`会使用PAC代理。\n\n不同的代理方式，对于配置文件更新的处理也不一样。\n\n如果使用普通代理，配置文件更新之后，不用重启浏览器，直接更刷新浏览器即可生效。\n\n但是如果使用PAC代理，如果新增了域名，目前`.pac`文件并不会立刻更新，需要手动刷新浏览器的代理文件。可以访问<chrome://net-internals/#proxy>然后点击`Re-apply settings`。\n\n## 代理规则合并\n\n所有配置文件中的规则最终都会合并到一个大的规则树中。也就是说配置了代理之后，在处理请求的时候，所有配置文件中的规则都是平等的。**不同域名中的规则互不影响。相同域名中的规则合并，如果有重复的路由，后加载的配置文件中的路由覆盖之前加载的配置文件内容**。\n\n比如，有两个配置文件`workspace/blog/rewrite`和`workspace/docs/rewrite`，文件内容如下:\n\n```bash\n# workspace/blog/rewrite\n\ndomain hiproxy.org {\n  location /blog/ {\n    proxy_pass http://127.0.0.1:8000/;\n  }\n}\n\ndomain blog.hiproxy.org {\n  location / {\n    proxy_pass http://127.0.0.1:8000/;\n  }\n}\n```\n\n```bash\n# workspace/docs/rewrite\n\ndomain hiproxy.org {\n  location /docs/ {\n    proxy_pass http://127.0.0.1:9000/;\n  }\n}\n```\n\n合并之后的规则为：\n\n```bash\n# 合并之后的规则\n\ndomain hiproxy.org {\n  location /blog/ {\n    proxy_pass http://127.0.0.1:8000/;\n  }\n}\n\ndomain hiproxy.org {\n  location /docs/ {\n    proxy_pass http://127.0.0.1:9000/;\n  }\n}\n\ndomain blog.hiproxy.org {\n  location / {\n    proxy_pass http://127.0.0.1:8000/;\n  }\n}\n```\n\n","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"zh-cn/configuration/index.html","comments":1,"layout":"page","_id":"cj7nia0iv000thy0f5xs1r4h6","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"配置文件类型\"><a href=\"#配置文件类型\" class=\"headerlink\" title=\"配置文件类型\"></a>配置文件类型</h2><p>hiproxy可以使用hosts来做简单的请求代理，对于复杂的配置使用跟Nginx语法类似的rewrite规则配置。</p>\n<h3 id=\"hosts\"><a href=\"#hosts\" class=\"headerlink\" title=\"hosts\"></a>hosts</h3><p>跟系统<code>hosts</code>语法一致，此外也支持端口号。hosts只能配置域名对应的ip和端口号，不支持详细的路由配置以及对请求响应做修改。更多详细信息请查看<a href=\"../configuration/hosts.html\">hosts</a>。</p>\n<h3 id=\"hosts配置示例\"><a href=\"#hosts配置示例\" class=\"headerlink\" title=\"hosts配置示例\"></a>hosts配置示例</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># comment</span></div><div class=\"line\">127.0.0.1 example.com</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># ip + port</span></div><div class=\"line\">127.0.0.1:8800 blog.example.com life.example.com</div></pre></td></tr></table></figure>\n<h3 id=\"rewrite\"><a href=\"#rewrite\" class=\"headerlink\" title=\"rewrite\"></a>rewrite</h3><p>rewrite规则配置文件，可以使用更复杂的配置、满足复杂的使用场景。可以对路由进行详细的配置以及对请求响应做修改。rewrite配置的语法，跟Nginx语法非常类似。更多详细信息请查看<a href=\"../configuration/rewrite.html\">rewrite</a>。</p>\n<h3 id=\"rewrite配置示例\"><a href=\"#rewrite配置示例\" class=\"headerlink\" title=\"rewrite配置示例\"></a>rewrite配置示例</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 全局变量</span></div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$port</span> 8899;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ip</span>   127.0.0.1;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$online</span> 210.0.0.0;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 域名配置</span></div><div class=\"line\">domain example.com &#123;</div><div class=\"line\">  location / &#123;</div><div class=\"line\">    proxy_pass http://<span class=\"variable\">$online</span>/;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  location /blog/ &#123;</div><div class=\"line\">    proxy_pass http://<span class=\"variable\">$ip</span>:<span class=\"variable\">$port</span>/blog/;</div><div class=\"line\">    proxy_set_header from <span class=\"string\">'hiproxy'</span>;</div><div class=\"line\">    set_header proxy <span class=\"string\">'hiproxy'</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"配置文件位置\"><a href=\"#配置文件位置\" class=\"headerlink\" title=\"配置文件位置\"></a>配置文件位置</h2><p>hiproxy推荐把配置文件存放在具体的<strong>项目根目录</strong>（hosts文件名称为<code>hosts</code>，rewrite配置文件名称为<code>rewrite</code>），项目位于工作空间中，也就是类似如下结构：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">workspace</div><div class=\"line\">  ├── app-1 <span class=\"comment\"># 项目1</span></div><div class=\"line\">  │   ├── hosts   <span class=\"comment\"># hosts文件</span></div><div class=\"line\">  │   ├── rewrite <span class=\"comment\"># rewrite文件</span></div><div class=\"line\">  │   └── src     <span class=\"comment\"># 项目代码</span></div><div class=\"line\">  │   └── ...     <span class=\"comment\"># 其他文件</span></div><div class=\"line\">  │</div><div class=\"line\">  ├── app-2 <span class=\"comment\"># 项目2</span></div><div class=\"line\">  │   ├── hosts   <span class=\"comment\"># hosts文件</span></div><div class=\"line\">  │   ├── rewrite <span class=\"comment\"># rewrite文件</span></div><div class=\"line\">  │   └── src     <span class=\"comment\"># 项目代码</span></div><div class=\"line\">  │   └── ...     <span class=\"comment\"># 其他文件</span></div><div class=\"line\">  │</div><div class=\"line\">  └── app-3 <span class=\"comment\"># 项目3</span></div><div class=\"line\">      ├── hosts   <span class=\"comment\"># hosts文件</span></div><div class=\"line\">      ├── rewrite <span class=\"comment\"># rewrite文件</span></div><div class=\"line\">      └── src     <span class=\"comment\"># 项目代码</span></div><div class=\"line\">      └── ...     <span class=\"comment\"># 其他文件</span></div></pre></td></tr></table></figure>\n<p>这样的好处在于，这些配置文件可以提交代码仓库，团队成员共享，节约维护成本。hiproxy也能自动查找这些文件。</p>\n<h2 id=\"配置文件查找\"><a href=\"#配置文件查找\" class=\"headerlink\" title=\"配置文件查找\"></a>配置文件查找</h2><p>如果是遵循上面的规则存放配置文件（包括配置文件的文件名），当hiproxy的工作空间为<code>workspace</code>目录时，能够自动查找到上面三个项目的配置文件，不需要手动指定配置文件。</p>\n<p>如果没有遵循上面的规则，把配置文件存放在其他路径或者不是使用默认的文件名称（hosts文件默认文件名称为<code>hosts</code>，rewrite文件默认的文件名称为<code>rewrite</code>），需要在启动的时候，手动指定配置文件名称。</p>\n<p>详情请查看<a href=\"./find_conf.html\">配置文件查找</a>。</p>\n<h2 id=\"配置文件更新\"><a href=\"#配置文件更新\" class=\"headerlink\" title=\"配置文件更新\"></a>配置文件更新</h2><p>hiproxy支持两种代理方式：<a href=\"https://en.wikipedia.org/wiki/Proxy_auto-config\" target=\"_blank\" rel=\"external\">PAC(Proxy-Auto-Config)</a>和普通代理。</p>\n<p>默认情况下使用普通代理，启动时添加选项<code>--pac-proxy</code>会使用PAC代理。</p>\n<p>不同的代理方式，对于配置文件更新的处理也不一样。</p>\n<p>如果使用普通代理，配置文件更新之后，不用重启浏览器，直接更刷新浏览器即可生效。</p>\n<p>但是如果使用PAC代理，如果新增了域名，目前<code>.pac</code>文件并不会立刻更新，需要手动刷新浏览器的代理文件。可以访问<a href=\"chrome://net-internals/#proxy\" target=\"_blank\" rel=\"external\">chrome://net-internals/#proxy</a>然后点击<code>Re-apply settings</code>。</p>\n<h2 id=\"代理规则合并\"><a href=\"#代理规则合并\" class=\"headerlink\" title=\"代理规则合并\"></a>代理规则合并</h2><p>所有配置文件中的规则最终都会合并到一个大的规则树中。也就是说配置了代理之后，在处理请求的时候，所有配置文件中的规则都是平等的。<strong>不同域名中的规则互不影响。相同域名中的规则合并，如果有重复的路由，后加载的配置文件中的路由覆盖之前加载的配置文件内容</strong>。</p>\n<p>比如，有两个配置文件<code>workspace/blog/rewrite</code>和<code>workspace/docs/rewrite</code>，文件内容如下:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># workspace/blog/rewrite</span></div><div class=\"line\"></div><div class=\"line\">domain hiproxy.org &#123;</div><div class=\"line\">  location /blog/ &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:8000/;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">domain blog.hiproxy.org &#123;</div><div class=\"line\">  location / &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:8000/;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># workspace/docs/rewrite</span></div><div class=\"line\"></div><div class=\"line\">domain hiproxy.org &#123;</div><div class=\"line\">  location /docs/ &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:9000/;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>合并之后的规则为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 合并之后的规则</span></div><div class=\"line\"></div><div class=\"line\">domain hiproxy.org &#123;</div><div class=\"line\">  location /blog/ &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:8000/;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">domain hiproxy.org &#123;</div><div class=\"line\">  location /docs/ &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:9000/;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">domain blog.hiproxy.org &#123;</div><div class=\"line\">  location / &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:8000/;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"配置文件类型\"><a href=\"#配置文件类型\" class=\"headerlink\" title=\"配置文件类型\"></a>配置文件类型</h2><p>hiproxy可以使用hosts来做简单的请求代理，对于复杂的配置使用跟Nginx语法类似的rewrite规则配置。</p>\n<h3 id=\"hosts\"><a href=\"#hosts\" class=\"headerlink\" title=\"hosts\"></a>hosts</h3><p>跟系统<code>hosts</code>语法一致，此外也支持端口号。hosts只能配置域名对应的ip和端口号，不支持详细的路由配置以及对请求响应做修改。更多详细信息请查看<a href=\"../configuration/hosts.html\">hosts</a>。</p>\n<h3 id=\"hosts配置示例\"><a href=\"#hosts配置示例\" class=\"headerlink\" title=\"hosts配置示例\"></a>hosts配置示例</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># comment</span></div><div class=\"line\">127.0.0.1 example.com</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># ip + port</span></div><div class=\"line\">127.0.0.1:8800 blog.example.com life.example.com</div></pre></td></tr></table></figure>\n<h3 id=\"rewrite\"><a href=\"#rewrite\" class=\"headerlink\" title=\"rewrite\"></a>rewrite</h3><p>rewrite规则配置文件，可以使用更复杂的配置、满足复杂的使用场景。可以对路由进行详细的配置以及对请求响应做修改。rewrite配置的语法，跟Nginx语法非常类似。更多详细信息请查看<a href=\"../configuration/rewrite.html\">rewrite</a>。</p>\n<h3 id=\"rewrite配置示例\"><a href=\"#rewrite配置示例\" class=\"headerlink\" title=\"rewrite配置示例\"></a>rewrite配置示例</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 全局变量</span></div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$port</span> 8899;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ip</span>   127.0.0.1;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$online</span> 210.0.0.0;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 域名配置</span></div><div class=\"line\">domain example.com &#123;</div><div class=\"line\">  location / &#123;</div><div class=\"line\">    proxy_pass http://<span class=\"variable\">$online</span>/;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  location /blog/ &#123;</div><div class=\"line\">    proxy_pass http://<span class=\"variable\">$ip</span>:<span class=\"variable\">$port</span>/blog/;</div><div class=\"line\">    proxy_set_header from <span class=\"string\">'hiproxy'</span>;</div><div class=\"line\">    set_header proxy <span class=\"string\">'hiproxy'</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"配置文件位置\"><a href=\"#配置文件位置\" class=\"headerlink\" title=\"配置文件位置\"></a>配置文件位置</h2><p>hiproxy推荐把配置文件存放在具体的<strong>项目根目录</strong>（hosts文件名称为<code>hosts</code>，rewrite配置文件名称为<code>rewrite</code>），项目位于工作空间中，也就是类似如下结构：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">workspace</div><div class=\"line\">  ├── app-1 <span class=\"comment\"># 项目1</span></div><div class=\"line\">  │   ├── hosts   <span class=\"comment\"># hosts文件</span></div><div class=\"line\">  │   ├── rewrite <span class=\"comment\"># rewrite文件</span></div><div class=\"line\">  │   └── src     <span class=\"comment\"># 项目代码</span></div><div class=\"line\">  │   └── ...     <span class=\"comment\"># 其他文件</span></div><div class=\"line\">  │</div><div class=\"line\">  ├── app-2 <span class=\"comment\"># 项目2</span></div><div class=\"line\">  │   ├── hosts   <span class=\"comment\"># hosts文件</span></div><div class=\"line\">  │   ├── rewrite <span class=\"comment\"># rewrite文件</span></div><div class=\"line\">  │   └── src     <span class=\"comment\"># 项目代码</span></div><div class=\"line\">  │   └── ...     <span class=\"comment\"># 其他文件</span></div><div class=\"line\">  │</div><div class=\"line\">  └── app-3 <span class=\"comment\"># 项目3</span></div><div class=\"line\">      ├── hosts   <span class=\"comment\"># hosts文件</span></div><div class=\"line\">      ├── rewrite <span class=\"comment\"># rewrite文件</span></div><div class=\"line\">      └── src     <span class=\"comment\"># 项目代码</span></div><div class=\"line\">      └── ...     <span class=\"comment\"># 其他文件</span></div></pre></td></tr></table></figure>\n<p>这样的好处在于，这些配置文件可以提交代码仓库，团队成员共享，节约维护成本。hiproxy也能自动查找这些文件。</p>\n<h2 id=\"配置文件查找\"><a href=\"#配置文件查找\" class=\"headerlink\" title=\"配置文件查找\"></a>配置文件查找</h2><p>如果是遵循上面的规则存放配置文件（包括配置文件的文件名），当hiproxy的工作空间为<code>workspace</code>目录时，能够自动查找到上面三个项目的配置文件，不需要手动指定配置文件。</p>\n<p>如果没有遵循上面的规则，把配置文件存放在其他路径或者不是使用默认的文件名称（hosts文件默认文件名称为<code>hosts</code>，rewrite文件默认的文件名称为<code>rewrite</code>），需要在启动的时候，手动指定配置文件名称。</p>\n<p>详情请查看<a href=\"./find_conf.html\">配置文件查找</a>。</p>\n<h2 id=\"配置文件更新\"><a href=\"#配置文件更新\" class=\"headerlink\" title=\"配置文件更新\"></a>配置文件更新</h2><p>hiproxy支持两种代理方式：<a href=\"https://en.wikipedia.org/wiki/Proxy_auto-config\" target=\"_blank\" rel=\"external\">PAC(Proxy-Auto-Config)</a>和普通代理。</p>\n<p>默认情况下使用普通代理，启动时添加选项<code>--pac-proxy</code>会使用PAC代理。</p>\n<p>不同的代理方式，对于配置文件更新的处理也不一样。</p>\n<p>如果使用普通代理，配置文件更新之后，不用重启浏览器，直接更刷新浏览器即可生效。</p>\n<p>但是如果使用PAC代理，如果新增了域名，目前<code>.pac</code>文件并不会立刻更新，需要手动刷新浏览器的代理文件。可以访问<a href=\"chrome://net-internals/#proxy\" target=\"_blank\" rel=\"external\">chrome://net-internals/#proxy</a>然后点击<code>Re-apply settings</code>。</p>\n<h2 id=\"代理规则合并\"><a href=\"#代理规则合并\" class=\"headerlink\" title=\"代理规则合并\"></a>代理规则合并</h2><p>所有配置文件中的规则最终都会合并到一个大的规则树中。也就是说配置了代理之后，在处理请求的时候，所有配置文件中的规则都是平等的。<strong>不同域名中的规则互不影响。相同域名中的规则合并，如果有重复的路由，后加载的配置文件中的路由覆盖之前加载的配置文件内容</strong>。</p>\n<p>比如，有两个配置文件<code>workspace/blog/rewrite</code>和<code>workspace/docs/rewrite</code>，文件内容如下:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># workspace/blog/rewrite</span></div><div class=\"line\"></div><div class=\"line\">domain hiproxy.org &#123;</div><div class=\"line\">  location /blog/ &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:8000/;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">domain blog.hiproxy.org &#123;</div><div class=\"line\">  location / &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:8000/;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># workspace/docs/rewrite</span></div><div class=\"line\"></div><div class=\"line\">domain hiproxy.org &#123;</div><div class=\"line\">  location /docs/ &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:9000/;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>合并之后的规则为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 合并之后的规则</span></div><div class=\"line\"></div><div class=\"line\">domain hiproxy.org &#123;</div><div class=\"line\">  location /blog/ &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:8000/;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">domain hiproxy.org &#123;</div><div class=\"line\">  location /docs/ &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:9000/;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">domain blog.hiproxy.org &#123;</div><div class=\"line\">  location / &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:8000/;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"title":"Rewrite","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n\n","source":"zh-cn/configuration/rewrite.md","raw":"title: Rewrite\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n\n","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"zh-cn/configuration/rewrite.html","comments":1,"layout":"page","_id":"cj7nia0ix000uhy0f1fuz137b","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n"},{"title":"获取／安装hiproxy根证书","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\nhiporxy会自己生成一个根证书，扮演CA的角色（Hiproxy Custom CA）。hiproxy在代理https请求的时候，会自动生成证书并使用hiproxy的根证书签名。\n\n由于系统是不信任hiproxy根证书的，所以需要我们自己手动安装信任hiproxy的根证书。\n\n## 下载证书\n\n启动hiproxy服务之后（假设端口号是`5525`)，可以访问<http://127.0.0.1:5525/ssl-certificate>获取**Hiproxy Custom CA**的根证书。\n\n这个地址，可以在<http://127.0.0.1:5525/>中找到，如下图：\n\n<img src=\"../../images/hiproxy_start_page.png\" width=\"500\" />\n\n## 安装证书\n\n下面将分别介绍OSX、iOS、Windows和Android中如何安装根证书。\n\n### OSX系统\n\n1. 下载完成根证书之后，双击`Hiproxy_Custom_CA_Certificate.pem`导入证书到钥匙串。\n\n2. 在弹出的对话框中输入用户密码。\n\n3. 此时证书是不受信任状态，双击刚才导入的证书。\n\n<img src=\"../../images/import_root_cert.png\" width=\"680\" />\n\n4. 在**信任** > **使用此证书时**下面选择**始终信任**。\n\n<img src=\"../../images/trust_root_cert.png\" width=\"680\" />\n\n5. 关闭对话框，此时证书已经是被信任状态。\n\n<img src=\"../../images/root_cert_trusted.png\" width=\"680\" />\n\n\n### iOS系统\n\n1. 下载完成根证书之后发送到手机并打开。\n\n2. 点击右上角的**安装**。\n\n<img src=\"../../images/ios_install_cert_1.jpg\" width=\"375\" />\n\n3. 再次点击右上角的**安装**。\n\n<img src=\"../../images/ios_install_cert_2.jpg\" width=\"375\" />\n\n4. 完成安装，点击右上角**完成**退出。\n\n<img src=\"../../images/ios_install_cert_3.jpg\" width=\"375\" />\n\n5. 如果**iOS系统版本 >= 10.3**，需要在**设置** > **通用** > **关于本机**中点击**证书信任设置**。\n\n<img src=\"../../images/ios_install_cert_4.jpg\" width=\"375\" />\n\n6. 打开开关**Hiproxy Custom CA**。\n\n<img src=\"../../images/ios_install_cert_5.jpg\" width=\"375\" />\n\n### Windows\n\n1. 下载完成根证书之后，双击`Hiproxy_Custom_CA_Certificate.crt`安装证书。\n\n2. 在弹出的对话框中点击**安装证书**。\n\n<img src=\"../../images/windows_install_cert.png\" width=\"420\" />\n\n3. 点击**下一步**。\n\n<img src=\"../../images/windows_step_1.png\" width=\"420\" />\n\n4. 选择**将所有的证书放入下列存储(P)**，点击**浏览(R)**，然后选择**受信任的根证书颁发机构**，点击**确定**。\n\n<img src=\"../../images/windows_step_2.png\" width=\"420\" />\n\n5. 点击**下一步**、**完成**。根据页面提示完成根证书安装。。\n\n<img src=\"../../images/windows_install_finish.png\" width=\"420\" />\n\n\n### Android\n\n1. 下载完成根证书之后发送到手机。\n\n2. 在**设置** > **安全**中点击**从SD卡安装**。\n\n<img src=\"../../images/android_install_cert_1.png\" width=\"375\" />\n\n3. 输入解锁密码，然后输入证书名称，比如**HiproxyCustomCA**，点击**确定**。\n\n<img src=\"../../images/android_install_cert_2.png\" width=\"375\" />\n\n4. 在**设置** > **安全** > **受信任的证书** > **用户**中，如果能看到hiproxy的根证书，表示安装成功。\n\n<img src=\"../../images/android_install_cert_3.png\" width=\"375\" />\n","source":"zh-cn/configuration/ssl_certificate.md","raw":"title: 获取／安装hiproxy根证书\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\nhiporxy会自己生成一个根证书，扮演CA的角色（Hiproxy Custom CA）。hiproxy在代理https请求的时候，会自动生成证书并使用hiproxy的根证书签名。\n\n由于系统是不信任hiproxy根证书的，所以需要我们自己手动安装信任hiproxy的根证书。\n\n## 下载证书\n\n启动hiproxy服务之后（假设端口号是`5525`)，可以访问<http://127.0.0.1:5525/ssl-certificate>获取**Hiproxy Custom CA**的根证书。\n\n这个地址，可以在<http://127.0.0.1:5525/>中找到，如下图：\n\n<img src=\"../../images/hiproxy_start_page.png\" width=\"500\" />\n\n## 安装证书\n\n下面将分别介绍OSX、iOS、Windows和Android中如何安装根证书。\n\n### OSX系统\n\n1. 下载完成根证书之后，双击`Hiproxy_Custom_CA_Certificate.pem`导入证书到钥匙串。\n\n2. 在弹出的对话框中输入用户密码。\n\n3. 此时证书是不受信任状态，双击刚才导入的证书。\n\n<img src=\"../../images/import_root_cert.png\" width=\"680\" />\n\n4. 在**信任** > **使用此证书时**下面选择**始终信任**。\n\n<img src=\"../../images/trust_root_cert.png\" width=\"680\" />\n\n5. 关闭对话框，此时证书已经是被信任状态。\n\n<img src=\"../../images/root_cert_trusted.png\" width=\"680\" />\n\n\n### iOS系统\n\n1. 下载完成根证书之后发送到手机并打开。\n\n2. 点击右上角的**安装**。\n\n<img src=\"../../images/ios_install_cert_1.jpg\" width=\"375\" />\n\n3. 再次点击右上角的**安装**。\n\n<img src=\"../../images/ios_install_cert_2.jpg\" width=\"375\" />\n\n4. 完成安装，点击右上角**完成**退出。\n\n<img src=\"../../images/ios_install_cert_3.jpg\" width=\"375\" />\n\n5. 如果**iOS系统版本 >= 10.3**，需要在**设置** > **通用** > **关于本机**中点击**证书信任设置**。\n\n<img src=\"../../images/ios_install_cert_4.jpg\" width=\"375\" />\n\n6. 打开开关**Hiproxy Custom CA**。\n\n<img src=\"../../images/ios_install_cert_5.jpg\" width=\"375\" />\n\n### Windows\n\n1. 下载完成根证书之后，双击`Hiproxy_Custom_CA_Certificate.crt`安装证书。\n\n2. 在弹出的对话框中点击**安装证书**。\n\n<img src=\"../../images/windows_install_cert.png\" width=\"420\" />\n\n3. 点击**下一步**。\n\n<img src=\"../../images/windows_step_1.png\" width=\"420\" />\n\n4. 选择**将所有的证书放入下列存储(P)**，点击**浏览(R)**，然后选择**受信任的根证书颁发机构**，点击**确定**。\n\n<img src=\"../../images/windows_step_2.png\" width=\"420\" />\n\n5. 点击**下一步**、**完成**。根据页面提示完成根证书安装。。\n\n<img src=\"../../images/windows_install_finish.png\" width=\"420\" />\n\n\n### Android\n\n1. 下载完成根证书之后发送到手机。\n\n2. 在**设置** > **安全**中点击**从SD卡安装**。\n\n<img src=\"../../images/android_install_cert_1.png\" width=\"375\" />\n\n3. 输入解锁密码，然后输入证书名称，比如**HiproxyCustomCA**，点击**确定**。\n\n<img src=\"../../images/android_install_cert_2.png\" width=\"375\" />\n\n4. 在**设置** > **安全** > **受信任的证书** > **用户**中，如果能看到hiproxy的根证书，表示安装成功。\n\n<img src=\"../../images/android_install_cert_3.png\" width=\"375\" />\n","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"zh-cn/configuration/ssl_certificate.html","comments":1,"layout":"page","_id":"cj7nia0j2000vhy0fp85fzdij","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<p>hiporxy会自己生成一个根证书，扮演CA的角色（Hiproxy Custom CA）。hiproxy在代理https请求的时候，会自动生成证书并使用hiproxy的根证书签名。</p>\n<p>由于系统是不信任hiproxy根证书的，所以需要我们自己手动安装信任hiproxy的根证书。</p>\n<h2 id=\"下载证书\"><a href=\"#下载证书\" class=\"headerlink\" title=\"下载证书\"></a>下载证书</h2><p>启动hiproxy服务之后（假设端口号是<code>5525</code>)，可以访问<a href=\"http://127.0.0.1:5525/ssl-certificate\" target=\"_blank\" rel=\"external\">http://127.0.0.1:5525/ssl-certificate</a>获取<strong>Hiproxy Custom CA</strong>的根证书。</p>\n<p>这个地址，可以在<a href=\"http://127.0.0.1:5525/\" target=\"_blank\" rel=\"external\">http://127.0.0.1:5525/</a>中找到，如下图：</p>\n<p><img src=\"../../images/hiproxy_start_page.png\" width=\"500\"></p>\n<h2 id=\"安装证书\"><a href=\"#安装证书\" class=\"headerlink\" title=\"安装证书\"></a>安装证书</h2><p>下面将分别介绍OSX、iOS、Windows和Android中如何安装根证书。</p>\n<h3 id=\"OSX系统\"><a href=\"#OSX系统\" class=\"headerlink\" title=\"OSX系统\"></a>OSX系统</h3><ol>\n<li><p>下载完成根证书之后，双击<code>Hiproxy_Custom_CA_Certificate.pem</code>导入证书到钥匙串。</p>\n</li>\n<li><p>在弹出的对话框中输入用户密码。</p>\n</li>\n<li><p>此时证书是不受信任状态，双击刚才导入的证书。</p>\n</li>\n</ol>\n<p><img src=\"../../images/import_root_cert.png\" width=\"680\"></p>\n<ol>\n<li>在<strong>信任</strong> &gt; <strong>使用此证书时</strong>下面选择<strong>始终信任</strong>。</li>\n</ol>\n<p><img src=\"../../images/trust_root_cert.png\" width=\"680\"></p>\n<ol>\n<li>关闭对话框，此时证书已经是被信任状态。</li>\n</ol>\n<p><img src=\"../../images/root_cert_trusted.png\" width=\"680\"></p>\n<h3 id=\"iOS系统\"><a href=\"#iOS系统\" class=\"headerlink\" title=\"iOS系统\"></a>iOS系统</h3><ol>\n<li><p>下载完成根证书之后发送到手机并打开。</p>\n</li>\n<li><p>点击右上角的<strong>安装</strong>。</p>\n</li>\n</ol>\n<p><img src=\"../../images/ios_install_cert_1.jpg\" width=\"375\"></p>\n<ol>\n<li>再次点击右上角的<strong>安装</strong>。</li>\n</ol>\n<p><img src=\"../../images/ios_install_cert_2.jpg\" width=\"375\"></p>\n<ol>\n<li>完成安装，点击右上角<strong>完成</strong>退出。</li>\n</ol>\n<p><img src=\"../../images/ios_install_cert_3.jpg\" width=\"375\"></p>\n<ol>\n<li>如果<strong>iOS系统版本 &gt;= 10.3</strong>，需要在<strong>设置</strong> &gt; <strong>通用</strong> &gt; <strong>关于本机</strong>中点击<strong>证书信任设置</strong>。</li>\n</ol>\n<p><img src=\"../../images/ios_install_cert_4.jpg\" width=\"375\"></p>\n<ol>\n<li>打开开关<strong>Hiproxy Custom CA</strong>。</li>\n</ol>\n<p><img src=\"../../images/ios_install_cert_5.jpg\" width=\"375\"></p>\n<h3 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h3><ol>\n<li><p>下载完成根证书之后，双击<code>Hiproxy_Custom_CA_Certificate.crt</code>安装证书。</p>\n</li>\n<li><p>在弹出的对话框中点击<strong>安装证书</strong>。</p>\n</li>\n</ol>\n<p><img src=\"../../images/windows_install_cert.png\" width=\"420\"></p>\n<ol>\n<li>点击<strong>下一步</strong>。</li>\n</ol>\n<p><img src=\"../../images/windows_step_1.png\" width=\"420\"></p>\n<ol>\n<li>选择<strong>将所有的证书放入下列存储(P)</strong>，点击<strong>浏览(R)</strong>，然后选择<strong>受信任的根证书颁发机构</strong>，点击<strong>确定</strong>。</li>\n</ol>\n<p><img src=\"../../images/windows_step_2.png\" width=\"420\"></p>\n<ol>\n<li>点击<strong>下一步</strong>、<strong>完成</strong>。根据页面提示完成根证书安装。。</li>\n</ol>\n<p><img src=\"../../images/windows_install_finish.png\" width=\"420\"></p>\n<h3 id=\"Android\"><a href=\"#Android\" class=\"headerlink\" title=\"Android\"></a>Android</h3><ol>\n<li><p>下载完成根证书之后发送到手机。</p>\n</li>\n<li><p>在<strong>设置</strong> &gt; <strong>安全</strong>中点击<strong>从SD卡安装</strong>。</p>\n</li>\n</ol>\n<p><img src=\"../../images/android_install_cert_1.png\" width=\"375\"></p>\n<ol>\n<li>输入解锁密码，然后输入证书名称，比如<strong>HiproxyCustomCA</strong>，点击<strong>确定</strong>。</li>\n</ol>\n<p><img src=\"../../images/android_install_cert_2.png\" width=\"375\"></p>\n<ol>\n<li>在<strong>设置</strong> &gt; <strong>安全</strong> &gt; <strong>受信任的证书</strong> &gt; <strong>用户</strong>中，如果能看到hiproxy的根证书，表示安装成功。</li>\n</ol>\n<p><img src=\"../../images/android_install_cert_3.png\" width=\"375\"></p>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<p>hiporxy会自己生成一个根证书，扮演CA的角色（Hiproxy Custom CA）。hiproxy在代理https请求的时候，会自动生成证书并使用hiproxy的根证书签名。</p>\n<p>由于系统是不信任hiproxy根证书的，所以需要我们自己手动安装信任hiproxy的根证书。</p>\n<h2 id=\"下载证书\"><a href=\"#下载证书\" class=\"headerlink\" title=\"下载证书\"></a>下载证书</h2><p>启动hiproxy服务之后（假设端口号是<code>5525</code>)，可以访问<a href=\"http://127.0.0.1:5525/ssl-certificate\" target=\"_blank\" rel=\"external\">http://127.0.0.1:5525/ssl-certificate</a>获取<strong>Hiproxy Custom CA</strong>的根证书。</p>\n<p>这个地址，可以在<a href=\"http://127.0.0.1:5525/\" target=\"_blank\" rel=\"external\">http://127.0.0.1:5525/</a>中找到，如下图：</p>\n<p><img src=\"../../images/hiproxy_start_page.png\" width=\"500\"></p>\n<h2 id=\"安装证书\"><a href=\"#安装证书\" class=\"headerlink\" title=\"安装证书\"></a>安装证书</h2><p>下面将分别介绍OSX、iOS、Windows和Android中如何安装根证书。</p>\n<h3 id=\"OSX系统\"><a href=\"#OSX系统\" class=\"headerlink\" title=\"OSX系统\"></a>OSX系统</h3><ol>\n<li><p>下载完成根证书之后，双击<code>Hiproxy_Custom_CA_Certificate.pem</code>导入证书到钥匙串。</p>\n</li>\n<li><p>在弹出的对话框中输入用户密码。</p>\n</li>\n<li><p>此时证书是不受信任状态，双击刚才导入的证书。</p>\n</li>\n</ol>\n<p><img src=\"../../images/import_root_cert.png\" width=\"680\"></p>\n<ol>\n<li>在<strong>信任</strong> &gt; <strong>使用此证书时</strong>下面选择<strong>始终信任</strong>。</li>\n</ol>\n<p><img src=\"../../images/trust_root_cert.png\" width=\"680\"></p>\n<ol>\n<li>关闭对话框，此时证书已经是被信任状态。</li>\n</ol>\n<p><img src=\"../../images/root_cert_trusted.png\" width=\"680\"></p>\n<h3 id=\"iOS系统\"><a href=\"#iOS系统\" class=\"headerlink\" title=\"iOS系统\"></a>iOS系统</h3><ol>\n<li><p>下载完成根证书之后发送到手机并打开。</p>\n</li>\n<li><p>点击右上角的<strong>安装</strong>。</p>\n</li>\n</ol>\n<p><img src=\"../../images/ios_install_cert_1.jpg\" width=\"375\"></p>\n<ol>\n<li>再次点击右上角的<strong>安装</strong>。</li>\n</ol>\n<p><img src=\"../../images/ios_install_cert_2.jpg\" width=\"375\"></p>\n<ol>\n<li>完成安装，点击右上角<strong>完成</strong>退出。</li>\n</ol>\n<p><img src=\"../../images/ios_install_cert_3.jpg\" width=\"375\"></p>\n<ol>\n<li>如果<strong>iOS系统版本 &gt;= 10.3</strong>，需要在<strong>设置</strong> &gt; <strong>通用</strong> &gt; <strong>关于本机</strong>中点击<strong>证书信任设置</strong>。</li>\n</ol>\n<p><img src=\"../../images/ios_install_cert_4.jpg\" width=\"375\"></p>\n<ol>\n<li>打开开关<strong>Hiproxy Custom CA</strong>。</li>\n</ol>\n<p><img src=\"../../images/ios_install_cert_5.jpg\" width=\"375\"></p>\n<h3 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h3><ol>\n<li><p>下载完成根证书之后，双击<code>Hiproxy_Custom_CA_Certificate.crt</code>安装证书。</p>\n</li>\n<li><p>在弹出的对话框中点击<strong>安装证书</strong>。</p>\n</li>\n</ol>\n<p><img src=\"../../images/windows_install_cert.png\" width=\"420\"></p>\n<ol>\n<li>点击<strong>下一步</strong>。</li>\n</ol>\n<p><img src=\"../../images/windows_step_1.png\" width=\"420\"></p>\n<ol>\n<li>选择<strong>将所有的证书放入下列存储(P)</strong>，点击<strong>浏览(R)</strong>，然后选择<strong>受信任的根证书颁发机构</strong>，点击<strong>确定</strong>。</li>\n</ol>\n<p><img src=\"../../images/windows_step_2.png\" width=\"420\"></p>\n<ol>\n<li>点击<strong>下一步</strong>、<strong>完成</strong>。根据页面提示完成根证书安装。。</li>\n</ol>\n<p><img src=\"../../images/windows_install_finish.png\" width=\"420\"></p>\n<h3 id=\"Android\"><a href=\"#Android\" class=\"headerlink\" title=\"Android\"></a>Android</h3><ol>\n<li><p>下载完成根证书之后发送到手机。</p>\n</li>\n<li><p>在<strong>设置</strong> &gt; <strong>安全</strong>中点击<strong>从SD卡安装</strong>。</p>\n</li>\n</ol>\n<p><img src=\"../../images/android_install_cert_1.png\" width=\"375\"></p>\n<ol>\n<li>输入解锁密码，然后输入证书名称，比如<strong>HiproxyCustomCA</strong>，点击<strong>确定</strong>。</li>\n</ol>\n<p><img src=\"../../images/android_install_cert_2.png\" width=\"375\"></p>\n<ol>\n<li>在<strong>设置</strong> &gt; <strong>安全</strong> &gt; <strong>受信任的证书</strong> &gt; <strong>用户</strong>中，如果能看到hiproxy的根证书，表示安装成功。</li>\n</ol>\n<p><img src=\"../../images/android_install_cert_3.png\" width=\"375\"></p>\n"},{"title":"CLI命令配置","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n> \n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 简介\n\nhiproxy的CLI提供了`start`/`stop`/`state`/`open`等命令，如果这些命令不能满足你的需求，也可以为hiproxy添加新的命令。\n\n新增的命令需要配置的内容为：`命令名称`、`描述`、`使用方法`、`处理函数`和`命令选项参数`。对应的字段为：\n\n* **命令名称（command）**：`<String>`，比如：`'hello'`。\n* **描述信息（describe）**：`<String>`，简单介绍命令的作用以及其他的信息，比如：`'A test command that say hello to you.'`。\n* **使用方法（usage）**：`<String>`，命令的使用方法提示信息，比如：`'hello [--name <name>] [-xodD]'`。\n* **处理函数（fn）**：`<Function>`，执行命令时，调用的函数。函数调用时`this`值为命令行参数解析后的对象。\n* **命令选项（option）**：`<Object>`，命令对应的选项，`key:value`形式。可以参考<https://github.com/hemsl/hemsl>。\n\n## 示例\n\n一个完整的命令示例如下：\n\n```js\n{\n  command: 'hello',\n  describe: 'A test command that say hello to you.',\n  usage: 'hello [--name <name>] [-xodD]',\n  fn: function () {\n    var cliArgs = this;\n    if (cliArgs.name ) {\n      console.log('your name is', cliArgs.name.green);\n    }\n\n    if (cliArgs.age ) {\n      console.log('your are', cliArgs.age.green, 'years old');\n    }\n  },\n  options: {\n    'name <name>': {\n      alias: 'n',\n      describe: 'your name'\n    },\n    'age': {\n      alias: 'a',\n      describe: 'your age'\n    }\n  }\n}\n```\n\n\n","source":"zh-cn/developers/cli_command.md","raw":"title: CLI命令配置\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n> \n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 简介\n\nhiproxy的CLI提供了`start`/`stop`/`state`/`open`等命令，如果这些命令不能满足你的需求，也可以为hiproxy添加新的命令。\n\n新增的命令需要配置的内容为：`命令名称`、`描述`、`使用方法`、`处理函数`和`命令选项参数`。对应的字段为：\n\n* **命令名称（command）**：`<String>`，比如：`'hello'`。\n* **描述信息（describe）**：`<String>`，简单介绍命令的作用以及其他的信息，比如：`'A test command that say hello to you.'`。\n* **使用方法（usage）**：`<String>`，命令的使用方法提示信息，比如：`'hello [--name <name>] [-xodD]'`。\n* **处理函数（fn）**：`<Function>`，执行命令时，调用的函数。函数调用时`this`值为命令行参数解析后的对象。\n* **命令选项（option）**：`<Object>`，命令对应的选项，`key:value`形式。可以参考<https://github.com/hemsl/hemsl>。\n\n## 示例\n\n一个完整的命令示例如下：\n\n```js\n{\n  command: 'hello',\n  describe: 'A test command that say hello to you.',\n  usage: 'hello [--name <name>] [-xodD]',\n  fn: function () {\n    var cliArgs = this;\n    if (cliArgs.name ) {\n      console.log('your name is', cliArgs.name.green);\n    }\n\n    if (cliArgs.age ) {\n      console.log('your are', cliArgs.age.green, 'years old');\n    }\n  },\n  options: {\n    'name <name>': {\n      alias: 'n',\n      describe: 'your name'\n    },\n    'age': {\n      alias: 'a',\n      describe: 'your age'\n    }\n  }\n}\n```\n\n\n","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"zh-cn/developers/cli_command.html","comments":1,"layout":"page","_id":"cj7nia0j3000why0f8ubwujlt","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>hiproxy的CLI提供了<code>start</code>/<code>stop</code>/<code>state</code>/<code>open</code>等命令，如果这些命令不能满足你的需求，也可以为hiproxy添加新的命令。</p>\n<p>新增的命令需要配置的内容为：<code>命令名称</code>、<code>描述</code>、<code>使用方法</code>、<code>处理函数</code>和<code>命令选项参数</code>。对应的字段为：</p>\n<ul>\n<li><strong>命令名称（command）</strong>：<code>&lt;String&gt;</code>，比如：<code>&#39;hello&#39;</code>。</li>\n<li><strong>描述信息（describe）</strong>：<code>&lt;String&gt;</code>，简单介绍命令的作用以及其他的信息，比如：<code>&#39;A test command that say hello to you.&#39;</code>。</li>\n<li><strong>使用方法（usage）</strong>：<code>&lt;String&gt;</code>，命令的使用方法提示信息，比如：<code>&#39;hello [--name &lt;name&gt;] [-xodD]&#39;</code>。</li>\n<li><strong>处理函数（fn）</strong>：<code>&lt;Function&gt;</code>，执行命令时，调用的函数。函数调用时<code>this</code>值为命令行参数解析后的对象。</li>\n<li><strong>命令选项（option）</strong>：<code>&lt;Object&gt;</code>，命令对应的选项，<code>key:value</code>形式。可以参考<a href=\"https://github.com/hemsl/hemsl\" target=\"_blank\" rel=\"external\">https://github.com/hemsl/hemsl</a>。</li>\n</ul>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>一个完整的命令示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  command: <span class=\"string\">'hello'</span>,</div><div class=\"line\">  describe: <span class=\"string\">'A test command that say hello to you.'</span>,</div><div class=\"line\">  usage: <span class=\"string\">'hello [--name &lt;name&gt;] [-xodD]'</span>,</div><div class=\"line\">  fn: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> cliArgs = <span class=\"keyword\">this</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span> (cliArgs.name ) &#123;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'your name is'</span>, cliArgs.name.green);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span> (cliArgs.age ) &#123;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'your are'</span>, cliArgs.age.green, <span class=\"string\">'years old'</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  options: &#123;</div><div class=\"line\">    <span class=\"string\">'name &lt;name&gt;'</span>: &#123;</div><div class=\"line\">      alias: <span class=\"string\">'n'</span>,</div><div class=\"line\">      describe: <span class=\"string\">'your name'</span></div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"string\">'age'</span>: &#123;</div><div class=\"line\">      alias: <span class=\"string\">'a'</span>,</div><div class=\"line\">      describe: <span class=\"string\">'your age'</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>hiproxy的CLI提供了<code>start</code>/<code>stop</code>/<code>state</code>/<code>open</code>等命令，如果这些命令不能满足你的需求，也可以为hiproxy添加新的命令。</p>\n<p>新增的命令需要配置的内容为：<code>命令名称</code>、<code>描述</code>、<code>使用方法</code>、<code>处理函数</code>和<code>命令选项参数</code>。对应的字段为：</p>\n<ul>\n<li><strong>命令名称（command）</strong>：<code>&lt;String&gt;</code>，比如：<code>&#39;hello&#39;</code>。</li>\n<li><strong>描述信息（describe）</strong>：<code>&lt;String&gt;</code>，简单介绍命令的作用以及其他的信息，比如：<code>&#39;A test command that say hello to you.&#39;</code>。</li>\n<li><strong>使用方法（usage）</strong>：<code>&lt;String&gt;</code>，命令的使用方法提示信息，比如：<code>&#39;hello [--name &lt;name&gt;] [-xodD]&#39;</code>。</li>\n<li><strong>处理函数（fn）</strong>：<code>&lt;Function&gt;</code>，执行命令时，调用的函数。函数调用时<code>this</code>值为命令行参数解析后的对象。</li>\n<li><strong>命令选项（option）</strong>：<code>&lt;Object&gt;</code>，命令对应的选项，<code>key:value</code>形式。可以参考<a href=\"https://github.com/hemsl/hemsl\" target=\"_blank\" rel=\"external\">https://github.com/hemsl/hemsl</a>。</li>\n</ul>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>一个完整的命令示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  command: <span class=\"string\">'hello'</span>,</div><div class=\"line\">  describe: <span class=\"string\">'A test command that say hello to you.'</span>,</div><div class=\"line\">  usage: <span class=\"string\">'hello [--name &lt;name&gt;] [-xodD]'</span>,</div><div class=\"line\">  fn: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> cliArgs = <span class=\"keyword\">this</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span> (cliArgs.name ) &#123;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'your name is'</span>, cliArgs.name.green);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span> (cliArgs.age ) &#123;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'your are'</span>, cliArgs.age.green, <span class=\"string\">'years old'</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  options: &#123;</div><div class=\"line\">    <span class=\"string\">'name &lt;name&gt;'</span>: &#123;</div><div class=\"line\">      alias: <span class=\"string\">'n'</span>,</div><div class=\"line\">      describe: <span class=\"string\">'your name'</span></div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"string\">'age'</span>: &#123;</div><div class=\"line\">      alias: <span class=\"string\">'a'</span>,</div><div class=\"line\">      describe: <span class=\"string\">'your age'</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"title":"hiproxy开发者指南","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!","source":"zh-cn/developers/index.md","raw":"title: hiproxy开发者指南\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"zh-cn/developers/index.html","comments":1,"layout":"page","_id":"cj7nia0j9000xhy0fd8dcnge4","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n"},{"title":"指令配置","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n> \n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 简介\n\n**rewrite指令**可以配置的内容为：`指令名称`、`作用域`和`处理函数`。对应的字段为：\n\n* **指令名称（name）**：`<String>`，比如：`'add'`。\n* **作用域（scope）**：`<Array>`，指令对应的作用域，只有在这里指定的作用域里面才会执行。可选择的作用域为：`global`、`domain`、`location`、`request`和`response`。\n* **处理函数（fn）**：`<Function>`，执行指令时，调用的函数，详细信息请查看[处理函数](#handler-function)。\n\n## 示例\n\n一个完整的指令示例如下：\n\n```js\n{\n  name: 'add',\n  scope: ['global', 'domain', 'location'],\n  fn: function (key, a, b) {\n    var props = this.props;\n    var value = Number(a) + Number(b);\n\n    this.props[key] = value;\n  }\n}\n```\n\n<a name=\"handler-function\"></a>\n\n## 处理函数\n\n处理函数会在hiproxy执行指令的时候被调用，传入rewrite配置文件中这个指令对应的参数，并设置`this`。\n\n### 参数\n\n处理函数会被调用是，会传入rewrite配置文件中这个指令对应的参数，例如配置了指令`proxy_set_header Host hiproxy.org`，那么在执行**处理函数**时，传入的参数为：`('Host', 'hiproxy.org')`\n\n### this\n\n不同作用域中的指令执行时，this值也不同，下面列举了所有作用域指令对应的this值:\n\n- **global**: 整个rewrite对象-`{props: <Object>, domains: <Array>, commands: <Array>}}`\n- **domain**: domain对象-`{domain: <String>, props: <Object>, location: <Array>, commands: <Array>}}`\n- **location**: location对象-`{props: <Object>, location: <String>, commands: <Array>}}`\n- **request**: `{request: <http.IncomingMessage>}`\n- **response**: `{response: <http.ServerResponse>}`\n","source":"zh-cn/developers/directive.md","raw":"title: 指令配置\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n> \n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 简介\n\n**rewrite指令**可以配置的内容为：`指令名称`、`作用域`和`处理函数`。对应的字段为：\n\n* **指令名称（name）**：`<String>`，比如：`'add'`。\n* **作用域（scope）**：`<Array>`，指令对应的作用域，只有在这里指定的作用域里面才会执行。可选择的作用域为：`global`、`domain`、`location`、`request`和`response`。\n* **处理函数（fn）**：`<Function>`，执行指令时，调用的函数，详细信息请查看[处理函数](#handler-function)。\n\n## 示例\n\n一个完整的指令示例如下：\n\n```js\n{\n  name: 'add',\n  scope: ['global', 'domain', 'location'],\n  fn: function (key, a, b) {\n    var props = this.props;\n    var value = Number(a) + Number(b);\n\n    this.props[key] = value;\n  }\n}\n```\n\n<a name=\"handler-function\"></a>\n\n## 处理函数\n\n处理函数会在hiproxy执行指令的时候被调用，传入rewrite配置文件中这个指令对应的参数，并设置`this`。\n\n### 参数\n\n处理函数会被调用是，会传入rewrite配置文件中这个指令对应的参数，例如配置了指令`proxy_set_header Host hiproxy.org`，那么在执行**处理函数**时，传入的参数为：`('Host', 'hiproxy.org')`\n\n### this\n\n不同作用域中的指令执行时，this值也不同，下面列举了所有作用域指令对应的this值:\n\n- **global**: 整个rewrite对象-`{props: <Object>, domains: <Array>, commands: <Array>}}`\n- **domain**: domain对象-`{domain: <String>, props: <Object>, location: <Array>, commands: <Array>}}`\n- **location**: location对象-`{props: <Object>, location: <String>, commands: <Array>}}`\n- **request**: `{request: <http.IncomingMessage>}`\n- **response**: `{response: <http.ServerResponse>}`\n","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"zh-cn/developers/directive.html","comments":1,"layout":"page","_id":"cj7nia0jl000yhy0f071o8vqb","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><strong>rewrite指令</strong>可以配置的内容为：<code>指令名称</code>、<code>作用域</code>和<code>处理函数</code>。对应的字段为：</p>\n<ul>\n<li><strong>指令名称（name）</strong>：<code>&lt;String&gt;</code>，比如：<code>&#39;add&#39;</code>。</li>\n<li><strong>作用域（scope）</strong>：<code>&lt;Array&gt;</code>，指令对应的作用域，只有在这里指定的作用域里面才会执行。可选择的作用域为：<code>global</code>、<code>domain</code>、<code>location</code>、<code>request</code>和<code>response</code>。</li>\n<li><strong>处理函数（fn）</strong>：<code>&lt;Function&gt;</code>，执行指令时，调用的函数，详细信息请查看<a href=\"#handler-function\">处理函数</a>。</li>\n</ul>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>一个完整的指令示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  name: <span class=\"string\">'add'</span>,</div><div class=\"line\">  scope: [<span class=\"string\">'global'</span>, <span class=\"string\">'domain'</span>, <span class=\"string\">'location'</span>],</div><div class=\"line\">  fn: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">key, a, b</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> props = <span class=\"keyword\">this</span>.props;</div><div class=\"line\">    <span class=\"keyword\">var</span> value = <span class=\"built_in\">Number</span>(a) + <span class=\"built_in\">Number</span>(b);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">this</span>.props[key] = value;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a name=\"handler-function\"></a></p>\n<h2 id=\"处理函数\"><a href=\"#处理函数\" class=\"headerlink\" title=\"处理函数\"></a>处理函数</h2><p>处理函数会在hiproxy执行指令的时候被调用，传入rewrite配置文件中这个指令对应的参数，并设置<code>this</code>。</p>\n<h3 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数\"></a>参数</h3><p>处理函数会被调用是，会传入rewrite配置文件中这个指令对应的参数，例如配置了指令<code>proxy_set_header Host hiproxy.org</code>，那么在执行<strong>处理函数</strong>时，传入的参数为：<code>(&#39;Host&#39;, &#39;hiproxy.org&#39;)</code></p>\n<h3 id=\"this\"><a href=\"#this\" class=\"headerlink\" title=\"this\"></a>this</h3><p>不同作用域中的指令执行时，this值也不同，下面列举了所有作用域指令对应的this值:</p>\n<ul>\n<li><strong>global</strong>: 整个rewrite对象-<code>{props: &lt;Object&gt;, domains: &lt;Array&gt;, commands: &lt;Array&gt;}}</code></li>\n<li><strong>domain</strong>: domain对象-<code>{domain: &lt;String&gt;, props: &lt;Object&gt;, location: &lt;Array&gt;, commands: &lt;Array&gt;}}</code></li>\n<li><strong>location</strong>: location对象-<code>{props: &lt;Object&gt;, location: &lt;String&gt;, commands: &lt;Array&gt;}}</code></li>\n<li><strong>request</strong>: <code>{request: &lt;http.IncomingMessage&gt;}</code></li>\n<li><strong>response</strong>: <code>{response: &lt;http.ServerResponse&gt;}</code></li>\n</ul>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><strong>rewrite指令</strong>可以配置的内容为：<code>指令名称</code>、<code>作用域</code>和<code>处理函数</code>。对应的字段为：</p>\n<ul>\n<li><strong>指令名称（name）</strong>：<code>&lt;String&gt;</code>，比如：<code>&#39;add&#39;</code>。</li>\n<li><strong>作用域（scope）</strong>：<code>&lt;Array&gt;</code>，指令对应的作用域，只有在这里指定的作用域里面才会执行。可选择的作用域为：<code>global</code>、<code>domain</code>、<code>location</code>、<code>request</code>和<code>response</code>。</li>\n<li><strong>处理函数（fn）</strong>：<code>&lt;Function&gt;</code>，执行指令时，调用的函数，详细信息请查看<a href=\"#handler-function\">处理函数</a>。</li>\n</ul>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>一个完整的指令示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  name: <span class=\"string\">'add'</span>,</div><div class=\"line\">  scope: [<span class=\"string\">'global'</span>, <span class=\"string\">'domain'</span>, <span class=\"string\">'location'</span>],</div><div class=\"line\">  fn: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">key, a, b</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> props = <span class=\"keyword\">this</span>.props;</div><div class=\"line\">    <span class=\"keyword\">var</span> value = <span class=\"built_in\">Number</span>(a) + <span class=\"built_in\">Number</span>(b);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">this</span>.props[key] = value;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a name=\"handler-function\"></a></p>\n<h2 id=\"处理函数\"><a href=\"#处理函数\" class=\"headerlink\" title=\"处理函数\"></a>处理函数</h2><p>处理函数会在hiproxy执行指令的时候被调用，传入rewrite配置文件中这个指令对应的参数，并设置<code>this</code>。</p>\n<h3 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数\"></a>参数</h3><p>处理函数会被调用是，会传入rewrite配置文件中这个指令对应的参数，例如配置了指令<code>proxy_set_header Host hiproxy.org</code>，那么在执行<strong>处理函数</strong>时，传入的参数为：<code>(&#39;Host&#39;, &#39;hiproxy.org&#39;)</code></p>\n<h3 id=\"this\"><a href=\"#this\" class=\"headerlink\" title=\"this\"></a>this</h3><p>不同作用域中的指令执行时，this值也不同，下面列举了所有作用域指令对应的this值:</p>\n<ul>\n<li><strong>global</strong>: 整个rewrite对象-<code>{props: &lt;Object&gt;, domains: &lt;Array&gt;, commands: &lt;Array&gt;}}</code></li>\n<li><strong>domain</strong>: domain对象-<code>{domain: &lt;String&gt;, props: &lt;Object&gt;, location: &lt;Array&gt;, commands: &lt;Array&gt;}}</code></li>\n<li><strong>location</strong>: location对象-<code>{props: &lt;Object&gt;, location: &lt;String&gt;, commands: &lt;Array&gt;}}</code></li>\n<li><strong>request</strong>: <code>{request: &lt;http.IncomingMessage&gt;}</code></li>\n<li><strong>response</strong>: <code>{response: &lt;http.ServerResponse&gt;}</code></li>\n</ul>\n"},{"title":"插件开发指南","_content":"\nhiproxy提供了一套插件开发机制，这个机制很简单：插件开发完成后，将插件安装到全局，hiproxy启动时会自动查找安装的所有插件。\n\n开发者开发新插件时，可以参考`hiproxy-plugin-example`: <https://github.com/hiproxy/hiproxy-plugin-example>。这是一个完整的插件示例，你可以基于这个示例修改。\n\n**插件就是一个普通的npm模块，不需要将hiproxy作为依赖安装到插件中。**\n\n<br />\n\n## 插件结构\n\nhiproxy插件必须满足三个条件：\n\n1. __插件必须作为一个独立的npm模块，这个模块需要导出一个对象，这个对象可以指定三个属性__\n```js\nmodule.exports = {\n  // CLI commands\n  commands: commands,\n\n  // Rewrite config redirectives\n  directives: directives,\n  \n  // HTTP server routes\n  routes: routes\n};\n```\n\n* **commands**: `<Array>`，用来扩展`hiproxy`的**CLI命令**，数组中每个对象作为一个命令配置，具体配置见[命令配置](./cli_command.html)。\n\n* **directives**: `<Array>`，用来扩展`hiproxy`的**rewrite指令**，数组中每个对象作为一个指令配置，具体配置见[指令配置](./directive.html)。\n\n* **routes**: `<Array>`，用来扩展`hiproxy`的**页面路由**，数组中每个对象作为一个路由配置，具体配置见[路由配置](./route.html)。\n\n2. __插件模块必须安装到全局__\n\n3. __插件名称必须以`hiproxy-plugin-`开头__\n\n## 代码示例\n\n<https://github.com/hiproxy/hiproxy-plugin-example/blob/master/index.js#L14-L23>\n\n## 插件发布\n\n插件开发、测试完成之后，可以将其发布到\bnpm。\n\n发布的过程和方法，跟其他npm模块的发布一样，因为hiproxy的插件，**就是一个**遵循了特定规则的**普通npm\b模块**。\n\n\n## 温馨提示\n\n由于hiproxy只会从`npm root -g`所在的目录去查找名称以`hiproxy-plugin-`开头的插件，所以在本地开发时，hiproxy加载不到新的插件。\n\n可以使用`npm link`，创建一个符号链接，这样就能一边开发一边调试开发中的插件。详情请参考npm文档：[npm link](https://docs.npmjs.com/cli/link)。\n","source":"zh-cn/developers/plugin.md","raw":"title: 插件开发指南\n---\n\nhiproxy提供了一套插件开发机制，这个机制很简单：插件开发完成后，将插件安装到全局，hiproxy启动时会自动查找安装的所有插件。\n\n开发者开发新插件时，可以参考`hiproxy-plugin-example`: <https://github.com/hiproxy/hiproxy-plugin-example>。这是一个完整的插件示例，你可以基于这个示例修改。\n\n**插件就是一个普通的npm模块，不需要将hiproxy作为依赖安装到插件中。**\n\n<br />\n\n## 插件结构\n\nhiproxy插件必须满足三个条件：\n\n1. __插件必须作为一个独立的npm模块，这个模块需要导出一个对象，这个对象可以指定三个属性__\n```js\nmodule.exports = {\n  // CLI commands\n  commands: commands,\n\n  // Rewrite config redirectives\n  directives: directives,\n  \n  // HTTP server routes\n  routes: routes\n};\n```\n\n* **commands**: `<Array>`，用来扩展`hiproxy`的**CLI命令**，数组中每个对象作为一个命令配置，具体配置见[命令配置](./cli_command.html)。\n\n* **directives**: `<Array>`，用来扩展`hiproxy`的**rewrite指令**，数组中每个对象作为一个指令配置，具体配置见[指令配置](./directive.html)。\n\n* **routes**: `<Array>`，用来扩展`hiproxy`的**页面路由**，数组中每个对象作为一个路由配置，具体配置见[路由配置](./route.html)。\n\n2. __插件模块必须安装到全局__\n\n3. __插件名称必须以`hiproxy-plugin-`开头__\n\n## 代码示例\n\n<https://github.com/hiproxy/hiproxy-plugin-example/blob/master/index.js#L14-L23>\n\n## 插件发布\n\n插件开发、测试完成之后，可以将其发布到\bnpm。\n\n发布的过程和方法，跟其他npm模块的发布一样，因为hiproxy的插件，**就是一个**遵循了特定规则的**普通npm\b模块**。\n\n\n## 温馨提示\n\n由于hiproxy只会从`npm root -g`所在的目录去查找名称以`hiproxy-plugin-`开头的插件，所以在本地开发时，hiproxy加载不到新的插件。\n\n可以使用`npm link`，创建一个符号链接，这样就能一边开发一边调试开发中的插件。详情请参考npm文档：[npm link](https://docs.npmjs.com/cli/link)。\n","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"zh-cn/developers/plugin.html","comments":1,"layout":"page","_id":"cj7nia0jm000zhy0fbfo98lf8","content":"<p>hiproxy提供了一套插件开发机制，这个机制很简单：插件开发完成后，将插件安装到全局，hiproxy启动时会自动查找安装的所有插件。</p>\n<p>开发者开发新插件时，可以参考<code>hiproxy-plugin-example</code>: <a href=\"https://github.com/hiproxy/hiproxy-plugin-example\" target=\"_blank\" rel=\"external\">https://github.com/hiproxy/hiproxy-plugin-example</a>。这是一个完整的插件示例，你可以基于这个示例修改。</p>\n<p><strong>插件就是一个普通的npm模块，不需要将hiproxy作为依赖安装到插件中。</strong></p>\n<p><br></p>\n<h2 id=\"插件结构\"><a href=\"#插件结构\" class=\"headerlink\" title=\"插件结构\"></a>插件结构</h2><p>hiproxy插件必须满足三个条件：</p>\n<ol>\n<li><strong>插件必须作为一个独立的npm模块，这个模块需要导出一个对象，这个对象可以指定三个属性</strong><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</div><div class=\"line\">  <span class=\"comment\">// CLI commands</span></div><div class=\"line\">  commands: commands,</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// Rewrite config redirectives</span></div><div class=\"line\">  directives: directives,</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">// HTTP server routes</span></div><div class=\"line\">  routes: routes</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<ul>\n<li><p><strong>commands</strong>: <code>&lt;Array&gt;</code>，用来扩展<code>hiproxy</code>的<strong>CLI命令</strong>，数组中每个对象作为一个命令配置，具体配置见<a href=\"./cli_command.html\">命令配置</a>。</p>\n</li>\n<li><p><strong>directives</strong>: <code>&lt;Array&gt;</code>，用来扩展<code>hiproxy</code>的<strong>rewrite指令</strong>，数组中每个对象作为一个指令配置，具体配置见<a href=\"./directive.html\">指令配置</a>。</p>\n</li>\n<li><p><strong>routes</strong>: <code>&lt;Array&gt;</code>，用来扩展<code>hiproxy</code>的<strong>页面路由</strong>，数组中每个对象作为一个路由配置，具体配置见<a href=\"./route.html\">路由配置</a>。</p>\n</li>\n</ul>\n<ol>\n<li><p><strong>插件模块必须安装到全局</strong></p>\n</li>\n<li><p><strong>插件名称必须以<code>hiproxy-plugin-</code>开头</strong></p>\n</li>\n</ol>\n<h2 id=\"代码示例\"><a href=\"#代码示例\" class=\"headerlink\" title=\"代码示例\"></a>代码示例</h2><p><a href=\"https://github.com/hiproxy/hiproxy-plugin-example/blob/master/index.js#L14-L23\" target=\"_blank\" rel=\"external\">https://github.com/hiproxy/hiproxy-plugin-example/blob/master/index.js#L14-L23</a></p>\n<h2 id=\"插件发布\"><a href=\"#插件发布\" class=\"headerlink\" title=\"插件发布\"></a>插件发布</h2><p>插件开发、测试完成之后，可以将其发布到\bnpm。</p>\n<p>发布的过程和方法，跟其他npm模块的发布一样，因为hiproxy的插件，<strong>就是一个</strong>遵循了特定规则的<strong>普通npm\b模块</strong>。</p>\n<h2 id=\"温馨提示\"><a href=\"#温馨提示\" class=\"headerlink\" title=\"温馨提示\"></a>温馨提示</h2><p>由于hiproxy只会从<code>npm root -g</code>所在的目录去查找名称以<code>hiproxy-plugin-</code>开头的插件，所以在本地开发时，hiproxy加载不到新的插件。</p>\n<p>可以使用<code>npm link</code>，创建一个符号链接，这样就能一边开发一边调试开发中的插件。详情请参考npm文档：<a href=\"https://docs.npmjs.com/cli/link\" target=\"_blank\" rel=\"external\">npm link</a>。</p>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<p>hiproxy提供了一套插件开发机制，这个机制很简单：插件开发完成后，将插件安装到全局，hiproxy启动时会自动查找安装的所有插件。</p>\n<p>开发者开发新插件时，可以参考<code>hiproxy-plugin-example</code>: <a href=\"https://github.com/hiproxy/hiproxy-plugin-example\" target=\"_blank\" rel=\"external\">https://github.com/hiproxy/hiproxy-plugin-example</a>。这是一个完整的插件示例，你可以基于这个示例修改。</p>\n<p><strong>插件就是一个普通的npm模块，不需要将hiproxy作为依赖安装到插件中。</strong></p>\n<p><br></p>\n<h2 id=\"插件结构\"><a href=\"#插件结构\" class=\"headerlink\" title=\"插件结构\"></a>插件结构</h2><p>hiproxy插件必须满足三个条件：</p>\n<ol>\n<li><strong>插件必须作为一个独立的npm模块，这个模块需要导出一个对象，这个对象可以指定三个属性</strong><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</div><div class=\"line\">  <span class=\"comment\">// CLI commands</span></div><div class=\"line\">  commands: commands,</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// Rewrite config redirectives</span></div><div class=\"line\">  directives: directives,</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">// HTTP server routes</span></div><div class=\"line\">  routes: routes</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<ul>\n<li><p><strong>commands</strong>: <code>&lt;Array&gt;</code>，用来扩展<code>hiproxy</code>的<strong>CLI命令</strong>，数组中每个对象作为一个命令配置，具体配置见<a href=\"./cli_command.html\">命令配置</a>。</p>\n</li>\n<li><p><strong>directives</strong>: <code>&lt;Array&gt;</code>，用来扩展<code>hiproxy</code>的<strong>rewrite指令</strong>，数组中每个对象作为一个指令配置，具体配置见<a href=\"./directive.html\">指令配置</a>。</p>\n</li>\n<li><p><strong>routes</strong>: <code>&lt;Array&gt;</code>，用来扩展<code>hiproxy</code>的<strong>页面路由</strong>，数组中每个对象作为一个路由配置，具体配置见<a href=\"./route.html\">路由配置</a>。</p>\n</li>\n</ul>\n<ol>\n<li><p><strong>插件模块必须安装到全局</strong></p>\n</li>\n<li><p><strong>插件名称必须以<code>hiproxy-plugin-</code>开头</strong></p>\n</li>\n</ol>\n<h2 id=\"代码示例\"><a href=\"#代码示例\" class=\"headerlink\" title=\"代码示例\"></a>代码示例</h2><p><a href=\"https://github.com/hiproxy/hiproxy-plugin-example/blob/master/index.js#L14-L23\" target=\"_blank\" rel=\"external\">https://github.com/hiproxy/hiproxy-plugin-example/blob/master/index.js#L14-L23</a></p>\n<h2 id=\"插件发布\"><a href=\"#插件发布\" class=\"headerlink\" title=\"插件发布\"></a>插件发布</h2><p>插件开发、测试完成之后，可以将其发布到\bnpm。</p>\n<p>发布的过程和方法，跟其他npm模块的发布一样，因为hiproxy的插件，<strong>就是一个</strong>遵循了特定规则的<strong>普通npm\b模块</strong>。</p>\n<h2 id=\"温馨提示\"><a href=\"#温馨提示\" class=\"headerlink\" title=\"温馨提示\"></a>温馨提示</h2><p>由于hiproxy只会从<code>npm root -g</code>所在的目录去查找名称以<code>hiproxy-plugin-</code>开头的插件，所以在本地开发时，hiproxy加载不到新的插件。</p>\n<p>可以使用<code>npm link</code>，创建一个符号链接，这样就能一边开发一边调试开发中的插件。详情请参考npm文档：<a href=\"https://docs.npmjs.com/cli/link\" target=\"_blank\" rel=\"external\">npm link</a>。</p>\n"},{"title":"常见问题","_content":"\n### hiproxy的核心目的／功能是什么？\n\nhiproxy的核心功能是代理请求，主要是为了解决前端开发工程师在本地开发过程中遇到的：\n\n- `hosts`修改后由于DNS缓存不能立刻生效\n- 需要使用Nginx来做反向代理\n- 自签名HTTPS证书不受信任\n- 每个人都在本地维护环境配置文件（hosts／Nginx配置）\n- ...\n\n<br/>\n\n### hiproxy跟Charles／Fiddler有什么区别？\n\nhiproxy跟Charles/Fiddler都有抓包、请求代理的功能，很多核心的功能基本类似。只不过hiproxy是一个命令行的工具，使用配置文件来配置。\n\n此外，hiproxy现在没有查看网络请求的具体内容的界面，将来会通过插件开发，敬请期待。\n\n<br/>\n\n### hiproxy的hosts跟系统hosts有什么关系？\n\nhiproxy的hosts跟系统hosts文件本身没有任何关系。\n\nhiproxy的hosts文件一般存放在项目中，或者其他目录（根据用户情况自己决定放到哪里）。hiproxy代理服务启动的时候，会查找并解析这些hosts文件，**不会去查找解析系统hosts**。\n\n<br/>\n\n### hiproxy的rewrite配置文件完全兼容Nginx配置吗？\n\n不兼容，hiproxy的rewrite规则配置文件跟Nginx的配置文件本身没有任何关系。\n\n从语法上看，hiproxy的rewrite配置文件借鉴了Nginx配置的语法。核心的语法跟Nginx的语法一致，但是也有些语法是hiproxy特有的，并不完全跟Nginx语法一致，比如：\n\n```bash\n# base rule\nhttp://hiproxy.org/api/login.do => http://127.0.0.1:9999/api/login.json;\n\n# domain\nhiproxy.org => {\n  # ...\n}\n```\n\n此外，也有部分指令采用Nginx的指令名称且功能基本类似，比如`proxy_pass`、`set`、`ssl_certificate`和`ssl_certificate_key`等。但是也**不保证所有的功能细节跟Nginx的指令保持一致**。详细的指令功能说明请参考[指令](../rewrite/directive.html)。\n\n<br/>\n\n### hiproxy多个项目中的不同配置文件使用相同的域名吗？\n\n支持。\n\n可以在不同的项目的不同配置文件中，给相同的域名配置代理规则。hiproxy会自动合并相同域名的规则，如果路由配置有冲突，后加载的配置文件的规则会覆盖前面的规则。\n\n<br/>\n\n### hiproxy怎么处理多个配置文件中的规则冲突？\n\n详细的配置规则处理文档正在编写。\n\n\n<br/>\n\n### hiproxy根证书怎么获取／导入？\n\n可以查看文档[获取／导入SSL证书](../configuration/ssl_certificate.html)。\n\n<br/>\n\n### hiproxy中如何使用自己的SSL证书？\n\n默认情况下，在代理https请求的时候，hiproxy会**自动生成证书**，并使用hiproxy自定义的CA证书签名。用户只需要导入hiproxy的根证书。\n\n如果用户需要使用自定义的证书，可以·使用hiproxy提供的指令来配置：\n\n```\nssl_certificate     ./hiproxy.org.crt;\nssl_certificate_key ./hiproxy.org.key;\n```\n\n<br/>\n\n### ...\n","source":"zh-cn/faqs/index.md","raw":"title: 常见问题\n---\n\n### hiproxy的核心目的／功能是什么？\n\nhiproxy的核心功能是代理请求，主要是为了解决前端开发工程师在本地开发过程中遇到的：\n\n- `hosts`修改后由于DNS缓存不能立刻生效\n- 需要使用Nginx来做反向代理\n- 自签名HTTPS证书不受信任\n- 每个人都在本地维护环境配置文件（hosts／Nginx配置）\n- ...\n\n<br/>\n\n### hiproxy跟Charles／Fiddler有什么区别？\n\nhiproxy跟Charles/Fiddler都有抓包、请求代理的功能，很多核心的功能基本类似。只不过hiproxy是一个命令行的工具，使用配置文件来配置。\n\n此外，hiproxy现在没有查看网络请求的具体内容的界面，将来会通过插件开发，敬请期待。\n\n<br/>\n\n### hiproxy的hosts跟系统hosts有什么关系？\n\nhiproxy的hosts跟系统hosts文件本身没有任何关系。\n\nhiproxy的hosts文件一般存放在项目中，或者其他目录（根据用户情况自己决定放到哪里）。hiproxy代理服务启动的时候，会查找并解析这些hosts文件，**不会去查找解析系统hosts**。\n\n<br/>\n\n### hiproxy的rewrite配置文件完全兼容Nginx配置吗？\n\n不兼容，hiproxy的rewrite规则配置文件跟Nginx的配置文件本身没有任何关系。\n\n从语法上看，hiproxy的rewrite配置文件借鉴了Nginx配置的语法。核心的语法跟Nginx的语法一致，但是也有些语法是hiproxy特有的，并不完全跟Nginx语法一致，比如：\n\n```bash\n# base rule\nhttp://hiproxy.org/api/login.do => http://127.0.0.1:9999/api/login.json;\n\n# domain\nhiproxy.org => {\n  # ...\n}\n```\n\n此外，也有部分指令采用Nginx的指令名称且功能基本类似，比如`proxy_pass`、`set`、`ssl_certificate`和`ssl_certificate_key`等。但是也**不保证所有的功能细节跟Nginx的指令保持一致**。详细的指令功能说明请参考[指令](../rewrite/directive.html)。\n\n<br/>\n\n### hiproxy多个项目中的不同配置文件使用相同的域名吗？\n\n支持。\n\n可以在不同的项目的不同配置文件中，给相同的域名配置代理规则。hiproxy会自动合并相同域名的规则，如果路由配置有冲突，后加载的配置文件的规则会覆盖前面的规则。\n\n<br/>\n\n### hiproxy怎么处理多个配置文件中的规则冲突？\n\n详细的配置规则处理文档正在编写。\n\n\n<br/>\n\n### hiproxy根证书怎么获取／导入？\n\n可以查看文档[获取／导入SSL证书](../configuration/ssl_certificate.html)。\n\n<br/>\n\n### hiproxy中如何使用自己的SSL证书？\n\n默认情况下，在代理https请求的时候，hiproxy会**自动生成证书**，并使用hiproxy自定义的CA证书签名。用户只需要导入hiproxy的根证书。\n\n如果用户需要使用自定义的证书，可以·使用hiproxy提供的指令来配置：\n\n```\nssl_certificate     ./hiproxy.org.crt;\nssl_certificate_key ./hiproxy.org.key;\n```\n\n<br/>\n\n### ...\n","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"zh-cn/faqs/index.html","comments":1,"layout":"page","_id":"cj7nia0jm0010hy0fwi1bp43l","content":"<h3 id=\"hiproxy的核心目的／功能是什么？\"><a href=\"#hiproxy的核心目的／功能是什么？\" class=\"headerlink\" title=\"hiproxy的核心目的／功能是什么？\"></a>hiproxy的核心目的／功能是什么？</h3><p>hiproxy的核心功能是代理请求，主要是为了解决前端开发工程师在本地开发过程中遇到的：</p>\n<ul>\n<li><code>hosts</code>修改后由于DNS缓存不能立刻生效</li>\n<li>需要使用Nginx来做反向代理</li>\n<li>自签名HTTPS证书不受信任</li>\n<li>每个人都在本地维护环境配置文件（hosts／Nginx配置）</li>\n<li>…</li>\n</ul>\n<p><br></p>\n<h3 id=\"hiproxy跟Charles／Fiddler有什么区别？\"><a href=\"#hiproxy跟Charles／Fiddler有什么区别？\" class=\"headerlink\" title=\"hiproxy跟Charles／Fiddler有什么区别？\"></a>hiproxy跟Charles／Fiddler有什么区别？</h3><p>hiproxy跟Charles/Fiddler都有抓包、请求代理的功能，很多核心的功能基本类似。只不过hiproxy是一个命令行的工具，使用配置文件来配置。</p>\n<p>此外，hiproxy现在没有查看网络请求的具体内容的界面，将来会通过插件开发，敬请期待。</p>\n<p><br></p>\n<h3 id=\"hiproxy的hosts跟系统hosts有什么关系？\"><a href=\"#hiproxy的hosts跟系统hosts有什么关系？\" class=\"headerlink\" title=\"hiproxy的hosts跟系统hosts有什么关系？\"></a>hiproxy的hosts跟系统hosts有什么关系？</h3><p>hiproxy的hosts跟系统hosts文件本身没有任何关系。</p>\n<p>hiproxy的hosts文件一般存放在项目中，或者其他目录（根据用户情况自己决定放到哪里）。hiproxy代理服务启动的时候，会查找并解析这些hosts文件，<strong>不会去查找解析系统hosts</strong>。</p>\n<p><br></p>\n<h3 id=\"hiproxy的rewrite配置文件完全兼容Nginx配置吗？\"><a href=\"#hiproxy的rewrite配置文件完全兼容Nginx配置吗？\" class=\"headerlink\" title=\"hiproxy的rewrite配置文件完全兼容Nginx配置吗？\"></a>hiproxy的rewrite配置文件完全兼容Nginx配置吗？</h3><p>不兼容，hiproxy的rewrite规则配置文件跟Nginx的配置文件本身没有任何关系。</p>\n<p>从语法上看，hiproxy的rewrite配置文件借鉴了Nginx配置的语法。核心的语法跟Nginx的语法一致，但是也有些语法是hiproxy特有的，并不完全跟Nginx语法一致，比如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># base rule</span></div><div class=\"line\">http://hiproxy.org/api/login.do =&gt; http://127.0.0.1:9999/api/login.json;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># domain</span></div><div class=\"line\">hiproxy.org =&gt; &#123;</div><div class=\"line\">  <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>此外，也有部分指令采用Nginx的指令名称且功能基本类似，比如<code>proxy_pass</code>、<code>set</code>、<code>ssl_certificate</code>和<code>ssl_certificate_key</code>等。但是也<strong>不保证所有的功能细节跟Nginx的指令保持一致</strong>。详细的指令功能说明请参考<a href=\"../rewrite/directive.html\">指令</a>。</p>\n<p><br></p>\n<h3 id=\"hiproxy多个项目中的不同配置文件使用相同的域名吗？\"><a href=\"#hiproxy多个项目中的不同配置文件使用相同的域名吗？\" class=\"headerlink\" title=\"hiproxy多个项目中的不同配置文件使用相同的域名吗？\"></a>hiproxy多个项目中的不同配置文件使用相同的域名吗？</h3><p>支持。</p>\n<p>可以在不同的项目的不同配置文件中，给相同的域名配置代理规则。hiproxy会自动合并相同域名的规则，如果路由配置有冲突，后加载的配置文件的规则会覆盖前面的规则。</p>\n<p><br></p>\n<h3 id=\"hiproxy怎么处理多个配置文件中的规则冲突？\"><a href=\"#hiproxy怎么处理多个配置文件中的规则冲突？\" class=\"headerlink\" title=\"hiproxy怎么处理多个配置文件中的规则冲突？\"></a>hiproxy怎么处理多个配置文件中的规则冲突？</h3><p>详细的配置规则处理文档正在编写。</p>\n<p><br></p>\n<h3 id=\"hiproxy根证书怎么获取／导入？\"><a href=\"#hiproxy根证书怎么获取／导入？\" class=\"headerlink\" title=\"hiproxy根证书怎么获取／导入？\"></a>hiproxy根证书怎么获取／导入？</h3><p>可以查看文档<a href=\"../configuration/ssl_certificate.html\">获取／导入SSL证书</a>。</p>\n<p><br></p>\n<h3 id=\"hiproxy中如何使用自己的SSL证书？\"><a href=\"#hiproxy中如何使用自己的SSL证书？\" class=\"headerlink\" title=\"hiproxy中如何使用自己的SSL证书？\"></a>hiproxy中如何使用自己的SSL证书？</h3><p>默认情况下，在代理https请求的时候，hiproxy会<strong>自动生成证书</strong>，并使用hiproxy自定义的CA证书签名。用户只需要导入hiproxy的根证书。</p>\n<p>如果用户需要使用自定义的证书，可以·使用hiproxy提供的指令来配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssl_certificate     ./hiproxy.org.crt;</div><div class=\"line\">ssl_certificate_key ./hiproxy.org.key;</div></pre></td></tr></table></figure>\n<p><br></p>\n<h3 id=\"…\"><a href=\"#…\" class=\"headerlink\" title=\"…\"></a>…</h3>","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<h3 id=\"hiproxy的核心目的／功能是什么？\"><a href=\"#hiproxy的核心目的／功能是什么？\" class=\"headerlink\" title=\"hiproxy的核心目的／功能是什么？\"></a>hiproxy的核心目的／功能是什么？</h3><p>hiproxy的核心功能是代理请求，主要是为了解决前端开发工程师在本地开发过程中遇到的：</p>\n<ul>\n<li><code>hosts</code>修改后由于DNS缓存不能立刻生效</li>\n<li>需要使用Nginx来做反向代理</li>\n<li>自签名HTTPS证书不受信任</li>\n<li>每个人都在本地维护环境配置文件（hosts／Nginx配置）</li>\n<li>…</li>\n</ul>\n<p><br></p>\n<h3 id=\"hiproxy跟Charles／Fiddler有什么区别？\"><a href=\"#hiproxy跟Charles／Fiddler有什么区别？\" class=\"headerlink\" title=\"hiproxy跟Charles／Fiddler有什么区别？\"></a>hiproxy跟Charles／Fiddler有什么区别？</h3><p>hiproxy跟Charles/Fiddler都有抓包、请求代理的功能，很多核心的功能基本类似。只不过hiproxy是一个命令行的工具，使用配置文件来配置。</p>\n<p>此外，hiproxy现在没有查看网络请求的具体内容的界面，将来会通过插件开发，敬请期待。</p>\n<p><br></p>\n<h3 id=\"hiproxy的hosts跟系统hosts有什么关系？\"><a href=\"#hiproxy的hosts跟系统hosts有什么关系？\" class=\"headerlink\" title=\"hiproxy的hosts跟系统hosts有什么关系？\"></a>hiproxy的hosts跟系统hosts有什么关系？</h3><p>hiproxy的hosts跟系统hosts文件本身没有任何关系。</p>\n<p>hiproxy的hosts文件一般存放在项目中，或者其他目录（根据用户情况自己决定放到哪里）。hiproxy代理服务启动的时候，会查找并解析这些hosts文件，<strong>不会去查找解析系统hosts</strong>。</p>\n<p><br></p>\n<h3 id=\"hiproxy的rewrite配置文件完全兼容Nginx配置吗？\"><a href=\"#hiproxy的rewrite配置文件完全兼容Nginx配置吗？\" class=\"headerlink\" title=\"hiproxy的rewrite配置文件完全兼容Nginx配置吗？\"></a>hiproxy的rewrite配置文件完全兼容Nginx配置吗？</h3><p>不兼容，hiproxy的rewrite规则配置文件跟Nginx的配置文件本身没有任何关系。</p>\n<p>从语法上看，hiproxy的rewrite配置文件借鉴了Nginx配置的语法。核心的语法跟Nginx的语法一致，但是也有些语法是hiproxy特有的，并不完全跟Nginx语法一致，比如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># base rule</span></div><div class=\"line\">http://hiproxy.org/api/login.do =&gt; http://127.0.0.1:9999/api/login.json;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># domain</span></div><div class=\"line\">hiproxy.org =&gt; &#123;</div><div class=\"line\">  <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>此外，也有部分指令采用Nginx的指令名称且功能基本类似，比如<code>proxy_pass</code>、<code>set</code>、<code>ssl_certificate</code>和<code>ssl_certificate_key</code>等。但是也<strong>不保证所有的功能细节跟Nginx的指令保持一致</strong>。详细的指令功能说明请参考<a href=\"../rewrite/directive.html\">指令</a>。</p>\n<p><br></p>\n<h3 id=\"hiproxy多个项目中的不同配置文件使用相同的域名吗？\"><a href=\"#hiproxy多个项目中的不同配置文件使用相同的域名吗？\" class=\"headerlink\" title=\"hiproxy多个项目中的不同配置文件使用相同的域名吗？\"></a>hiproxy多个项目中的不同配置文件使用相同的域名吗？</h3><p>支持。</p>\n<p>可以在不同的项目的不同配置文件中，给相同的域名配置代理规则。hiproxy会自动合并相同域名的规则，如果路由配置有冲突，后加载的配置文件的规则会覆盖前面的规则。</p>\n<p><br></p>\n<h3 id=\"hiproxy怎么处理多个配置文件中的规则冲突？\"><a href=\"#hiproxy怎么处理多个配置文件中的规则冲突？\" class=\"headerlink\" title=\"hiproxy怎么处理多个配置文件中的规则冲突？\"></a>hiproxy怎么处理多个配置文件中的规则冲突？</h3><p>详细的配置规则处理文档正在编写。</p>\n<p><br></p>\n<h3 id=\"hiproxy根证书怎么获取／导入？\"><a href=\"#hiproxy根证书怎么获取／导入？\" class=\"headerlink\" title=\"hiproxy根证书怎么获取／导入？\"></a>hiproxy根证书怎么获取／导入？</h3><p>可以查看文档<a href=\"../configuration/ssl_certificate.html\">获取／导入SSL证书</a>。</p>\n<p><br></p>\n<h3 id=\"hiproxy中如何使用自己的SSL证书？\"><a href=\"#hiproxy中如何使用自己的SSL证书？\" class=\"headerlink\" title=\"hiproxy中如何使用自己的SSL证书？\"></a>hiproxy中如何使用自己的SSL证书？</h3><p>默认情况下，在代理https请求的时候，hiproxy会<strong>自动生成证书</strong>，并使用hiproxy自定义的CA证书签名。用户只需要导入hiproxy的根证书。</p>\n<p>如果用户需要使用自定义的证书，可以·使用hiproxy提供的指令来配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssl_certificate     ./hiproxy.org.crt;</div><div class=\"line\">ssl_certificate_key ./hiproxy.org.key;</div></pre></td></tr></table></figure>\n<p><br></p>\n<h3 id=\"…\"><a href=\"#…\" class=\"headerlink\" title=\"…\"></a>…</h3>"},{"title":"运用到现有项目中","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 全局安装hiproxy\n\n如果你还没有安装[hiproxy](https://github.com/hiproxy/hiproxy)，请查看[如何安装](./installation.html)hiproxy。\n\n我们只需要把hiproxy安装到全局就可以了，**不需要将hiproxy作为一个依赖安装到每个项目中**。\n\n## 添加配置文件\n\nhiproxy的两个理念：\n\n* 所有的项目都放到一个工作空间（workspace）下面；\n* 将配置文件（hosts／rewrite配置）放到对应的项目中，提交带代码仓库里面进行版本控制，与团队中其他成员共享。\n\n所以，我们需要把配置文件存放到对应的项目中。针对不同的项目，可以添加不同的配置文件。hiproxy在启动的时候，会自动从工作目录下面查找配置文件。\n\n推荐的工作空间目录结构如下：\n\n```\nworkspace\n  ├── app-1 # 项目1\n  │   ├── hosts   # hosts文件\n  │   ├── rewrite # rewrite文件\n  │   └── src     # 项目代码\n  │   └── ...     # 其他文件\n  │\n  ├── app-2 # 项目2\n  │   ├── hosts   # hosts文件\n  │   ├── rewrite # rewrite文件\n  │   └── src     # 项目代码\n  │   └── ...     # 其他文件\n  │\n  └── app-3 # 项目3\n      ├── hosts   # hosts文件\n      ├── rewrite # rewrite文件\n      └── src     # 项目代码\n      └── ...     # 其他文件\n```\n\n当然，如果你实在是不希望这样去做，想把所有的配置都放到项目之外，你也可以通过启动时添加选项（option）来制定配置文件路径：\n\n```\n-c, --hosts-file <files>   hosts files, format: <file1>[,<file2>[,...]]\n-r, --rewrite-file <files> rewrite config files, format: <file1>[,<file2>[,...]]\n```\n\n> **提示**：\n>\n> * `-c, --hosts-file`和`-r, --rewrite-file`支持**简化版的模式匹配**；比如：`./*/*.conf`；\n> * 支持的语法：`*`, `?`, `[abc]`, `[a-z]`, `[^a-z]`, `[!a-z]`；\n> * 不支持的语法：`**`。\n\n### hosts\n\n[hosts](../configuration/hosts.html)跟系统hosts类似，只不过这个hosts是放到项目中的，如果我们在项目根目录下面创建了hosts文件并且文件名称为`hosts`，hiproxy能自动发现并解析它。\n\n如果文件名称不是`hosts`，则需要我们通过`-c, --hosts-file`来指定。\n\n### rewrite\n\n[rewrite](../configuration/rewrite.html)跟hosts一样，也是放到项目中的，如果我们在项目根目录下面创建了名称为`rewrite`的文件，hiproxy也能自动发现并解析它。\n\n如果文件名称不是`rewrite`，则需要我们通过`-r, --rewrite-file`来指定。\n\n## 提交git\n\nhiproxy希望大家能把上面添加的hosts/rewrite配置文件提交到git中，这样团队中的成员更新代码之后，就能使用这些配置，免去了互相拷贝配置文件的苦恼。\n\n## 启动服务\n\nhiproxy的理念是基于**工作空间**。我们需要在工作空间下启动hiproxy代理服务。假设我们所有的项目都存放在`~/workspace/`，那么这么目录就是我们的工作空间。\n\n当我们进入到这个目录，然后启动hiproxy代理服务，那么hiproxy将查找这个目录下面所有项目的配置文件。\n\n如果你不希望进入工作空间再启动代理服务，也可以在任意目录启动hiproxy并使用选项`-w, --workspace <workspace>`，比如：\n\n```bash\n# 进入到任意目录\nhiproxy start -w ~/workspace/\n```\n\n**提示**：在启动hiproxy代理服务的时候，建议使用`-o, --open [browser-name]`来打开一个浏览器窗口并自动配置好代理。这样就不需要我们自己手动去配置代理。\n\n## 开发调试\n\n启动hiproxy代理服务之后，打开的浏览器窗口里面的所有请求，如果配置了代理规则，都会交给hirpoxy去处理。\n\n不需要配置系统hosts。\n","source":"zh-cn/get_started/applied_to_existing_projects.md","raw":"title: 运用到现有项目中\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 全局安装hiproxy\n\n如果你还没有安装[hiproxy](https://github.com/hiproxy/hiproxy)，请查看[如何安装](./installation.html)hiproxy。\n\n我们只需要把hiproxy安装到全局就可以了，**不需要将hiproxy作为一个依赖安装到每个项目中**。\n\n## 添加配置文件\n\nhiproxy的两个理念：\n\n* 所有的项目都放到一个工作空间（workspace）下面；\n* 将配置文件（hosts／rewrite配置）放到对应的项目中，提交带代码仓库里面进行版本控制，与团队中其他成员共享。\n\n所以，我们需要把配置文件存放到对应的项目中。针对不同的项目，可以添加不同的配置文件。hiproxy在启动的时候，会自动从工作目录下面查找配置文件。\n\n推荐的工作空间目录结构如下：\n\n```\nworkspace\n  ├── app-1 # 项目1\n  │   ├── hosts   # hosts文件\n  │   ├── rewrite # rewrite文件\n  │   └── src     # 项目代码\n  │   └── ...     # 其他文件\n  │\n  ├── app-2 # 项目2\n  │   ├── hosts   # hosts文件\n  │   ├── rewrite # rewrite文件\n  │   └── src     # 项目代码\n  │   └── ...     # 其他文件\n  │\n  └── app-3 # 项目3\n      ├── hosts   # hosts文件\n      ├── rewrite # rewrite文件\n      └── src     # 项目代码\n      └── ...     # 其他文件\n```\n\n当然，如果你实在是不希望这样去做，想把所有的配置都放到项目之外，你也可以通过启动时添加选项（option）来制定配置文件路径：\n\n```\n-c, --hosts-file <files>   hosts files, format: <file1>[,<file2>[,...]]\n-r, --rewrite-file <files> rewrite config files, format: <file1>[,<file2>[,...]]\n```\n\n> **提示**：\n>\n> * `-c, --hosts-file`和`-r, --rewrite-file`支持**简化版的模式匹配**；比如：`./*/*.conf`；\n> * 支持的语法：`*`, `?`, `[abc]`, `[a-z]`, `[^a-z]`, `[!a-z]`；\n> * 不支持的语法：`**`。\n\n### hosts\n\n[hosts](../configuration/hosts.html)跟系统hosts类似，只不过这个hosts是放到项目中的，如果我们在项目根目录下面创建了hosts文件并且文件名称为`hosts`，hiproxy能自动发现并解析它。\n\n如果文件名称不是`hosts`，则需要我们通过`-c, --hosts-file`来指定。\n\n### rewrite\n\n[rewrite](../configuration/rewrite.html)跟hosts一样，也是放到项目中的，如果我们在项目根目录下面创建了名称为`rewrite`的文件，hiproxy也能自动发现并解析它。\n\n如果文件名称不是`rewrite`，则需要我们通过`-r, --rewrite-file`来指定。\n\n## 提交git\n\nhiproxy希望大家能把上面添加的hosts/rewrite配置文件提交到git中，这样团队中的成员更新代码之后，就能使用这些配置，免去了互相拷贝配置文件的苦恼。\n\n## 启动服务\n\nhiproxy的理念是基于**工作空间**。我们需要在工作空间下启动hiproxy代理服务。假设我们所有的项目都存放在`~/workspace/`，那么这么目录就是我们的工作空间。\n\n当我们进入到这个目录，然后启动hiproxy代理服务，那么hiproxy将查找这个目录下面所有项目的配置文件。\n\n如果你不希望进入工作空间再启动代理服务，也可以在任意目录启动hiproxy并使用选项`-w, --workspace <workspace>`，比如：\n\n```bash\n# 进入到任意目录\nhiproxy start -w ~/workspace/\n```\n\n**提示**：在启动hiproxy代理服务的时候，建议使用`-o, --open [browser-name]`来打开一个浏览器窗口并自动配置好代理。这样就不需要我们自己手动去配置代理。\n\n## 开发调试\n\n启动hiproxy代理服务之后，打开的浏览器窗口里面的所有请求，如果配置了代理规则，都会交给hirpoxy去处理。\n\n不需要配置系统hosts。\n","date":"2017-09-16T15:44:13.000Z","updated":"2017-09-16T15:44:13.000Z","path":"zh-cn/get_started/applied_to_existing_projects.html","comments":1,"layout":"page","_id":"cj7nia0jn0011hy0f76k1r1ig","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"全局安装hiproxy\"><a href=\"#全局安装hiproxy\" class=\"headerlink\" title=\"全局安装hiproxy\"></a>全局安装hiproxy</h2><p>如果你还没有安装<a href=\"https://github.com/hiproxy/hiproxy\" target=\"_blank\" rel=\"external\">hiproxy</a>，请查看<a href=\"./installation.html\">如何安装</a>hiproxy。</p>\n<p>我们只需要把hiproxy安装到全局就可以了，<strong>不需要将hiproxy作为一个依赖安装到每个项目中</strong>。</p>\n<h2 id=\"添加配置文件\"><a href=\"#添加配置文件\" class=\"headerlink\" title=\"添加配置文件\"></a>添加配置文件</h2><p>hiproxy的两个理念：</p>\n<ul>\n<li>所有的项目都放到一个工作空间（workspace）下面；</li>\n<li>将配置文件（hosts／rewrite配置）放到对应的项目中，提交带代码仓库里面进行版本控制，与团队中其他成员共享。</li>\n</ul>\n<p>所以，我们需要把配置文件存放到对应的项目中。针对不同的项目，可以添加不同的配置文件。hiproxy在启动的时候，会自动从工作目录下面查找配置文件。</p>\n<p>推荐的工作空间目录结构如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">workspace</div><div class=\"line\">  ├── app-1 # 项目1</div><div class=\"line\">  │   ├── hosts   # hosts文件</div><div class=\"line\">  │   ├── rewrite # rewrite文件</div><div class=\"line\">  │   └── src     # 项目代码</div><div class=\"line\">  │   └── ...     # 其他文件</div><div class=\"line\">  │</div><div class=\"line\">  ├── app-2 # 项目2</div><div class=\"line\">  │   ├── hosts   # hosts文件</div><div class=\"line\">  │   ├── rewrite # rewrite文件</div><div class=\"line\">  │   └── src     # 项目代码</div><div class=\"line\">  │   └── ...     # 其他文件</div><div class=\"line\">  │</div><div class=\"line\">  └── app-3 # 项目3</div><div class=\"line\">      ├── hosts   # hosts文件</div><div class=\"line\">      ├── rewrite # rewrite文件</div><div class=\"line\">      └── src     # 项目代码</div><div class=\"line\">      └── ...     # 其他文件</div></pre></td></tr></table></figure>\n<p>当然，如果你实在是不希望这样去做，想把所有的配置都放到项目之外，你也可以通过启动时添加选项（option）来制定配置文件路径：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">-c, --hosts-file &lt;files&gt;   hosts files, format: &lt;file1&gt;[,&lt;file2&gt;[,...]]</div><div class=\"line\">-r, --rewrite-file &lt;files&gt; rewrite config files, format: &lt;file1&gt;[,&lt;file2&gt;[,...]]</div></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>提示</strong>：</p>\n<ul>\n<li><code>-c, --hosts-file</code>和<code>-r, --rewrite-file</code>支持<strong>简化版的模式匹配</strong>；比如：<code>./*/*.conf</code>；</li>\n<li>支持的语法：<code>*</code>, <code>?</code>, <code>[abc]</code>, <code>[a-z]</code>, <code>[^a-z]</code>, <code>[!a-z]</code>；</li>\n<li>不支持的语法：<code>**</code>。</li>\n</ul>\n</blockquote>\n<h3 id=\"hosts\"><a href=\"#hosts\" class=\"headerlink\" title=\"hosts\"></a>hosts</h3><p><a href=\"../configuration/hosts.html\">hosts</a>跟系统hosts类似，只不过这个hosts是放到项目中的，如果我们在项目根目录下面创建了hosts文件并且文件名称为<code>hosts</code>，hiproxy能自动发现并解析它。</p>\n<p>如果文件名称不是<code>hosts</code>，则需要我们通过<code>-c, --hosts-file</code>来指定。</p>\n<h3 id=\"rewrite\"><a href=\"#rewrite\" class=\"headerlink\" title=\"rewrite\"></a>rewrite</h3><p><a href=\"../configuration/rewrite.html\">rewrite</a>跟hosts一样，也是放到项目中的，如果我们在项目根目录下面创建了名称为<code>rewrite</code>的文件，hiproxy也能自动发现并解析它。</p>\n<p>如果文件名称不是<code>rewrite</code>，则需要我们通过<code>-r, --rewrite-file</code>来指定。</p>\n<h2 id=\"提交git\"><a href=\"#提交git\" class=\"headerlink\" title=\"提交git\"></a>提交git</h2><p>hiproxy希望大家能把上面添加的hosts/rewrite配置文件提交到git中，这样团队中的成员更新代码之后，就能使用这些配置，免去了互相拷贝配置文件的苦恼。</p>\n<h2 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h2><p>hiproxy的理念是基于<strong>工作空间</strong>。我们需要在工作空间下启动hiproxy代理服务。假设我们所有的项目都存放在<code>~/workspace/</code>，那么这么目录就是我们的工作空间。</p>\n<p>当我们进入到这个目录，然后启动hiproxy代理服务，那么hiproxy将查找这个目录下面所有项目的配置文件。</p>\n<p>如果你不希望进入工作空间再启动代理服务，也可以在任意目录启动hiproxy并使用选项<code>-w, --workspace &lt;workspace&gt;</code>，比如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 进入到任意目录</span></div><div class=\"line\">hiproxy start -w ~/workspace/</div></pre></td></tr></table></figure>\n<p><strong>提示</strong>：在启动hiproxy代理服务的时候，建议使用<code>-o, --open [browser-name]</code>来打开一个浏览器窗口并自动配置好代理。这样就不需要我们自己手动去配置代理。</p>\n<h2 id=\"开发调试\"><a href=\"#开发调试\" class=\"headerlink\" title=\"开发调试\"></a>开发调试</h2><p>启动hiproxy代理服务之后，打开的浏览器窗口里面的所有请求，如果配置了代理规则，都会交给hirpoxy去处理。</p>\n<p>不需要配置系统hosts。</p>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"全局安装hiproxy\"><a href=\"#全局安装hiproxy\" class=\"headerlink\" title=\"全局安装hiproxy\"></a>全局安装hiproxy</h2><p>如果你还没有安装<a href=\"https://github.com/hiproxy/hiproxy\" target=\"_blank\" rel=\"external\">hiproxy</a>，请查看<a href=\"./installation.html\">如何安装</a>hiproxy。</p>\n<p>我们只需要把hiproxy安装到全局就可以了，<strong>不需要将hiproxy作为一个依赖安装到每个项目中</strong>。</p>\n<h2 id=\"添加配置文件\"><a href=\"#添加配置文件\" class=\"headerlink\" title=\"添加配置文件\"></a>添加配置文件</h2><p>hiproxy的两个理念：</p>\n<ul>\n<li>所有的项目都放到一个工作空间（workspace）下面；</li>\n<li>将配置文件（hosts／rewrite配置）放到对应的项目中，提交带代码仓库里面进行版本控制，与团队中其他成员共享。</li>\n</ul>\n<p>所以，我们需要把配置文件存放到对应的项目中。针对不同的项目，可以添加不同的配置文件。hiproxy在启动的时候，会自动从工作目录下面查找配置文件。</p>\n<p>推荐的工作空间目录结构如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">workspace</div><div class=\"line\">  ├── app-1 # 项目1</div><div class=\"line\">  │   ├── hosts   # hosts文件</div><div class=\"line\">  │   ├── rewrite # rewrite文件</div><div class=\"line\">  │   └── src     # 项目代码</div><div class=\"line\">  │   └── ...     # 其他文件</div><div class=\"line\">  │</div><div class=\"line\">  ├── app-2 # 项目2</div><div class=\"line\">  │   ├── hosts   # hosts文件</div><div class=\"line\">  │   ├── rewrite # rewrite文件</div><div class=\"line\">  │   └── src     # 项目代码</div><div class=\"line\">  │   └── ...     # 其他文件</div><div class=\"line\">  │</div><div class=\"line\">  └── app-3 # 项目3</div><div class=\"line\">      ├── hosts   # hosts文件</div><div class=\"line\">      ├── rewrite # rewrite文件</div><div class=\"line\">      └── src     # 项目代码</div><div class=\"line\">      └── ...     # 其他文件</div></pre></td></tr></table></figure>\n<p>当然，如果你实在是不希望这样去做，想把所有的配置都放到项目之外，你也可以通过启动时添加选项（option）来制定配置文件路径：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">-c, --hosts-file &lt;files&gt;   hosts files, format: &lt;file1&gt;[,&lt;file2&gt;[,...]]</div><div class=\"line\">-r, --rewrite-file &lt;files&gt; rewrite config files, format: &lt;file1&gt;[,&lt;file2&gt;[,...]]</div></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>提示</strong>：</p>\n<ul>\n<li><code>-c, --hosts-file</code>和<code>-r, --rewrite-file</code>支持<strong>简化版的模式匹配</strong>；比如：<code>./*/*.conf</code>；</li>\n<li>支持的语法：<code>*</code>, <code>?</code>, <code>[abc]</code>, <code>[a-z]</code>, <code>[^a-z]</code>, <code>[!a-z]</code>；</li>\n<li>不支持的语法：<code>**</code>。</li>\n</ul>\n</blockquote>\n<h3 id=\"hosts\"><a href=\"#hosts\" class=\"headerlink\" title=\"hosts\"></a>hosts</h3><p><a href=\"../configuration/hosts.html\">hosts</a>跟系统hosts类似，只不过这个hosts是放到项目中的，如果我们在项目根目录下面创建了hosts文件并且文件名称为<code>hosts</code>，hiproxy能自动发现并解析它。</p>\n<p>如果文件名称不是<code>hosts</code>，则需要我们通过<code>-c, --hosts-file</code>来指定。</p>\n<h3 id=\"rewrite\"><a href=\"#rewrite\" class=\"headerlink\" title=\"rewrite\"></a>rewrite</h3><p><a href=\"../configuration/rewrite.html\">rewrite</a>跟hosts一样，也是放到项目中的，如果我们在项目根目录下面创建了名称为<code>rewrite</code>的文件，hiproxy也能自动发现并解析它。</p>\n<p>如果文件名称不是<code>rewrite</code>，则需要我们通过<code>-r, --rewrite-file</code>来指定。</p>\n<h2 id=\"提交git\"><a href=\"#提交git\" class=\"headerlink\" title=\"提交git\"></a>提交git</h2><p>hiproxy希望大家能把上面添加的hosts/rewrite配置文件提交到git中，这样团队中的成员更新代码之后，就能使用这些配置，免去了互相拷贝配置文件的苦恼。</p>\n<h2 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h2><p>hiproxy的理念是基于<strong>工作空间</strong>。我们需要在工作空间下启动hiproxy代理服务。假设我们所有的项目都存放在<code>~/workspace/</code>，那么这么目录就是我们的工作空间。</p>\n<p>当我们进入到这个目录，然后启动hiproxy代理服务，那么hiproxy将查找这个目录下面所有项目的配置文件。</p>\n<p>如果你不希望进入工作空间再启动代理服务，也可以在任意目录启动hiproxy并使用选项<code>-w, --workspace &lt;workspace&gt;</code>，比如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 进入到任意目录</span></div><div class=\"line\">hiproxy start -w ~/workspace/</div></pre></td></tr></table></figure>\n<p><strong>提示</strong>：在启动hiproxy代理服务的时候，建议使用<code>-o, --open [browser-name]</code>来打开一个浏览器窗口并自动配置好代理。这样就不需要我们自己手动去配置代理。</p>\n<h2 id=\"开发调试\"><a href=\"#开发调试\" class=\"headerlink\" title=\"开发调试\"></a>开发调试</h2><p>启动hiproxy代理服务之后，打开的浏览器窗口里面的所有请求，如果配置了代理规则，都会交给hirpoxy去处理。</p>\n<p>不需要配置系统hosts。</p>\n"},{"title":"页面路由配置","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n> \n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 简介\n\nhiproxy启动服务之后，可以访问`http://127.0.0.1:<port>/`页面查看服务的一些基本信息。\n\n除了上面的页面之外，hiproxy还提供了增加新页面的功能。比如插件[hiproxy-plugin-dashboard](https://github.com/hiproxy/hiproxy-plugin-dashboard)，为hiproxy增加了一个在线查看服务信息以及修改配置文件的页面，地址为：`http://127.0.0.1:<port>/dashboard/`。\n\n\n## 配置内容\n\n页面路由可以配置的内容为：`路由规则`和`渲染函数`。对应的字段为：\n\n* 路由规则（route）：`<String>`，页面的地址模式，比如：`'/dashboard(/:page)'`，细节可以查看<https://www.npmjs.com/package/url-pattern>。\n* 渲染函数（render）：`<Function>`，渲染页面，接收三个参数：`(route, request, response)`。\n\n## render方法\n\n当用户访问对应的页面时，`render()`方法会被调用，传入三个参数`(route, request, response)`。\n\n- **route**: `<Object>`，url模式匹配后的对象，比如配置了`/test(/:pageName)`之后，访问`/test/home`时`route`的值为：`{pageName: 'home'}`。\n- **request**: `<http.IncomingMessage>`，http请求对象。\n- **response**: `<http.ServerResponse>`，http响应对象。\n\n## 示例\n\n一个完整的页面扩展示例如下：\n\n```js\n{\n  route: '/test(/:pageName)',\n  render: function (route, request, response) {\n    // 这里面可以使用全局变量`hiproxyServer`来获取hiproxy服务实例\n    response.writeHead(200, {\n      'Content-Type': 'text/html',\n      'Powder-By': 'hiproxy-plugin-example'\n    });\n\n    var serverInfo = {\n      route: route,\n      pageID: route.pageName,\n      time: new Date(),\n      serverState: {\n        http_port: global.hiproxyServer.httpPort,\n        https_port: global.hiproxyServer.httpsPort,\n        cliArgs: global.args,\n        process_id: process.pid\n      }\n    };\n\n    response.end('<pre>' + JSON.stringify(serverInfo, null, 4) + '</pre>');\n  }\n}\n```\n","source":"zh-cn/developers/route.md","raw":"title: 页面路由配置\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n> \n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 简介\n\nhiproxy启动服务之后，可以访问`http://127.0.0.1:<port>/`页面查看服务的一些基本信息。\n\n除了上面的页面之外，hiproxy还提供了增加新页面的功能。比如插件[hiproxy-plugin-dashboard](https://github.com/hiproxy/hiproxy-plugin-dashboard)，为hiproxy增加了一个在线查看服务信息以及修改配置文件的页面，地址为：`http://127.0.0.1:<port>/dashboard/`。\n\n\n## 配置内容\n\n页面路由可以配置的内容为：`路由规则`和`渲染函数`。对应的字段为：\n\n* 路由规则（route）：`<String>`，页面的地址模式，比如：`'/dashboard(/:page)'`，细节可以查看<https://www.npmjs.com/package/url-pattern>。\n* 渲染函数（render）：`<Function>`，渲染页面，接收三个参数：`(route, request, response)`。\n\n## render方法\n\n当用户访问对应的页面时，`render()`方法会被调用，传入三个参数`(route, request, response)`。\n\n- **route**: `<Object>`，url模式匹配后的对象，比如配置了`/test(/:pageName)`之后，访问`/test/home`时`route`的值为：`{pageName: 'home'}`。\n- **request**: `<http.IncomingMessage>`，http请求对象。\n- **response**: `<http.ServerResponse>`，http响应对象。\n\n## 示例\n\n一个完整的页面扩展示例如下：\n\n```js\n{\n  route: '/test(/:pageName)',\n  render: function (route, request, response) {\n    // 这里面可以使用全局变量`hiproxyServer`来获取hiproxy服务实例\n    response.writeHead(200, {\n      'Content-Type': 'text/html',\n      'Powder-By': 'hiproxy-plugin-example'\n    });\n\n    var serverInfo = {\n      route: route,\n      pageID: route.pageName,\n      time: new Date(),\n      serverState: {\n        http_port: global.hiproxyServer.httpPort,\n        https_port: global.hiproxyServer.httpsPort,\n        cliArgs: global.args,\n        process_id: process.pid\n      }\n    };\n\n    response.end('<pre>' + JSON.stringify(serverInfo, null, 4) + '</pre>');\n  }\n}\n```\n","date":"2017-09-16T03:56:01.000Z","updated":"2017-09-15T13:21:42.000Z","path":"zh-cn/developers/route.html","comments":1,"layout":"page","_id":"cj7nia0jo0012hy0fp9ca9tyj","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>hiproxy启动服务之后，可以访问<code>http://127.0.0.1:&lt;port&gt;/</code>页面查看服务的一些基本信息。</p>\n<p>除了上面的页面之外，hiproxy还提供了增加新页面的功能。比如插件<a href=\"https://github.com/hiproxy/hiproxy-plugin-dashboard\" target=\"_blank\" rel=\"external\">hiproxy-plugin-dashboard</a>，为hiproxy增加了一个在线查看服务信息以及修改配置文件的页面，地址为：<code>http://127.0.0.1:&lt;port&gt;/dashboard/</code>。</p>\n<h2 id=\"配置内容\"><a href=\"#配置内容\" class=\"headerlink\" title=\"配置内容\"></a>配置内容</h2><p>页面路由可以配置的内容为：<code>路由规则</code>和<code>渲染函数</code>。对应的字段为：</p>\n<ul>\n<li>路由规则（route）：<code>&lt;String&gt;</code>，页面的地址模式，比如：<code>&#39;/dashboard(/:page)&#39;</code>，细节可以查看<a href=\"https://www.npmjs.com/package/url-pattern\" target=\"_blank\" rel=\"external\">https://www.npmjs.com/package/url-pattern</a>。</li>\n<li>渲染函数（render）：<code>&lt;Function&gt;</code>，渲染页面，接收三个参数：<code>(route, request, response)</code>。</li>\n</ul>\n<h2 id=\"render方法\"><a href=\"#render方法\" class=\"headerlink\" title=\"render方法\"></a>render方法</h2><p>当用户访问对应的页面时，<code>render()</code>方法会被调用，传入三个参数<code>(route, request, response)</code>。</p>\n<ul>\n<li><strong>route</strong>: <code>&lt;Object&gt;</code>，url模式匹配后的对象，比如配置了<code>/test(/:pageName)</code>之后，访问<code>/test/home</code>时<code>route</code>的值为：<code>{pageName: &#39;home&#39;}</code>。</li>\n<li><strong>request</strong>: <code>&lt;http.IncomingMessage&gt;</code>，http请求对象。</li>\n<li><strong>response</strong>: <code>&lt;http.ServerResponse&gt;</code>，http响应对象。</li>\n</ul>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>一个完整的页面扩展示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  route: <span class=\"string\">'/test(/:pageName)'</span>,</div><div class=\"line\">  render: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">route, request, response</span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 这里面可以使用全局变量`hiproxyServer`来获取hiproxy服务实例</span></div><div class=\"line\">    response.writeHead(<span class=\"number\">200</span>, &#123;</div><div class=\"line\">      <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'text/html'</span>,</div><div class=\"line\">      <span class=\"string\">'Powder-By'</span>: <span class=\"string\">'hiproxy-plugin-example'</span></div><div class=\"line\">    &#125;);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">var</span> serverInfo = &#123;</div><div class=\"line\">      route: route,</div><div class=\"line\">      pageID: route.pageName,</div><div class=\"line\">      time: <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(),</div><div class=\"line\">      serverState: &#123;</div><div class=\"line\">        http_port: global.hiproxyServer.httpPort,</div><div class=\"line\">        https_port: global.hiproxyServer.httpsPort,</div><div class=\"line\">        cliArgs: global.args,</div><div class=\"line\">        process_id: process.pid</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    response.end(<span class=\"string\">'&lt;pre&gt;'</span> + <span class=\"built_in\">JSON</span>.stringify(serverInfo, <span class=\"literal\">null</span>, <span class=\"number\">4</span>) + <span class=\"string\">'&lt;/pre&gt;'</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>hiproxy启动服务之后，可以访问<code>http://127.0.0.1:&lt;port&gt;/</code>页面查看服务的一些基本信息。</p>\n<p>除了上面的页面之外，hiproxy还提供了增加新页面的功能。比如插件<a href=\"https://github.com/hiproxy/hiproxy-plugin-dashboard\" target=\"_blank\" rel=\"external\">hiproxy-plugin-dashboard</a>，为hiproxy增加了一个在线查看服务信息以及修改配置文件的页面，地址为：<code>http://127.0.0.1:&lt;port&gt;/dashboard/</code>。</p>\n<h2 id=\"配置内容\"><a href=\"#配置内容\" class=\"headerlink\" title=\"配置内容\"></a>配置内容</h2><p>页面路由可以配置的内容为：<code>路由规则</code>和<code>渲染函数</code>。对应的字段为：</p>\n<ul>\n<li>路由规则（route）：<code>&lt;String&gt;</code>，页面的地址模式，比如：<code>&#39;/dashboard(/:page)&#39;</code>，细节可以查看<a href=\"https://www.npmjs.com/package/url-pattern\" target=\"_blank\" rel=\"external\">https://www.npmjs.com/package/url-pattern</a>。</li>\n<li>渲染函数（render）：<code>&lt;Function&gt;</code>，渲染页面，接收三个参数：<code>(route, request, response)</code>。</li>\n</ul>\n<h2 id=\"render方法\"><a href=\"#render方法\" class=\"headerlink\" title=\"render方法\"></a>render方法</h2><p>当用户访问对应的页面时，<code>render()</code>方法会被调用，传入三个参数<code>(route, request, response)</code>。</p>\n<ul>\n<li><strong>route</strong>: <code>&lt;Object&gt;</code>，url模式匹配后的对象，比如配置了<code>/test(/:pageName)</code>之后，访问<code>/test/home</code>时<code>route</code>的值为：<code>{pageName: &#39;home&#39;}</code>。</li>\n<li><strong>request</strong>: <code>&lt;http.IncomingMessage&gt;</code>，http请求对象。</li>\n<li><strong>response</strong>: <code>&lt;http.ServerResponse&gt;</code>，http响应对象。</li>\n</ul>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>一个完整的页面扩展示例如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  route: <span class=\"string\">'/test(/:pageName)'</span>,</div><div class=\"line\">  render: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">route, request, response</span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 这里面可以使用全局变量`hiproxyServer`来获取hiproxy服务实例</span></div><div class=\"line\">    response.writeHead(<span class=\"number\">200</span>, &#123;</div><div class=\"line\">      <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'text/html'</span>,</div><div class=\"line\">      <span class=\"string\">'Powder-By'</span>: <span class=\"string\">'hiproxy-plugin-example'</span></div><div class=\"line\">    &#125;);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">var</span> serverInfo = &#123;</div><div class=\"line\">      route: route,</div><div class=\"line\">      pageID: route.pageName,</div><div class=\"line\">      time: <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(),</div><div class=\"line\">      serverState: &#123;</div><div class=\"line\">        http_port: global.hiproxyServer.httpPort,</div><div class=\"line\">        https_port: global.hiproxyServer.httpsPort,</div><div class=\"line\">        cliArgs: global.args,</div><div class=\"line\">        process_id: process.pid</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    response.end(<span class=\"string\">'&lt;pre&gt;'</span> + <span class=\"built_in\">JSON</span>.stringify(serverInfo, <span class=\"literal\">null</span>, <span class=\"number\">4</span>) + <span class=\"string\">'&lt;/pre&gt;'</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"title":"简介","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\nhiproxy是一个基于Node.js开发的轻量、可扩展的网络代理工具，主要目的是为了解决多个开发者在开发过程中遇到的hosts管理和请求代理的问题。使得在开发时，不再需要修改系统hosts和启动一个Nginx服务。\n\nhiproxy支持hosts配置文件，同时也扩展了hosts的语法，支持端口号。此外，hiproxy还支跟Nginx配置文件相似语法的配置文件。\n\n## 为什么要开发hiproxy\n\n在前端开发中，如果我们通常会遇到下面的一些问题：\n\n1. 调试线上页面问题，要在本地进行开发，需要能运行后端的项目（Node.js或者Java等项目），__前端工程师在本地搭建一套后端环境，可能代价比较大__。\n2. 如果有多个前端工程，__采用一个域名__，__部分工程__ 需要请求 __线上__ 资源，__部分__ 工程请求 __本地__。\n3. 为解决跨域等问题，本地开发时需要 __修改Response Header__。\n4. 本地开发https站点时，__证书不受信任__。\n5. 系统 __hosts修改__ 后，__不会立即生效__。\n\n我们可以使用Nginx来解决上面的问题。Nginx很优秀，也是我们前端开发工程师的一个非常好的朋友。Nginx的配置文件风格，非常直观，编写配置效率很高。\n\n但是，使用Nginx的时候，我们同时需要使用hosts，把相关请求发送到本地的Nginx服务。\n\n此外，大部分情况下，Nginx的配置文件并不会被提交到代码仓库，所以团队中其他开发者之间会互相拷贝配置文件，这样效率比较低，而且一个人修改了配置文件，其他人的配置不会随之更新。对于多个域名的配置，也都是放到一个统一的目录，然后在主配置里面include，这样也不太方便。\n\n__hosts__、__反向代理__、__https__ 和 __缓存__ 这些琐碎的事情，能不能统一解决？\n\n于是有了hiproxy。\n\n## 特色\n\n* 支持Nginx风格的配置文件格式，配置简单直观\n* 支持hosts以及扩展（支持端口号）\n* 支持插件扩展rewrite指令、CLI命令和页面\n* 支持HTTPS证书自动生成\n* 支持代理自动配置（Proxy auto-config）\n* 支持后台启动，日志输出到文件\n* 支持配置文件自动查找\n* 支持打开浏览器窗口并自动配置代理\n* 提供Node.js API\n* ...\n\n## 理念\n\n我们经过对很多现有开发模式的反思、总结现在遇到的一些问题，基于以下两个理念开发出了hiproxy：\n\n* **工作空间**：hiproxy工作在工作空间（workspace）中，工作空间中所有项目的配置文件都会被hiproxy解析。*工作空间可以通过`-w, --workspace <workspace>`来指定，也可以直接进入到工作空间启动代理服务*。\n* **配置文件共享**：配置文件，提交到代码仓库，团队成员共享配置。之前hosts和Nginx配置一般都是不提交到代码仓库，团队成员各自本地维护，成本大并且效率比较低。\n\n## 基本原理\n\nhiproxy的核心功能是请求代理，在代理请求的同时，处理了一些开发中的细节问题，比如https证书自动生成、自动配置浏览器代理等。\n\n下面讲介绍hiproxy核心功能的基本原理。\n\n### 请求代理\n\nhiproxy充分利用了[中间人攻击](https://en.wikipedia.org/wiki/Man-in-the-middle_attack)模式，作为中间人在客户端和服务器端转发数据，来实现HTTP以及HTTPS请求的代理。\n\n#### HTTP请求代理\n\n对于**HTTP请求**，如果浏览器配置了代理，浏览器会发送`GET`/`POST`等请求给hiproxy代理。hiproxy收到请求之后，根据用户的`hosts`和`rewrite`规则配置，对请求的信息做一定的修改，然后去相应的服务器请求资源并返回给客户端。\n\n#### HTTPS请求代理\n\n对于**HTTPS请求**，配置代理之后，浏览器会发送`CONNECT`请求到hiproxy服务，hiproxy会新建一个到最终目标服务器的TCP连接（也就是新建了一个隧道）然后在客户端和服务端之间转发数据。\n\n但是这只是能简单代理请求，hiproxy没办法获取到请求的信息，比如参数和Cookie，更没有办法修改响应的数据。如果不需要对请求、响应的信息做对应的修改，这就能满足我们的需求。\n\n如果我们需要实现跟HTTP请求一样的功能：根据请求的信息，对请求和响应做一些修改，需要怎么做呢？\n\n好在我们可以充分利用[中间人攻击](https://en.wikipedia.org/wiki/Man-in-the-middle_attack)这种模式。因为最终的目标服务器能获取到请求的信息，我们可以在hiproxy和最终服务器之间再启动一个中间人服务（这里简称为*M*），当hiproxy收到`CONNECT`请求之后，新建一个到*M*的连接，当*M*收到请求之后，跟HTTP请求代理一样，对请求信息做一些修改，然后去目标服务器请求资源并返回给客户端。\n\n### HTTPS证书生成\n\n在SSL/TLS握手过程中，客户端发送的第一个消息（Client Hello）中，会使用[SNI(Server Name Indication\n)](https://en.wikipedia.org/wiki/Server_Name_Indication)扩展，将请求的域名发送给服务器。虽然只发送了域名信息，并没有发送其他的请求路径、参数和cookie等信息，但是对于生成证书来说，有域名已经足够。\n\n当hiproxy获取到请求的域名时：\n\n* 如果用户给对应的域名配置了证书，将用户配置的证书发送给客户端。\n* 否则，生成新的域名证书返回给客户端。\n\n### 浏览器窗口\n\n首先，找到系统中浏览器对应的路径。比如在OSX上，查找`<browser-name>.app`，然后启动这个app，并传入参数来配置代理服务器地址。\n\n```bash\n<path-to-chrome-app>.app [options] [url]\n```\n\n在windows上，会去注册表中查找对应浏览器的`exe`文件路径。然后运行并传递参数。\n\n```bash\n<path-to-chrome-app>.exe [options] [url]\n```\n\n对于Chrome/Opera浏览器来说，我们需要传递两个方面的参数：\n\n* **代理服务的地址**：`--proxy-pac-url`（PAC代理文件路径）和`--proxy-server`（普通代理地址）二选一，这两种代理hiproxy都支持。\n\n* **用户数据存放的目录**：`--user-data-dir`当传递这个参数，并且这个目录不是浏览器默认存放用户数据的目录，则会新建一个新的浏览器实例，这个示例独立于其他的浏览器窗口，互不影响（这个实例配置了代理，其他浏览器实例的请求不会通过这里配置的代理）。\n\n\n### 配置文件\n\nhiproxy可以使用hosts来做简单的请求代理，对于复杂的配置使用跟Nginx语法类似的rewrite规则配置。\n\n#### hosts\n\n跟系统`hosts`语法一致，此外也支持端口号。hosts只能配置域名对应的ip和端口号，不支持详细的路由配置以及对请求响应做修改。更多详细信息请查看[hosts](../configuration/hosts.html)。\n\n#### hosts配置示例\n\n```bash\n# comment\n127.0.0.1 example.com\n\n# ip + port\n127.0.0.1:8800 blog.example.com life.example.com\n```\n\n#### rewrite\n\nrewrite规则配置文件，可以使用更复杂的配置、满足复杂的使用场景。可以对路由进行详细的配置以及对请求响应做修改。rewrite规则配置的语法，跟Nginx语法非常类似。更多详细信息请查看[rewrite](../configuration/rewrite.html)。\n\n#### rewrite配置示例\n\n```bash\n# 全局变量\nset $port 8899;\nset $ip   127.0.0.1;\nset $online 210.0.0.0;\n\n# 域名配置\ndomain example.com {\n  location / {\n    proxy_pass http://$online/;\n  }\n\n  location /blog/ {\n    proxy_pass http://$ip:$port/blog/;\n    proxy_set_header from 'hiproxy';\n    set_header proxy 'hiproxy';\n  }\n}\n```\n\n### 插件机制\n\nhiproxy启动的时候，会自动从npm全局模块所在目录（`npm root -g`）查找以`hiproxy-plugin-`开头的模块，找到这些模块之后自动解析插件内容。\n\n因此，我们只需要独立全局安装需要的插件，不用去升级hiproxy，hiproxy插件的开发也是独立的，插件项目本身不依赖hiproxy。\n\n详细的插件相关文档请查看[hiproxy插件指南](../developers/plugin.html)；\n\n","source":"zh-cn/get_started/index.md","raw":"title: 简介\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\nhiproxy是一个基于Node.js开发的轻量、可扩展的网络代理工具，主要目的是为了解决多个开发者在开发过程中遇到的hosts管理和请求代理的问题。使得在开发时，不再需要修改系统hosts和启动一个Nginx服务。\n\nhiproxy支持hosts配置文件，同时也扩展了hosts的语法，支持端口号。此外，hiproxy还支跟Nginx配置文件相似语法的配置文件。\n\n## 为什么要开发hiproxy\n\n在前端开发中，如果我们通常会遇到下面的一些问题：\n\n1. 调试线上页面问题，要在本地进行开发，需要能运行后端的项目（Node.js或者Java等项目），__前端工程师在本地搭建一套后端环境，可能代价比较大__。\n2. 如果有多个前端工程，__采用一个域名__，__部分工程__ 需要请求 __线上__ 资源，__部分__ 工程请求 __本地__。\n3. 为解决跨域等问题，本地开发时需要 __修改Response Header__。\n4. 本地开发https站点时，__证书不受信任__。\n5. 系统 __hosts修改__ 后，__不会立即生效__。\n\n我们可以使用Nginx来解决上面的问题。Nginx很优秀，也是我们前端开发工程师的一个非常好的朋友。Nginx的配置文件风格，非常直观，编写配置效率很高。\n\n但是，使用Nginx的时候，我们同时需要使用hosts，把相关请求发送到本地的Nginx服务。\n\n此外，大部分情况下，Nginx的配置文件并不会被提交到代码仓库，所以团队中其他开发者之间会互相拷贝配置文件，这样效率比较低，而且一个人修改了配置文件，其他人的配置不会随之更新。对于多个域名的配置，也都是放到一个统一的目录，然后在主配置里面include，这样也不太方便。\n\n__hosts__、__反向代理__、__https__ 和 __缓存__ 这些琐碎的事情，能不能统一解决？\n\n于是有了hiproxy。\n\n## 特色\n\n* 支持Nginx风格的配置文件格式，配置简单直观\n* 支持hosts以及扩展（支持端口号）\n* 支持插件扩展rewrite指令、CLI命令和页面\n* 支持HTTPS证书自动生成\n* 支持代理自动配置（Proxy auto-config）\n* 支持后台启动，日志输出到文件\n* 支持配置文件自动查找\n* 支持打开浏览器窗口并自动配置代理\n* 提供Node.js API\n* ...\n\n## 理念\n\n我们经过对很多现有开发模式的反思、总结现在遇到的一些问题，基于以下两个理念开发出了hiproxy：\n\n* **工作空间**：hiproxy工作在工作空间（workspace）中，工作空间中所有项目的配置文件都会被hiproxy解析。*工作空间可以通过`-w, --workspace <workspace>`来指定，也可以直接进入到工作空间启动代理服务*。\n* **配置文件共享**：配置文件，提交到代码仓库，团队成员共享配置。之前hosts和Nginx配置一般都是不提交到代码仓库，团队成员各自本地维护，成本大并且效率比较低。\n\n## 基本原理\n\nhiproxy的核心功能是请求代理，在代理请求的同时，处理了一些开发中的细节问题，比如https证书自动生成、自动配置浏览器代理等。\n\n下面讲介绍hiproxy核心功能的基本原理。\n\n### 请求代理\n\nhiproxy充分利用了[中间人攻击](https://en.wikipedia.org/wiki/Man-in-the-middle_attack)模式，作为中间人在客户端和服务器端转发数据，来实现HTTP以及HTTPS请求的代理。\n\n#### HTTP请求代理\n\n对于**HTTP请求**，如果浏览器配置了代理，浏览器会发送`GET`/`POST`等请求给hiproxy代理。hiproxy收到请求之后，根据用户的`hosts`和`rewrite`规则配置，对请求的信息做一定的修改，然后去相应的服务器请求资源并返回给客户端。\n\n#### HTTPS请求代理\n\n对于**HTTPS请求**，配置代理之后，浏览器会发送`CONNECT`请求到hiproxy服务，hiproxy会新建一个到最终目标服务器的TCP连接（也就是新建了一个隧道）然后在客户端和服务端之间转发数据。\n\n但是这只是能简单代理请求，hiproxy没办法获取到请求的信息，比如参数和Cookie，更没有办法修改响应的数据。如果不需要对请求、响应的信息做对应的修改，这就能满足我们的需求。\n\n如果我们需要实现跟HTTP请求一样的功能：根据请求的信息，对请求和响应做一些修改，需要怎么做呢？\n\n好在我们可以充分利用[中间人攻击](https://en.wikipedia.org/wiki/Man-in-the-middle_attack)这种模式。因为最终的目标服务器能获取到请求的信息，我们可以在hiproxy和最终服务器之间再启动一个中间人服务（这里简称为*M*），当hiproxy收到`CONNECT`请求之后，新建一个到*M*的连接，当*M*收到请求之后，跟HTTP请求代理一样，对请求信息做一些修改，然后去目标服务器请求资源并返回给客户端。\n\n### HTTPS证书生成\n\n在SSL/TLS握手过程中，客户端发送的第一个消息（Client Hello）中，会使用[SNI(Server Name Indication\n)](https://en.wikipedia.org/wiki/Server_Name_Indication)扩展，将请求的域名发送给服务器。虽然只发送了域名信息，并没有发送其他的请求路径、参数和cookie等信息，但是对于生成证书来说，有域名已经足够。\n\n当hiproxy获取到请求的域名时：\n\n* 如果用户给对应的域名配置了证书，将用户配置的证书发送给客户端。\n* 否则，生成新的域名证书返回给客户端。\n\n### 浏览器窗口\n\n首先，找到系统中浏览器对应的路径。比如在OSX上，查找`<browser-name>.app`，然后启动这个app，并传入参数来配置代理服务器地址。\n\n```bash\n<path-to-chrome-app>.app [options] [url]\n```\n\n在windows上，会去注册表中查找对应浏览器的`exe`文件路径。然后运行并传递参数。\n\n```bash\n<path-to-chrome-app>.exe [options] [url]\n```\n\n对于Chrome/Opera浏览器来说，我们需要传递两个方面的参数：\n\n* **代理服务的地址**：`--proxy-pac-url`（PAC代理文件路径）和`--proxy-server`（普通代理地址）二选一，这两种代理hiproxy都支持。\n\n* **用户数据存放的目录**：`--user-data-dir`当传递这个参数，并且这个目录不是浏览器默认存放用户数据的目录，则会新建一个新的浏览器实例，这个示例独立于其他的浏览器窗口，互不影响（这个实例配置了代理，其他浏览器实例的请求不会通过这里配置的代理）。\n\n\n### 配置文件\n\nhiproxy可以使用hosts来做简单的请求代理，对于复杂的配置使用跟Nginx语法类似的rewrite规则配置。\n\n#### hosts\n\n跟系统`hosts`语法一致，此外也支持端口号。hosts只能配置域名对应的ip和端口号，不支持详细的路由配置以及对请求响应做修改。更多详细信息请查看[hosts](../configuration/hosts.html)。\n\n#### hosts配置示例\n\n```bash\n# comment\n127.0.0.1 example.com\n\n# ip + port\n127.0.0.1:8800 blog.example.com life.example.com\n```\n\n#### rewrite\n\nrewrite规则配置文件，可以使用更复杂的配置、满足复杂的使用场景。可以对路由进行详细的配置以及对请求响应做修改。rewrite规则配置的语法，跟Nginx语法非常类似。更多详细信息请查看[rewrite](../configuration/rewrite.html)。\n\n#### rewrite配置示例\n\n```bash\n# 全局变量\nset $port 8899;\nset $ip   127.0.0.1;\nset $online 210.0.0.0;\n\n# 域名配置\ndomain example.com {\n  location / {\n    proxy_pass http://$online/;\n  }\n\n  location /blog/ {\n    proxy_pass http://$ip:$port/blog/;\n    proxy_set_header from 'hiproxy';\n    set_header proxy 'hiproxy';\n  }\n}\n```\n\n### 插件机制\n\nhiproxy启动的时候，会自动从npm全局模块所在目录（`npm root -g`）查找以`hiproxy-plugin-`开头的模块，找到这些模块之后自动解析插件内容。\n\n因此，我们只需要独立全局安装需要的插件，不用去升级hiproxy，hiproxy插件的开发也是独立的，插件项目本身不依赖hiproxy。\n\n详细的插件相关文档请查看[hiproxy插件指南](../developers/plugin.html)；\n\n","date":"2017-09-16T15:44:27.000Z","updated":"2017-09-16T15:44:27.000Z","path":"zh-cn/get_started/index.html","comments":1,"layout":"page","_id":"cj7nia0jq0013hy0f86017bsa","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<p>hiproxy是一个基于Node.js开发的轻量、可扩展的网络代理工具，主要目的是为了解决多个开发者在开发过程中遇到的hosts管理和请求代理的问题。使得在开发时，不再需要修改系统hosts和启动一个Nginx服务。</p>\n<p>hiproxy支持hosts配置文件，同时也扩展了hosts的语法，支持端口号。此外，hiproxy还支跟Nginx配置文件相似语法的配置文件。</p>\n<h2 id=\"为什么要开发hiproxy\"><a href=\"#为什么要开发hiproxy\" class=\"headerlink\" title=\"为什么要开发hiproxy\"></a>为什么要开发hiproxy</h2><p>在前端开发中，如果我们通常会遇到下面的一些问题：</p>\n<ol>\n<li>调试线上页面问题，要在本地进行开发，需要能运行后端的项目（Node.js或者Java等项目），<strong>前端工程师在本地搭建一套后端环境，可能代价比较大</strong>。</li>\n<li>如果有多个前端工程，<strong>采用一个域名</strong>，<strong>部分工程</strong> 需要请求 <strong>线上</strong> 资源，<strong>部分</strong> 工程请求 <strong>本地</strong>。</li>\n<li>为解决跨域等问题，本地开发时需要 <strong>修改Response Header</strong>。</li>\n<li>本地开发https站点时，<strong>证书不受信任</strong>。</li>\n<li>系统 <strong>hosts修改</strong> 后，<strong>不会立即生效</strong>。</li>\n</ol>\n<p>我们可以使用Nginx来解决上面的问题。Nginx很优秀，也是我们前端开发工程师的一个非常好的朋友。Nginx的配置文件风格，非常直观，编写配置效率很高。</p>\n<p>但是，使用Nginx的时候，我们同时需要使用hosts，把相关请求发送到本地的Nginx服务。</p>\n<p>此外，大部分情况下，Nginx的配置文件并不会被提交到代码仓库，所以团队中其他开发者之间会互相拷贝配置文件，这样效率比较低，而且一个人修改了配置文件，其他人的配置不会随之更新。对于多个域名的配置，也都是放到一个统一的目录，然后在主配置里面include，这样也不太方便。</p>\n<p><strong>hosts</strong>、<strong>反向代理</strong>、<strong>https</strong> 和 <strong>缓存</strong> 这些琐碎的事情，能不能统一解决？</p>\n<p>于是有了hiproxy。</p>\n<h2 id=\"特色\"><a href=\"#特色\" class=\"headerlink\" title=\"特色\"></a>特色</h2><ul>\n<li>支持Nginx风格的配置文件格式，配置简单直观</li>\n<li>支持hosts以及扩展（支持端口号）</li>\n<li>支持插件扩展rewrite指令、CLI命令和页面</li>\n<li>支持HTTPS证书自动生成</li>\n<li>支持代理自动配置（Proxy auto-config）</li>\n<li>支持后台启动，日志输出到文件</li>\n<li>支持配置文件自动查找</li>\n<li>支持打开浏览器窗口并自动配置代理</li>\n<li>提供Node.js API</li>\n<li>…</li>\n</ul>\n<h2 id=\"理念\"><a href=\"#理念\" class=\"headerlink\" title=\"理念\"></a>理念</h2><p>我们经过对很多现有开发模式的反思、总结现在遇到的一些问题，基于以下两个理念开发出了hiproxy：</p>\n<ul>\n<li><strong>工作空间</strong>：hiproxy工作在工作空间（workspace）中，工作空间中所有项目的配置文件都会被hiproxy解析。<em>工作空间可以通过<code>-w, --workspace &lt;workspace&gt;</code>来指定，也可以直接进入到工作空间启动代理服务</em>。</li>\n<li><strong>配置文件共享</strong>：配置文件，提交到代码仓库，团队成员共享配置。之前hosts和Nginx配置一般都是不提交到代码仓库，团队成员各自本地维护，成本大并且效率比较低。</li>\n</ul>\n<h2 id=\"基本原理\"><a href=\"#基本原理\" class=\"headerlink\" title=\"基本原理\"></a>基本原理</h2><p>hiproxy的核心功能是请求代理，在代理请求的同时，处理了一些开发中的细节问题，比如https证书自动生成、自动配置浏览器代理等。</p>\n<p>下面讲介绍hiproxy核心功能的基本原理。</p>\n<h3 id=\"请求代理\"><a href=\"#请求代理\" class=\"headerlink\" title=\"请求代理\"></a>请求代理</h3><p>hiproxy充分利用了<a href=\"https://en.wikipedia.org/wiki/Man-in-the-middle_attack\" target=\"_blank\" rel=\"external\">中间人攻击</a>模式，作为中间人在客户端和服务器端转发数据，来实现HTTP以及HTTPS请求的代理。</p>\n<h4 id=\"HTTP请求代理\"><a href=\"#HTTP请求代理\" class=\"headerlink\" title=\"HTTP请求代理\"></a>HTTP请求代理</h4><p>对于<strong>HTTP请求</strong>，如果浏览器配置了代理，浏览器会发送<code>GET</code>/<code>POST</code>等请求给hiproxy代理。hiproxy收到请求之后，根据用户的<code>hosts</code>和<code>rewrite</code>规则配置，对请求的信息做一定的修改，然后去相应的服务器请求资源并返回给客户端。</p>\n<h4 id=\"HTTPS请求代理\"><a href=\"#HTTPS请求代理\" class=\"headerlink\" title=\"HTTPS请求代理\"></a>HTTPS请求代理</h4><p>对于<strong>HTTPS请求</strong>，配置代理之后，浏览器会发送<code>CONNECT</code>请求到hiproxy服务，hiproxy会新建一个到最终目标服务器的TCP连接（也就是新建了一个隧道）然后在客户端和服务端之间转发数据。</p>\n<p>但是这只是能简单代理请求，hiproxy没办法获取到请求的信息，比如参数和Cookie，更没有办法修改响应的数据。如果不需要对请求、响应的信息做对应的修改，这就能满足我们的需求。</p>\n<p>如果我们需要实现跟HTTP请求一样的功能：根据请求的信息，对请求和响应做一些修改，需要怎么做呢？</p>\n<p>好在我们可以充分利用<a href=\"https://en.wikipedia.org/wiki/Man-in-the-middle_attack\" target=\"_blank\" rel=\"external\">中间人攻击</a>这种模式。因为最终的目标服务器能获取到请求的信息，我们可以在hiproxy和最终服务器之间再启动一个中间人服务（这里简称为<em>M</em>），当hiproxy收到<code>CONNECT</code>请求之后，新建一个到<em>M</em>的连接，当<em>M</em>收到请求之后，跟HTTP请求代理一样，对请求信息做一些修改，然后去目标服务器请求资源并返回给客户端。</p>\n<h3 id=\"HTTPS证书生成\"><a href=\"#HTTPS证书生成\" class=\"headerlink\" title=\"HTTPS证书生成\"></a>HTTPS证书生成</h3><p>在SSL/TLS握手过程中，客户端发送的第一个消息（Client Hello）中，会使用<a href=\"https://en.wikipedia.org/wiki/Server_Name_Indication\" target=\"_blank\" rel=\"external\">SNI(Server Name Indication<br>)</a>扩展，将请求的域名发送给服务器。虽然只发送了域名信息，并没有发送其他的请求路径、参数和cookie等信息，但是对于生成证书来说，有域名已经足够。</p>\n<p>当hiproxy获取到请求的域名时：</p>\n<ul>\n<li>如果用户给对应的域名配置了证书，将用户配置的证书发送给客户端。</li>\n<li>否则，生成新的域名证书返回给客户端。</li>\n</ul>\n<h3 id=\"浏览器窗口\"><a href=\"#浏览器窗口\" class=\"headerlink\" title=\"浏览器窗口\"></a>浏览器窗口</h3><p>首先，找到系统中浏览器对应的路径。比如在OSX上，查找<code>&lt;browser-name&gt;.app</code>，然后启动这个app，并传入参数来配置代理服务器地址。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;path-to-chrome-app&gt;.app [options] [url]</div></pre></td></tr></table></figure>\n<p>在windows上，会去注册表中查找对应浏览器的<code>exe</code>文件路径。然后运行并传递参数。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;path-to-chrome-app&gt;.exe [options] [url]</div></pre></td></tr></table></figure>\n<p>对于Chrome/Opera浏览器来说，我们需要传递两个方面的参数：</p>\n<ul>\n<li><p><strong>代理服务的地址</strong>：<code>--proxy-pac-url</code>（PAC代理文件路径）和<code>--proxy-server</code>（普通代理地址）二选一，这两种代理hiproxy都支持。</p>\n</li>\n<li><p><strong>用户数据存放的目录</strong>：<code>--user-data-dir</code>当传递这个参数，并且这个目录不是浏览器默认存放用户数据的目录，则会新建一个新的浏览器实例，这个示例独立于其他的浏览器窗口，互不影响（这个实例配置了代理，其他浏览器实例的请求不会通过这里配置的代理）。</p>\n</li>\n</ul>\n<h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><p>hiproxy可以使用hosts来做简单的请求代理，对于复杂的配置使用跟Nginx语法类似的rewrite规则配置。</p>\n<h4 id=\"hosts\"><a href=\"#hosts\" class=\"headerlink\" title=\"hosts\"></a>hosts</h4><p>跟系统<code>hosts</code>语法一致，此外也支持端口号。hosts只能配置域名对应的ip和端口号，不支持详细的路由配置以及对请求响应做修改。更多详细信息请查看<a href=\"../configuration/hosts.html\">hosts</a>。</p>\n<h4 id=\"hosts配置示例\"><a href=\"#hosts配置示例\" class=\"headerlink\" title=\"hosts配置示例\"></a>hosts配置示例</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># comment</span></div><div class=\"line\">127.0.0.1 example.com</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># ip + port</span></div><div class=\"line\">127.0.0.1:8800 blog.example.com life.example.com</div></pre></td></tr></table></figure>\n<h4 id=\"rewrite\"><a href=\"#rewrite\" class=\"headerlink\" title=\"rewrite\"></a>rewrite</h4><p>rewrite规则配置文件，可以使用更复杂的配置、满足复杂的使用场景。可以对路由进行详细的配置以及对请求响应做修改。rewrite规则配置的语法，跟Nginx语法非常类似。更多详细信息请查看<a href=\"../configuration/rewrite.html\">rewrite</a>。</p>\n<h4 id=\"rewrite配置示例\"><a href=\"#rewrite配置示例\" class=\"headerlink\" title=\"rewrite配置示例\"></a>rewrite配置示例</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 全局变量</span></div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$port</span> 8899;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ip</span>   127.0.0.1;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$online</span> 210.0.0.0;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 域名配置</span></div><div class=\"line\">domain example.com &#123;</div><div class=\"line\">  location / &#123;</div><div class=\"line\">    proxy_pass http://<span class=\"variable\">$online</span>/;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  location /blog/ &#123;</div><div class=\"line\">    proxy_pass http://<span class=\"variable\">$ip</span>:<span class=\"variable\">$port</span>/blog/;</div><div class=\"line\">    proxy_set_header from <span class=\"string\">'hiproxy'</span>;</div><div class=\"line\">    set_header proxy <span class=\"string\">'hiproxy'</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"插件机制\"><a href=\"#插件机制\" class=\"headerlink\" title=\"插件机制\"></a>插件机制</h3><p>hiproxy启动的时候，会自动从npm全局模块所在目录（<code>npm root -g</code>）查找以<code>hiproxy-plugin-</code>开头的模块，找到这些模块之后自动解析插件内容。</p>\n<p>因此，我们只需要独立全局安装需要的插件，不用去升级hiproxy，hiproxy插件的开发也是独立的，插件项目本身不依赖hiproxy。</p>\n<p>详细的插件相关文档请查看<a href=\"../developers/plugin.html\">hiproxy插件指南</a>；</p>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<p>hiproxy是一个基于Node.js开发的轻量、可扩展的网络代理工具，主要目的是为了解决多个开发者在开发过程中遇到的hosts管理和请求代理的问题。使得在开发时，不再需要修改系统hosts和启动一个Nginx服务。</p>\n<p>hiproxy支持hosts配置文件，同时也扩展了hosts的语法，支持端口号。此外，hiproxy还支跟Nginx配置文件相似语法的配置文件。</p>\n<h2 id=\"为什么要开发hiproxy\"><a href=\"#为什么要开发hiproxy\" class=\"headerlink\" title=\"为什么要开发hiproxy\"></a>为什么要开发hiproxy</h2><p>在前端开发中，如果我们通常会遇到下面的一些问题：</p>\n<ol>\n<li>调试线上页面问题，要在本地进行开发，需要能运行后端的项目（Node.js或者Java等项目），<strong>前端工程师在本地搭建一套后端环境，可能代价比较大</strong>。</li>\n<li>如果有多个前端工程，<strong>采用一个域名</strong>，<strong>部分工程</strong> 需要请求 <strong>线上</strong> 资源，<strong>部分</strong> 工程请求 <strong>本地</strong>。</li>\n<li>为解决跨域等问题，本地开发时需要 <strong>修改Response Header</strong>。</li>\n<li>本地开发https站点时，<strong>证书不受信任</strong>。</li>\n<li>系统 <strong>hosts修改</strong> 后，<strong>不会立即生效</strong>。</li>\n</ol>\n<p>我们可以使用Nginx来解决上面的问题。Nginx很优秀，也是我们前端开发工程师的一个非常好的朋友。Nginx的配置文件风格，非常直观，编写配置效率很高。</p>\n<p>但是，使用Nginx的时候，我们同时需要使用hosts，把相关请求发送到本地的Nginx服务。</p>\n<p>此外，大部分情况下，Nginx的配置文件并不会被提交到代码仓库，所以团队中其他开发者之间会互相拷贝配置文件，这样效率比较低，而且一个人修改了配置文件，其他人的配置不会随之更新。对于多个域名的配置，也都是放到一个统一的目录，然后在主配置里面include，这样也不太方便。</p>\n<p><strong>hosts</strong>、<strong>反向代理</strong>、<strong>https</strong> 和 <strong>缓存</strong> 这些琐碎的事情，能不能统一解决？</p>\n<p>于是有了hiproxy。</p>\n<h2 id=\"特色\"><a href=\"#特色\" class=\"headerlink\" title=\"特色\"></a>特色</h2><ul>\n<li>支持Nginx风格的配置文件格式，配置简单直观</li>\n<li>支持hosts以及扩展（支持端口号）</li>\n<li>支持插件扩展rewrite指令、CLI命令和页面</li>\n<li>支持HTTPS证书自动生成</li>\n<li>支持代理自动配置（Proxy auto-config）</li>\n<li>支持后台启动，日志输出到文件</li>\n<li>支持配置文件自动查找</li>\n<li>支持打开浏览器窗口并自动配置代理</li>\n<li>提供Node.js API</li>\n<li>…</li>\n</ul>\n<h2 id=\"理念\"><a href=\"#理念\" class=\"headerlink\" title=\"理念\"></a>理念</h2><p>我们经过对很多现有开发模式的反思、总结现在遇到的一些问题，基于以下两个理念开发出了hiproxy：</p>\n<ul>\n<li><strong>工作空间</strong>：hiproxy工作在工作空间（workspace）中，工作空间中所有项目的配置文件都会被hiproxy解析。<em>工作空间可以通过<code>-w, --workspace &lt;workspace&gt;</code>来指定，也可以直接进入到工作空间启动代理服务</em>。</li>\n<li><strong>配置文件共享</strong>：配置文件，提交到代码仓库，团队成员共享配置。之前hosts和Nginx配置一般都是不提交到代码仓库，团队成员各自本地维护，成本大并且效率比较低。</li>\n</ul>\n<h2 id=\"基本原理\"><a href=\"#基本原理\" class=\"headerlink\" title=\"基本原理\"></a>基本原理</h2><p>hiproxy的核心功能是请求代理，在代理请求的同时，处理了一些开发中的细节问题，比如https证书自动生成、自动配置浏览器代理等。</p>\n<p>下面讲介绍hiproxy核心功能的基本原理。</p>\n<h3 id=\"请求代理\"><a href=\"#请求代理\" class=\"headerlink\" title=\"请求代理\"></a>请求代理</h3><p>hiproxy充分利用了<a href=\"https://en.wikipedia.org/wiki/Man-in-the-middle_attack\" target=\"_blank\" rel=\"external\">中间人攻击</a>模式，作为中间人在客户端和服务器端转发数据，来实现HTTP以及HTTPS请求的代理。</p>\n<h4 id=\"HTTP请求代理\"><a href=\"#HTTP请求代理\" class=\"headerlink\" title=\"HTTP请求代理\"></a>HTTP请求代理</h4><p>对于<strong>HTTP请求</strong>，如果浏览器配置了代理，浏览器会发送<code>GET</code>/<code>POST</code>等请求给hiproxy代理。hiproxy收到请求之后，根据用户的<code>hosts</code>和<code>rewrite</code>规则配置，对请求的信息做一定的修改，然后去相应的服务器请求资源并返回给客户端。</p>\n<h4 id=\"HTTPS请求代理\"><a href=\"#HTTPS请求代理\" class=\"headerlink\" title=\"HTTPS请求代理\"></a>HTTPS请求代理</h4><p>对于<strong>HTTPS请求</strong>，配置代理之后，浏览器会发送<code>CONNECT</code>请求到hiproxy服务，hiproxy会新建一个到最终目标服务器的TCP连接（也就是新建了一个隧道）然后在客户端和服务端之间转发数据。</p>\n<p>但是这只是能简单代理请求，hiproxy没办法获取到请求的信息，比如参数和Cookie，更没有办法修改响应的数据。如果不需要对请求、响应的信息做对应的修改，这就能满足我们的需求。</p>\n<p>如果我们需要实现跟HTTP请求一样的功能：根据请求的信息，对请求和响应做一些修改，需要怎么做呢？</p>\n<p>好在我们可以充分利用<a href=\"https://en.wikipedia.org/wiki/Man-in-the-middle_attack\" target=\"_blank\" rel=\"external\">中间人攻击</a>这种模式。因为最终的目标服务器能获取到请求的信息，我们可以在hiproxy和最终服务器之间再启动一个中间人服务（这里简称为<em>M</em>），当hiproxy收到<code>CONNECT</code>请求之后，新建一个到<em>M</em>的连接，当<em>M</em>收到请求之后，跟HTTP请求代理一样，对请求信息做一些修改，然后去目标服务器请求资源并返回给客户端。</p>\n<h3 id=\"HTTPS证书生成\"><a href=\"#HTTPS证书生成\" class=\"headerlink\" title=\"HTTPS证书生成\"></a>HTTPS证书生成</h3><p>在SSL/TLS握手过程中，客户端发送的第一个消息（Client Hello）中，会使用<a href=\"https://en.wikipedia.org/wiki/Server_Name_Indication\" target=\"_blank\" rel=\"external\">SNI(Server Name Indication<br>)</a>扩展，将请求的域名发送给服务器。虽然只发送了域名信息，并没有发送其他的请求路径、参数和cookie等信息，但是对于生成证书来说，有域名已经足够。</p>\n<p>当hiproxy获取到请求的域名时：</p>\n<ul>\n<li>如果用户给对应的域名配置了证书，将用户配置的证书发送给客户端。</li>\n<li>否则，生成新的域名证书返回给客户端。</li>\n</ul>\n<h3 id=\"浏览器窗口\"><a href=\"#浏览器窗口\" class=\"headerlink\" title=\"浏览器窗口\"></a>浏览器窗口</h3><p>首先，找到系统中浏览器对应的路径。比如在OSX上，查找<code>&lt;browser-name&gt;.app</code>，然后启动这个app，并传入参数来配置代理服务器地址。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;path-to-chrome-app&gt;.app [options] [url]</div></pre></td></tr></table></figure>\n<p>在windows上，会去注册表中查找对应浏览器的<code>exe</code>文件路径。然后运行并传递参数。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;path-to-chrome-app&gt;.exe [options] [url]</div></pre></td></tr></table></figure>\n<p>对于Chrome/Opera浏览器来说，我们需要传递两个方面的参数：</p>\n<ul>\n<li><p><strong>代理服务的地址</strong>：<code>--proxy-pac-url</code>（PAC代理文件路径）和<code>--proxy-server</code>（普通代理地址）二选一，这两种代理hiproxy都支持。</p>\n</li>\n<li><p><strong>用户数据存放的目录</strong>：<code>--user-data-dir</code>当传递这个参数，并且这个目录不是浏览器默认存放用户数据的目录，则会新建一个新的浏览器实例，这个示例独立于其他的浏览器窗口，互不影响（这个实例配置了代理，其他浏览器实例的请求不会通过这里配置的代理）。</p>\n</li>\n</ul>\n<h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><p>hiproxy可以使用hosts来做简单的请求代理，对于复杂的配置使用跟Nginx语法类似的rewrite规则配置。</p>\n<h4 id=\"hosts\"><a href=\"#hosts\" class=\"headerlink\" title=\"hosts\"></a>hosts</h4><p>跟系统<code>hosts</code>语法一致，此外也支持端口号。hosts只能配置域名对应的ip和端口号，不支持详细的路由配置以及对请求响应做修改。更多详细信息请查看<a href=\"../configuration/hosts.html\">hosts</a>。</p>\n<h4 id=\"hosts配置示例\"><a href=\"#hosts配置示例\" class=\"headerlink\" title=\"hosts配置示例\"></a>hosts配置示例</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># comment</span></div><div class=\"line\">127.0.0.1 example.com</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># ip + port</span></div><div class=\"line\">127.0.0.1:8800 blog.example.com life.example.com</div></pre></td></tr></table></figure>\n<h4 id=\"rewrite\"><a href=\"#rewrite\" class=\"headerlink\" title=\"rewrite\"></a>rewrite</h4><p>rewrite规则配置文件，可以使用更复杂的配置、满足复杂的使用场景。可以对路由进行详细的配置以及对请求响应做修改。rewrite规则配置的语法，跟Nginx语法非常类似。更多详细信息请查看<a href=\"../configuration/rewrite.html\">rewrite</a>。</p>\n<h4 id=\"rewrite配置示例\"><a href=\"#rewrite配置示例\" class=\"headerlink\" title=\"rewrite配置示例\"></a>rewrite配置示例</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 全局变量</span></div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$port</span> 8899;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ip</span>   127.0.0.1;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$online</span> 210.0.0.0;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 域名配置</span></div><div class=\"line\">domain example.com &#123;</div><div class=\"line\">  location / &#123;</div><div class=\"line\">    proxy_pass http://<span class=\"variable\">$online</span>/;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  location /blog/ &#123;</div><div class=\"line\">    proxy_pass http://<span class=\"variable\">$ip</span>:<span class=\"variable\">$port</span>/blog/;</div><div class=\"line\">    proxy_set_header from <span class=\"string\">'hiproxy'</span>;</div><div class=\"line\">    set_header proxy <span class=\"string\">'hiproxy'</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"插件机制\"><a href=\"#插件机制\" class=\"headerlink\" title=\"插件机制\"></a>插件机制</h3><p>hiproxy启动的时候，会自动从npm全局模块所在目录（<code>npm root -g</code>）查找以<code>hiproxy-plugin-</code>开头的模块，找到这些模块之后自动解析插件内容。</p>\n<p>因此，我们只需要独立全局安装需要的插件，不用去升级hiproxy，hiproxy插件的开发也是独立的，插件项目本身不依赖hiproxy。</p>\n<p>详细的插件相关文档请查看<a href=\"../developers/plugin.html\">hiproxy插件指南</a>；</p>\n"},{"title":"CLI 选项","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n# Command Line Commands and Options\n\n## Global Commands\n\nThe global `hiproxy` command without any options will display a welcome message like this:\n\n```bash\n> hiproxy\n  _     _\n | |   (_)\n | |__  _  welcome to use hiproxy\n | '_ \\| | current version is 1.1.2\n | | | | | You can try `hiproxy --help` for more info\n |_| |_|_|\n```\n\nIf you specify the option `--help` or `-h`, you will see the complete help information.\n\n```bash\n> hiproxy --help\n\n  Usage:\n\n    hiproxy [command] [option]\n\n  Commands:\n\n    start    Start a local proxy server\n    stop     Stop the local proxy server (Only works in daemon mode)\n    restart  Restart the local proxy service (Only works in daemon mode)\n    state    Show all the servers state (Only works in daemon mode)\n    open     Open browser and set proxy\n    hello    A test command that say hello to you.\n\n  Options:\n\n    -v, --version     Display version information\n    -h, --help        Display help information\n    --log-dir <dir>   The log directory when run in background, default: user home directory\n    --log-time        Show time info before every log message\n    --log-level       The log levels, format: <level1>[,<lavel2[,...]] available parameters : log info warn error debug detail\n    --grep <content>  Filter the log data\n```\n\n## start\n\nThis command will start a local proxy service on the specified port. You can specify whether the service is running in the background, if running in the background, all the log of the service will be rediret to the log files.\n\nThe log file is located in the user's home directory by default. Of course, you can specify the log file's path via the option `--log-dir <dir>`.\n\n```bash\n> hiproxy start --help\n\n  USAGE:\n\n    start [--port <port>] [-xodD]\n\n  DESCRIBE:\n\n    Start a local proxy server\n\n  OPTIONS:\n\n    -h, --help                    show help info\n    -D, --daemon                  Run hiproxy in background\n    -c, --hosts-file <files>      hosts files, format: <file1>[,<file2>[,...]]\n    -s, --https                   Enable HTTPS proxy\n    -m, --middle-man-port <port>  The Man-In-The-MiddleHTTPS proxy port, default: 10010\n    -o, --open [browser]          Open a browser window and use hiproxy proxy\n    --pac-proxy                   Use Proxy auto-configuration (PAC)\n    -p, --port <port>             HTTP proxy port, default: 5525\n    -r, --rewrite-file <files>    rewrite config files, format: <file1>[,<file2>[,...]]\n    --sys-proxy <path>            Your own proxy server path, format: <ip>[:port], only works when use PAC\n    -w, --workspace <dir>         The workspace\n```\n\n## stop\n\nIf the proxy service is running in the background, hiproxy provides a `stop` command to stop the service\n\n```bash\n> hiproxy stop\n```\n\n## open\n\nThe `open` command can open a browser window and automatically set up the browser's proxy info based on the currently started proxy service.\n\n\n```bash\n> hiproxy open --help\n\n  USAGE:\n\n    open [options]\n\n  DESCRIBE:\n\n    Open browser and set proxy\n\n  OPTIONS:\n\n    -h, --help               show help info\n    -b, --browser <browser>  Browser name, default: chrome. Valid alues: chrome,firefox,opera\n    --pac-proxy              Use Proxy auto-configuration (PAC)\n```\n\n## state\n\nThis command will display the basic status information of the currently started proxy service.\n\n## restart\n\nThis command will restart the proxy service.\n","source":"zh-cn/get_started/cli_options.md","raw":"title: CLI 选项\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n# Command Line Commands and Options\n\n## Global Commands\n\nThe global `hiproxy` command without any options will display a welcome message like this:\n\n```bash\n> hiproxy\n  _     _\n | |   (_)\n | |__  _  welcome to use hiproxy\n | '_ \\| | current version is 1.1.2\n | | | | | You can try `hiproxy --help` for more info\n |_| |_|_|\n```\n\nIf you specify the option `--help` or `-h`, you will see the complete help information.\n\n```bash\n> hiproxy --help\n\n  Usage:\n\n    hiproxy [command] [option]\n\n  Commands:\n\n    start    Start a local proxy server\n    stop     Stop the local proxy server (Only works in daemon mode)\n    restart  Restart the local proxy service (Only works in daemon mode)\n    state    Show all the servers state (Only works in daemon mode)\n    open     Open browser and set proxy\n    hello    A test command that say hello to you.\n\n  Options:\n\n    -v, --version     Display version information\n    -h, --help        Display help information\n    --log-dir <dir>   The log directory when run in background, default: user home directory\n    --log-time        Show time info before every log message\n    --log-level       The log levels, format: <level1>[,<lavel2[,...]] available parameters : log info warn error debug detail\n    --grep <content>  Filter the log data\n```\n\n## start\n\nThis command will start a local proxy service on the specified port. You can specify whether the service is running in the background, if running in the background, all the log of the service will be rediret to the log files.\n\nThe log file is located in the user's home directory by default. Of course, you can specify the log file's path via the option `--log-dir <dir>`.\n\n```bash\n> hiproxy start --help\n\n  USAGE:\n\n    start [--port <port>] [-xodD]\n\n  DESCRIBE:\n\n    Start a local proxy server\n\n  OPTIONS:\n\n    -h, --help                    show help info\n    -D, --daemon                  Run hiproxy in background\n    -c, --hosts-file <files>      hosts files, format: <file1>[,<file2>[,...]]\n    -s, --https                   Enable HTTPS proxy\n    -m, --middle-man-port <port>  The Man-In-The-MiddleHTTPS proxy port, default: 10010\n    -o, --open [browser]          Open a browser window and use hiproxy proxy\n    --pac-proxy                   Use Proxy auto-configuration (PAC)\n    -p, --port <port>             HTTP proxy port, default: 5525\n    -r, --rewrite-file <files>    rewrite config files, format: <file1>[,<file2>[,...]]\n    --sys-proxy <path>            Your own proxy server path, format: <ip>[:port], only works when use PAC\n    -w, --workspace <dir>         The workspace\n```\n\n## stop\n\nIf the proxy service is running in the background, hiproxy provides a `stop` command to stop the service\n\n```bash\n> hiproxy stop\n```\n\n## open\n\nThe `open` command can open a browser window and automatically set up the browser's proxy info based on the currently started proxy service.\n\n\n```bash\n> hiproxy open --help\n\n  USAGE:\n\n    open [options]\n\n  DESCRIBE:\n\n    Open browser and set proxy\n\n  OPTIONS:\n\n    -h, --help               show help info\n    -b, --browser <browser>  Browser name, default: chrome. Valid alues: chrome,firefox,opera\n    --pac-proxy              Use Proxy auto-configuration (PAC)\n```\n\n## state\n\nThis command will display the basic status information of the currently started proxy service.\n\n## restart\n\nThis command will restart the proxy service.\n","date":"2017-09-16T15:44:22.000Z","updated":"2017-09-16T15:44:22.000Z","path":"zh-cn/get_started/cli_options.html","comments":1,"layout":"page","_id":"cj7nia0js0014hy0fwpqbrcw9","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h1 id=\"Command-Line-Commands-and-Options\"><a href=\"#Command-Line-Commands-and-Options\" class=\"headerlink\" title=\"Command Line Commands and Options\"></a>Command Line Commands and Options</h1><h2 id=\"Global-Commands\"><a href=\"#Global-Commands\" class=\"headerlink\" title=\"Global Commands\"></a>Global Commands</h2><p>The global <code>hiproxy</code> command without any options will display a welcome message like this:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hiproxy</div><div class=\"line\">  _     _</div><div class=\"line\"> | |   (_)</div><div class=\"line\"> | |__  _  welcome to use hiproxy</div><div class=\"line\"> | <span class=\"string\">'_ \\| | current version is 1.1.2</span></div><div class=\"line\"><span class=\"string\"> | | | | | You can try `hiproxy --help` for more info</span></div><div class=\"line\"><span class=\"string\"> |_| |_|_|</span></div></pre></td></tr></table></figure>\n<p>If you specify the option <code>--help</code> or <code>-h</code>, you will see the complete help information.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hiproxy --<span class=\"built_in\">help</span></div><div class=\"line\"></div><div class=\"line\">  Usage:</div><div class=\"line\"></div><div class=\"line\">    hiproxy [<span class=\"built_in\">command</span>] [option]</div><div class=\"line\"></div><div class=\"line\">  Commands:</div><div class=\"line\"></div><div class=\"line\">    start    Start a <span class=\"built_in\">local</span> proxy server</div><div class=\"line\">    stop     Stop the <span class=\"built_in\">local</span> proxy server (Only works <span class=\"keyword\">in</span> daemon mode)</div><div class=\"line\">    restart  Restart the <span class=\"built_in\">local</span> proxy service (Only works <span class=\"keyword\">in</span> daemon mode)</div><div class=\"line\">    state    Show all the servers state (Only works <span class=\"keyword\">in</span> daemon mode)</div><div class=\"line\">    open     Open browser and <span class=\"built_in\">set</span> proxy</div><div class=\"line\">    hello    A <span class=\"built_in\">test</span> <span class=\"built_in\">command</span> that say hello to you.</div><div class=\"line\"></div><div class=\"line\">  Options:</div><div class=\"line\"></div><div class=\"line\">    -v, --version     Display version information</div><div class=\"line\">    -h, --<span class=\"built_in\">help</span>        Display <span class=\"built_in\">help</span> information</div><div class=\"line\">    --<span class=\"built_in\">log</span>-dir &lt;dir&gt;   The <span class=\"built_in\">log</span> directory when run <span class=\"keyword\">in</span> background, default: user home directory</div><div class=\"line\">    --<span class=\"built_in\">log</span>-time        Show time info before every <span class=\"built_in\">log</span> message</div><div class=\"line\">    --<span class=\"built_in\">log</span>-level       The <span class=\"built_in\">log</span> levels, format: &lt;level1&gt;[,&lt;lavel2[,...]] available parameters : <span class=\"built_in\">log</span> info warn error debug detail</div><div class=\"line\">    --grep &lt;content&gt;  Filter the <span class=\"built_in\">log</span> data</div></pre></td></tr></table></figure>\n<h2 id=\"start\"><a href=\"#start\" class=\"headerlink\" title=\"start\"></a>start</h2><p>This command will start a local proxy service on the specified port. You can specify whether the service is running in the background, if running in the background, all the log of the service will be rediret to the log files.</p>\n<p>The log file is located in the user’s home directory by default. Of course, you can specify the log file’s path via the option <code>--log-dir &lt;dir&gt;</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hiproxy start --<span class=\"built_in\">help</span></div><div class=\"line\"></div><div class=\"line\">  USAGE:</div><div class=\"line\"></div><div class=\"line\">    start [--port &lt;port&gt;] [-xodD]</div><div class=\"line\"></div><div class=\"line\">  DESCRIBE:</div><div class=\"line\"></div><div class=\"line\">    Start a <span class=\"built_in\">local</span> proxy server</div><div class=\"line\"></div><div class=\"line\">  OPTIONS:</div><div class=\"line\"></div><div class=\"line\">    -h, --<span class=\"built_in\">help</span>                    show <span class=\"built_in\">help</span> info</div><div class=\"line\">    -D, --daemon                  Run hiproxy <span class=\"keyword\">in</span> background</div><div class=\"line\">    -c, --hosts-file &lt;files&gt;      hosts files, format: &lt;file1&gt;[,&lt;file2&gt;[,...]]</div><div class=\"line\">    -s, --https                   Enable HTTPS proxy</div><div class=\"line\">    -m, --middle-man-port &lt;port&gt;  The Man-In-The-MiddleHTTPS proxy port, default: 10010</div><div class=\"line\">    -o, --open [browser]          Open a browser window and use hiproxy proxy</div><div class=\"line\">    --pac-proxy                   Use Proxy auto-configuration (PAC)</div><div class=\"line\">    -p, --port &lt;port&gt;             HTTP proxy port, default: 5525</div><div class=\"line\">    -r, --rewrite-file &lt;files&gt;    rewrite config files, format: &lt;file1&gt;[,&lt;file2&gt;[,...]]</div><div class=\"line\">    --sys-proxy &lt;path&gt;            Your own proxy server path, format: &lt;ip&gt;[:port], only works when use PAC</div><div class=\"line\">    -w, --workspace &lt;dir&gt;         The workspace</div></pre></td></tr></table></figure>\n<h2 id=\"stop\"><a href=\"#stop\" class=\"headerlink\" title=\"stop\"></a>stop</h2><p>If the proxy service is running in the background, hiproxy provides a <code>stop</code> command to stop the service</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hiproxy stop</div></pre></td></tr></table></figure>\n<h2 id=\"open\"><a href=\"#open\" class=\"headerlink\" title=\"open\"></a>open</h2><p>The <code>open</code> command can open a browser window and automatically set up the browser’s proxy info based on the currently started proxy service.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hiproxy open --<span class=\"built_in\">help</span></div><div class=\"line\"></div><div class=\"line\">  USAGE:</div><div class=\"line\"></div><div class=\"line\">    open [options]</div><div class=\"line\"></div><div class=\"line\">  DESCRIBE:</div><div class=\"line\"></div><div class=\"line\">    Open browser and <span class=\"built_in\">set</span> proxy</div><div class=\"line\"></div><div class=\"line\">  OPTIONS:</div><div class=\"line\"></div><div class=\"line\">    -h, --<span class=\"built_in\">help</span>               show <span class=\"built_in\">help</span> info</div><div class=\"line\">    -b, --browser &lt;browser&gt;  Browser name, default: chrome. Valid alues: chrome,firefox,opera</div><div class=\"line\">    --pac-proxy              Use Proxy auto-configuration (PAC)</div></pre></td></tr></table></figure>\n<h2 id=\"state\"><a href=\"#state\" class=\"headerlink\" title=\"state\"></a>state</h2><p>This command will display the basic status information of the currently started proxy service.</p>\n<h2 id=\"restart\"><a href=\"#restart\" class=\"headerlink\" title=\"restart\"></a>restart</h2><p>This command will restart the proxy service.</p>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h1 id=\"Command-Line-Commands-and-Options\"><a href=\"#Command-Line-Commands-and-Options\" class=\"headerlink\" title=\"Command Line Commands and Options\"></a>Command Line Commands and Options</h1><h2 id=\"Global-Commands\"><a href=\"#Global-Commands\" class=\"headerlink\" title=\"Global Commands\"></a>Global Commands</h2><p>The global <code>hiproxy</code> command without any options will display a welcome message like this:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hiproxy</div><div class=\"line\">  _     _</div><div class=\"line\"> | |   (_)</div><div class=\"line\"> | |__  _  welcome to use hiproxy</div><div class=\"line\"> | <span class=\"string\">'_ \\| | current version is 1.1.2</span></div><div class=\"line\"><span class=\"string\"> | | | | | You can try `hiproxy --help` for more info</span></div><div class=\"line\"><span class=\"string\"> |_| |_|_|</span></div></pre></td></tr></table></figure>\n<p>If you specify the option <code>--help</code> or <code>-h</code>, you will see the complete help information.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hiproxy --<span class=\"built_in\">help</span></div><div class=\"line\"></div><div class=\"line\">  Usage:</div><div class=\"line\"></div><div class=\"line\">    hiproxy [<span class=\"built_in\">command</span>] [option]</div><div class=\"line\"></div><div class=\"line\">  Commands:</div><div class=\"line\"></div><div class=\"line\">    start    Start a <span class=\"built_in\">local</span> proxy server</div><div class=\"line\">    stop     Stop the <span class=\"built_in\">local</span> proxy server (Only works <span class=\"keyword\">in</span> daemon mode)</div><div class=\"line\">    restart  Restart the <span class=\"built_in\">local</span> proxy service (Only works <span class=\"keyword\">in</span> daemon mode)</div><div class=\"line\">    state    Show all the servers state (Only works <span class=\"keyword\">in</span> daemon mode)</div><div class=\"line\">    open     Open browser and <span class=\"built_in\">set</span> proxy</div><div class=\"line\">    hello    A <span class=\"built_in\">test</span> <span class=\"built_in\">command</span> that say hello to you.</div><div class=\"line\"></div><div class=\"line\">  Options:</div><div class=\"line\"></div><div class=\"line\">    -v, --version     Display version information</div><div class=\"line\">    -h, --<span class=\"built_in\">help</span>        Display <span class=\"built_in\">help</span> information</div><div class=\"line\">    --<span class=\"built_in\">log</span>-dir &lt;dir&gt;   The <span class=\"built_in\">log</span> directory when run <span class=\"keyword\">in</span> background, default: user home directory</div><div class=\"line\">    --<span class=\"built_in\">log</span>-time        Show time info before every <span class=\"built_in\">log</span> message</div><div class=\"line\">    --<span class=\"built_in\">log</span>-level       The <span class=\"built_in\">log</span> levels, format: &lt;level1&gt;[,&lt;lavel2[,...]] available parameters : <span class=\"built_in\">log</span> info warn error debug detail</div><div class=\"line\">    --grep &lt;content&gt;  Filter the <span class=\"built_in\">log</span> data</div></pre></td></tr></table></figure>\n<h2 id=\"start\"><a href=\"#start\" class=\"headerlink\" title=\"start\"></a>start</h2><p>This command will start a local proxy service on the specified port. You can specify whether the service is running in the background, if running in the background, all the log of the service will be rediret to the log files.</p>\n<p>The log file is located in the user’s home directory by default. Of course, you can specify the log file’s path via the option <code>--log-dir &lt;dir&gt;</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hiproxy start --<span class=\"built_in\">help</span></div><div class=\"line\"></div><div class=\"line\">  USAGE:</div><div class=\"line\"></div><div class=\"line\">    start [--port &lt;port&gt;] [-xodD]</div><div class=\"line\"></div><div class=\"line\">  DESCRIBE:</div><div class=\"line\"></div><div class=\"line\">    Start a <span class=\"built_in\">local</span> proxy server</div><div class=\"line\"></div><div class=\"line\">  OPTIONS:</div><div class=\"line\"></div><div class=\"line\">    -h, --<span class=\"built_in\">help</span>                    show <span class=\"built_in\">help</span> info</div><div class=\"line\">    -D, --daemon                  Run hiproxy <span class=\"keyword\">in</span> background</div><div class=\"line\">    -c, --hosts-file &lt;files&gt;      hosts files, format: &lt;file1&gt;[,&lt;file2&gt;[,...]]</div><div class=\"line\">    -s, --https                   Enable HTTPS proxy</div><div class=\"line\">    -m, --middle-man-port &lt;port&gt;  The Man-In-The-MiddleHTTPS proxy port, default: 10010</div><div class=\"line\">    -o, --open [browser]          Open a browser window and use hiproxy proxy</div><div class=\"line\">    --pac-proxy                   Use Proxy auto-configuration (PAC)</div><div class=\"line\">    -p, --port &lt;port&gt;             HTTP proxy port, default: 5525</div><div class=\"line\">    -r, --rewrite-file &lt;files&gt;    rewrite config files, format: &lt;file1&gt;[,&lt;file2&gt;[,...]]</div><div class=\"line\">    --sys-proxy &lt;path&gt;            Your own proxy server path, format: &lt;ip&gt;[:port], only works when use PAC</div><div class=\"line\">    -w, --workspace &lt;dir&gt;         The workspace</div></pre></td></tr></table></figure>\n<h2 id=\"stop\"><a href=\"#stop\" class=\"headerlink\" title=\"stop\"></a>stop</h2><p>If the proxy service is running in the background, hiproxy provides a <code>stop</code> command to stop the service</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hiproxy stop</div></pre></td></tr></table></figure>\n<h2 id=\"open\"><a href=\"#open\" class=\"headerlink\" title=\"open\"></a>open</h2><p>The <code>open</code> command can open a browser window and automatically set up the browser’s proxy info based on the currently started proxy service.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; hiproxy open --<span class=\"built_in\">help</span></div><div class=\"line\"></div><div class=\"line\">  USAGE:</div><div class=\"line\"></div><div class=\"line\">    open [options]</div><div class=\"line\"></div><div class=\"line\">  DESCRIBE:</div><div class=\"line\"></div><div class=\"line\">    Open browser and <span class=\"built_in\">set</span> proxy</div><div class=\"line\"></div><div class=\"line\">  OPTIONS:</div><div class=\"line\"></div><div class=\"line\">    -h, --<span class=\"built_in\">help</span>               show <span class=\"built_in\">help</span> info</div><div class=\"line\">    -b, --browser &lt;browser&gt;  Browser name, default: chrome. Valid alues: chrome,firefox,opera</div><div class=\"line\">    --pac-proxy              Use Proxy auto-configuration (PAC)</div></pre></td></tr></table></figure>\n<h2 id=\"state\"><a href=\"#state\" class=\"headerlink\" title=\"state\"></a>state</h2><p>This command will display the basic status information of the currently started proxy service.</p>\n<h2 id=\"restart\"><a href=\"#restart\" class=\"headerlink\" title=\"restart\"></a>restart</h2><p>This command will restart the proxy service.</p>\n"},{"title":"运行示例项目","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 项目简介\n\n我们准备了一个[示例工程](https://github.com/hiproxy/hiproxy-example)，里面有一个工作空间（workspace），工作空间中包含三个简单的项目。三个项目分别使用端口`8000`、`8001`和`8002`。\n\n同时，我们也提供了一个脚本`server.js`，来启动三个服务，可以使用`npm start`或者`node start`。\n\n这个项目的目录结构如下：\n\n```bash\n.\n├── LICENSE\n├── README.md\n├── package.json\n├── start.js          # 启动服务\n└── workspace         # 工作空间\n    ├── blog-app      # blog应用示例\n    │   ├── app.js    # express app\n    │   ├── hosts     # hosts文件\n    │   ├── public    # 静态资源\n    │   └── rewrite   # rewrite配置文件\n    ├── main-app      # 主应用示例\n    │   ├── app.js    # express app\n    │   ├── hosts     # hosts文件\n    │   └── public    # 静态资源\n    └── news-app      # 新闻应用示例\n        ├── app.js    # express app\n        └── hosts     # hosts文件\n```\n\n在`workspace`目录下，有三个应用，每个应用都有一个`hosts`文件：\n\n```bash\n# main-app hosts\n127.0.0.1:8000 www.example.com\n```\n\n```bash\n# blog-app hosts\n127.0.0.1:8001 blog.example.com\n```\n\n```bash\n# news-app hosts\n127.0.0.1:8002 news.example.com\n```\n\n在blog-app中，还有一个`rewrite`文件，内容如下：\n\n```bash\n# rewrite rules\ndomain blog.example.io {\n  # rewrite / to 8001;\n  location / {\n    proxy_pass http://127.0.0.1:8001/;\n  }\n\n  # static files\n  location /static/ {\n    alias ./public/;\n\n    set_header server hiproxy;\n    set_cookie server hiproxy;\n  }\n}\n```\n\n...\n\n## 运行步骤\n\n### 第一步：clone代码\n\n示例项目的代码托管在github上，首先使用Git把代码clone到本地：\n\n```bash\ngit clone https://github.com/hiproxy/hiproxy-example.git\n```\n\n### 第二步：安装依赖\n\n然后进入项目根目录（`hiproxy-example/`），安装需要的第三方依赖：\n\n```bash\ncd hiproxy-example\nnpm install\n```\n\n### 第三步：启动服务\n\n克隆完源码并安装好依赖后，就可以启动示例项目提供的服务了。在`hiproxy-example/`下执行：\n\n```bash\nnpm start\n```\n\n### 第四步：启动hiproxy\n\n上面的准备工作完成之后，我们就可以启动hiproxy来体验他的功能了，在`hiproxy-example/`下执行：\n\n```bash\nhiproxy start --https --open --workspace ./workspace\n```\n\n### 第五步：访问测试页面\n\n在执行上一步的命令后，hiproxy会贴心的打开一个浏览器窗口并配置好代理。在这个浏览器中访问下面任意一个网址即可查看效果：\n\n* <http://blog.example.com/>\n* <http://www.example.com/>\n* <http://news.example.com/>\n* <http://blog.example.io/>\n* <http://blog.example.io/static/>\n\n","source":"zh-cn/get_started/run_example.md","raw":"title: 运行示例项目\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 项目简介\n\n我们准备了一个[示例工程](https://github.com/hiproxy/hiproxy-example)，里面有一个工作空间（workspace），工作空间中包含三个简单的项目。三个项目分别使用端口`8000`、`8001`和`8002`。\n\n同时，我们也提供了一个脚本`server.js`，来启动三个服务，可以使用`npm start`或者`node start`。\n\n这个项目的目录结构如下：\n\n```bash\n.\n├── LICENSE\n├── README.md\n├── package.json\n├── start.js          # 启动服务\n└── workspace         # 工作空间\n    ├── blog-app      # blog应用示例\n    │   ├── app.js    # express app\n    │   ├── hosts     # hosts文件\n    │   ├── public    # 静态资源\n    │   └── rewrite   # rewrite配置文件\n    ├── main-app      # 主应用示例\n    │   ├── app.js    # express app\n    │   ├── hosts     # hosts文件\n    │   └── public    # 静态资源\n    └── news-app      # 新闻应用示例\n        ├── app.js    # express app\n        └── hosts     # hosts文件\n```\n\n在`workspace`目录下，有三个应用，每个应用都有一个`hosts`文件：\n\n```bash\n# main-app hosts\n127.0.0.1:8000 www.example.com\n```\n\n```bash\n# blog-app hosts\n127.0.0.1:8001 blog.example.com\n```\n\n```bash\n# news-app hosts\n127.0.0.1:8002 news.example.com\n```\n\n在blog-app中，还有一个`rewrite`文件，内容如下：\n\n```bash\n# rewrite rules\ndomain blog.example.io {\n  # rewrite / to 8001;\n  location / {\n    proxy_pass http://127.0.0.1:8001/;\n  }\n\n  # static files\n  location /static/ {\n    alias ./public/;\n\n    set_header server hiproxy;\n    set_cookie server hiproxy;\n  }\n}\n```\n\n...\n\n## 运行步骤\n\n### 第一步：clone代码\n\n示例项目的代码托管在github上，首先使用Git把代码clone到本地：\n\n```bash\ngit clone https://github.com/hiproxy/hiproxy-example.git\n```\n\n### 第二步：安装依赖\n\n然后进入项目根目录（`hiproxy-example/`），安装需要的第三方依赖：\n\n```bash\ncd hiproxy-example\nnpm install\n```\n\n### 第三步：启动服务\n\n克隆完源码并安装好依赖后，就可以启动示例项目提供的服务了。在`hiproxy-example/`下执行：\n\n```bash\nnpm start\n```\n\n### 第四步：启动hiproxy\n\n上面的准备工作完成之后，我们就可以启动hiproxy来体验他的功能了，在`hiproxy-example/`下执行：\n\n```bash\nhiproxy start --https --open --workspace ./workspace\n```\n\n### 第五步：访问测试页面\n\n在执行上一步的命令后，hiproxy会贴心的打开一个浏览器窗口并配置好代理。在这个浏览器中访问下面任意一个网址即可查看效果：\n\n* <http://blog.example.com/>\n* <http://www.example.com/>\n* <http://news.example.com/>\n* <http://blog.example.io/>\n* <http://blog.example.io/static/>\n\n","date":"2017-09-16T15:44:53.000Z","updated":"2017-09-16T15:44:53.000Z","path":"zh-cn/get_started/run_example.html","comments":1,"layout":"page","_id":"cj7nia0jt0015hy0f2c5p1vvr","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"项目简介\"><a href=\"#项目简介\" class=\"headerlink\" title=\"项目简介\"></a>项目简介</h2><p>我们准备了一个<a href=\"https://github.com/hiproxy/hiproxy-example\" target=\"_blank\" rel=\"external\">示例工程</a>，里面有一个工作空间（workspace），工作空间中包含三个简单的项目。三个项目分别使用端口<code>8000</code>、<code>8001</code>和<code>8002</code>。</p>\n<p>同时，我们也提供了一个脚本<code>server.js</code>，来启动三个服务，可以使用<code>npm start</code>或者<code>node start</code>。</p>\n<p>这个项目的目录结构如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">.</div><div class=\"line\">├── LICENSE</div><div class=\"line\">├── README.md</div><div class=\"line\">├── package.json</div><div class=\"line\">├── start.js          <span class=\"comment\"># 启动服务</span></div><div class=\"line\">└── workspace         <span class=\"comment\"># 工作空间</span></div><div class=\"line\">    ├── blog-app      <span class=\"comment\"># blog应用示例</span></div><div class=\"line\">    │   ├── app.js    <span class=\"comment\"># express app</span></div><div class=\"line\">    │   ├── hosts     <span class=\"comment\"># hosts文件</span></div><div class=\"line\">    │   ├── public    <span class=\"comment\"># 静态资源</span></div><div class=\"line\">    │   └── rewrite   <span class=\"comment\"># rewrite配置文件</span></div><div class=\"line\">    ├── main-app      <span class=\"comment\"># 主应用示例</span></div><div class=\"line\">    │   ├── app.js    <span class=\"comment\"># express app</span></div><div class=\"line\">    │   ├── hosts     <span class=\"comment\"># hosts文件</span></div><div class=\"line\">    │   └── public    <span class=\"comment\"># 静态资源</span></div><div class=\"line\">    └── news-app      <span class=\"comment\"># 新闻应用示例</span></div><div class=\"line\">        ├── app.js    <span class=\"comment\"># express app</span></div><div class=\"line\">        └── hosts     <span class=\"comment\"># hosts文件</span></div></pre></td></tr></table></figure>\n<p>在<code>workspace</code>目录下，有三个应用，每个应用都有一个<code>hosts</code>文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># main-app hosts</span></div><div class=\"line\">127.0.0.1:8000 www.example.com</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># blog-app hosts</span></div><div class=\"line\">127.0.0.1:8001 blog.example.com</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># news-app hosts</span></div><div class=\"line\">127.0.0.1:8002 news.example.com</div></pre></td></tr></table></figure>\n<p>在blog-app中，还有一个<code>rewrite</code>文件，内容如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># rewrite rules</span></div><div class=\"line\">domain blog.example.io &#123;</div><div class=\"line\">  <span class=\"comment\"># rewrite / to 8001;</span></div><div class=\"line\">  location / &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:8001/;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># static files</span></div><div class=\"line\">  location /static/ &#123;</div><div class=\"line\">    <span class=\"built_in\">alias</span> ./public/;</div><div class=\"line\"></div><div class=\"line\">    set_header server hiproxy;</div><div class=\"line\">    set_cookie server hiproxy;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>…</p>\n<h2 id=\"运行步骤\"><a href=\"#运行步骤\" class=\"headerlink\" title=\"运行步骤\"></a>运行步骤</h2><h3 id=\"第一步：clone代码\"><a href=\"#第一步：clone代码\" class=\"headerlink\" title=\"第一步：clone代码\"></a>第一步：clone代码</h3><p>示例项目的代码托管在github上，首先使用Git把代码clone到本地：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/hiproxy/hiproxy-example.git</div></pre></td></tr></table></figure>\n<h3 id=\"第二步：安装依赖\"><a href=\"#第二步：安装依赖\" class=\"headerlink\" title=\"第二步：安装依赖\"></a>第二步：安装依赖</h3><p>然后进入项目根目录（<code>hiproxy-example/</code>），安装需要的第三方依赖：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> hiproxy-example</div><div class=\"line\">npm install</div></pre></td></tr></table></figure>\n<h3 id=\"第三步：启动服务\"><a href=\"#第三步：启动服务\" class=\"headerlink\" title=\"第三步：启动服务\"></a>第三步：启动服务</h3><p>克隆完源码并安装好依赖后，就可以启动示例项目提供的服务了。在<code>hiproxy-example/</code>下执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm start</div></pre></td></tr></table></figure>\n<h3 id=\"第四步：启动hiproxy\"><a href=\"#第四步：启动hiproxy\" class=\"headerlink\" title=\"第四步：启动hiproxy\"></a>第四步：启动hiproxy</h3><p>上面的准备工作完成之后，我们就可以启动hiproxy来体验他的功能了，在<code>hiproxy-example/</code>下执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hiproxy start --https --open --workspace ./workspace</div></pre></td></tr></table></figure>\n<h3 id=\"第五步：访问测试页面\"><a href=\"#第五步：访问测试页面\" class=\"headerlink\" title=\"第五步：访问测试页面\"></a>第五步：访问测试页面</h3><p>在执行上一步的命令后，hiproxy会贴心的打开一个浏览器窗口并配置好代理。在这个浏览器中访问下面任意一个网址即可查看效果：</p>\n<ul>\n<li><a href=\"http://blog.example.com/\" target=\"_blank\" rel=\"external\">http://blog.example.com/</a></li>\n<li><a href=\"http://www.example.com/\" target=\"_blank\" rel=\"external\">http://www.example.com/</a></li>\n<li><a href=\"http://news.example.com/\" target=\"_blank\" rel=\"external\">http://news.example.com/</a></li>\n<li><a href=\"http://blog.example.io/\" target=\"_blank\" rel=\"external\">http://blog.example.io/</a></li>\n<li><a href=\"http://blog.example.io/static/\" target=\"_blank\" rel=\"external\">http://blog.example.io/static/</a></li>\n</ul>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"项目简介\"><a href=\"#项目简介\" class=\"headerlink\" title=\"项目简介\"></a>项目简介</h2><p>我们准备了一个<a href=\"https://github.com/hiproxy/hiproxy-example\" target=\"_blank\" rel=\"external\">示例工程</a>，里面有一个工作空间（workspace），工作空间中包含三个简单的项目。三个项目分别使用端口<code>8000</code>、<code>8001</code>和<code>8002</code>。</p>\n<p>同时，我们也提供了一个脚本<code>server.js</code>，来启动三个服务，可以使用<code>npm start</code>或者<code>node start</code>。</p>\n<p>这个项目的目录结构如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">.</div><div class=\"line\">├── LICENSE</div><div class=\"line\">├── README.md</div><div class=\"line\">├── package.json</div><div class=\"line\">├── start.js          <span class=\"comment\"># 启动服务</span></div><div class=\"line\">└── workspace         <span class=\"comment\"># 工作空间</span></div><div class=\"line\">    ├── blog-app      <span class=\"comment\"># blog应用示例</span></div><div class=\"line\">    │   ├── app.js    <span class=\"comment\"># express app</span></div><div class=\"line\">    │   ├── hosts     <span class=\"comment\"># hosts文件</span></div><div class=\"line\">    │   ├── public    <span class=\"comment\"># 静态资源</span></div><div class=\"line\">    │   └── rewrite   <span class=\"comment\"># rewrite配置文件</span></div><div class=\"line\">    ├── main-app      <span class=\"comment\"># 主应用示例</span></div><div class=\"line\">    │   ├── app.js    <span class=\"comment\"># express app</span></div><div class=\"line\">    │   ├── hosts     <span class=\"comment\"># hosts文件</span></div><div class=\"line\">    │   └── public    <span class=\"comment\"># 静态资源</span></div><div class=\"line\">    └── news-app      <span class=\"comment\"># 新闻应用示例</span></div><div class=\"line\">        ├── app.js    <span class=\"comment\"># express app</span></div><div class=\"line\">        └── hosts     <span class=\"comment\"># hosts文件</span></div></pre></td></tr></table></figure>\n<p>在<code>workspace</code>目录下，有三个应用，每个应用都有一个<code>hosts</code>文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># main-app hosts</span></div><div class=\"line\">127.0.0.1:8000 www.example.com</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># blog-app hosts</span></div><div class=\"line\">127.0.0.1:8001 blog.example.com</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># news-app hosts</span></div><div class=\"line\">127.0.0.1:8002 news.example.com</div></pre></td></tr></table></figure>\n<p>在blog-app中，还有一个<code>rewrite</code>文件，内容如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># rewrite rules</span></div><div class=\"line\">domain blog.example.io &#123;</div><div class=\"line\">  <span class=\"comment\"># rewrite / to 8001;</span></div><div class=\"line\">  location / &#123;</div><div class=\"line\">    proxy_pass http://127.0.0.1:8001/;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># static files</span></div><div class=\"line\">  location /static/ &#123;</div><div class=\"line\">    <span class=\"built_in\">alias</span> ./public/;</div><div class=\"line\"></div><div class=\"line\">    set_header server hiproxy;</div><div class=\"line\">    set_cookie server hiproxy;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>…</p>\n<h2 id=\"运行步骤\"><a href=\"#运行步骤\" class=\"headerlink\" title=\"运行步骤\"></a>运行步骤</h2><h3 id=\"第一步：clone代码\"><a href=\"#第一步：clone代码\" class=\"headerlink\" title=\"第一步：clone代码\"></a>第一步：clone代码</h3><p>示例项目的代码托管在github上，首先使用Git把代码clone到本地：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/hiproxy/hiproxy-example.git</div></pre></td></tr></table></figure>\n<h3 id=\"第二步：安装依赖\"><a href=\"#第二步：安装依赖\" class=\"headerlink\" title=\"第二步：安装依赖\"></a>第二步：安装依赖</h3><p>然后进入项目根目录（<code>hiproxy-example/</code>），安装需要的第三方依赖：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> hiproxy-example</div><div class=\"line\">npm install</div></pre></td></tr></table></figure>\n<h3 id=\"第三步：启动服务\"><a href=\"#第三步：启动服务\" class=\"headerlink\" title=\"第三步：启动服务\"></a>第三步：启动服务</h3><p>克隆完源码并安装好依赖后，就可以启动示例项目提供的服务了。在<code>hiproxy-example/</code>下执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm start</div></pre></td></tr></table></figure>\n<h3 id=\"第四步：启动hiproxy\"><a href=\"#第四步：启动hiproxy\" class=\"headerlink\" title=\"第四步：启动hiproxy\"></a>第四步：启动hiproxy</h3><p>上面的准备工作完成之后，我们就可以启动hiproxy来体验他的功能了，在<code>hiproxy-example/</code>下执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hiproxy start --https --open --workspace ./workspace</div></pre></td></tr></table></figure>\n<h3 id=\"第五步：访问测试页面\"><a href=\"#第五步：访问测试页面\" class=\"headerlink\" title=\"第五步：访问测试页面\"></a>第五步：访问测试页面</h3><p>在执行上一步的命令后，hiproxy会贴心的打开一个浏览器窗口并配置好代理。在这个浏览器中访问下面任意一个网址即可查看效果：</p>\n<ul>\n<li><a href=\"http://blog.example.com/\" target=\"_blank\" rel=\"external\">http://blog.example.com/</a></li>\n<li><a href=\"http://www.example.com/\" target=\"_blank\" rel=\"external\">http://www.example.com/</a></li>\n<li><a href=\"http://news.example.com/\" target=\"_blank\" rel=\"external\">http://news.example.com/</a></li>\n<li><a href=\"http://blog.example.io/\" target=\"_blank\" rel=\"external\">http://blog.example.io/</a></li>\n<li><a href=\"http://blog.example.io/static/\" target=\"_blank\" rel=\"external\">http://blog.example.io/static/</a></li>\n</ul>\n"},{"title":"rewrite内置变量","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\nhiproxy的rewrite规则配置文件中，我们可以自己定义全局变量（在全局作用域中使用`set $var value`），也可以在其他作用域中定义变量；\n\nhiproxy内置了一些变量，这些内置变量可以在相应的作用域中直接使用，不需要去定义并赋值，而且这些内置变量也不能被用户重新定义覆盖。\n\n## 全局变量\n\n这些全局变量，在配置文件的**任何地方都可以使用**。\n\n> 提示：hiproxy暂时没有内置的全局变量。将来会添加！\n\n## location块级变量\n\n这些变量，只能在`location`块中使用，这些变量主要是存储与请求相关的一些信息，比如请求的参数（`$query_string`）、Cookie（`$cookie_name`）和host（`$host`)等。现在支持的所有内置变量：\n\n### $host\n当前请求的URL对应的`host`或者请求头部的`Host`字段。\n\n### $hostname\n当前请求的URL对应的`hostname`或者请求头部的`Host`字段对应的`hostname`。\n\n### $server_port\n请求的服务端口号，默认`80`。\n\n### $search\n请求的参数字符串（包括`?`），比如`?from=app&v=19482848253`。\n\n### $query_string\n请求的参数字符串（**不包括`?`**），比如`from=app&v=19482848253`。\n\n### $scheme\n请求的协议，`http`或者`https`。\n\n### $request_uri\n请求的完整地址，比如`http://hiproxy.org:8081/docs/index.html?from=google&v=_1847295727524#get-started`。\n\n### $path\n请求的`path`（包括参数），比如`/docs/index.html?from=google&v=_1847295727524#get-started`。\n\n### $path_name\n请求的`path_name`（不包括参数），比如`/docs/index.html`。\n\n### $base_name\n请求path的最后一部分，比如path为`/docs/index.html`，则$base_name为`index.html`。\n\n### $dir_name\n请求path的目录名称，比如path为`/docs/index.html`，则$dir_name为`/docs/`。\n\n### $hash\n请求url中的`hash`(包括`#`)，比如'#get-started'。\n\n### $hash_value\n请求url中的`hash`值(不包括`#`)，比如'get-started'。\n\n### $uri\n同`$request_uri`。\n\n### $cookie_*name*\n`cookie`的值，`name`表示字段名称，这个名称中的大写字母都改成了小写，`-`替换成了`_`。比如`$cookie_userId`表示`cookie`中`useId`的值。\n\n### $http_*name*\n请求头（request）中的字段值，`name`表示字段名称，这个名称中的大写字母都改成了小写，`-`替换成了`_`。比如请求头信息中包含`User-Agent: user agent`，可以使用变量`$http_user_agent`来获取这个值。\n\n### $arg_*name*\n请求参数的值，`name`表示字段名称，这个名称中的大写字母都改成了小写，`-`替换成了`_`。比如请求参数为`?from=google&v=_1847295727524`，可以通过`$arg_from`来获取`from`的值。\n","source":"zh-cn/rewrite/built_in_variable.md","raw":"title: rewrite内置变量\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\nhiproxy的rewrite规则配置文件中，我们可以自己定义全局变量（在全局作用域中使用`set $var value`），也可以在其他作用域中定义变量；\n\nhiproxy内置了一些变量，这些内置变量可以在相应的作用域中直接使用，不需要去定义并赋值，而且这些内置变量也不能被用户重新定义覆盖。\n\n## 全局变量\n\n这些全局变量，在配置文件的**任何地方都可以使用**。\n\n> 提示：hiproxy暂时没有内置的全局变量。将来会添加！\n\n## location块级变量\n\n这些变量，只能在`location`块中使用，这些变量主要是存储与请求相关的一些信息，比如请求的参数（`$query_string`）、Cookie（`$cookie_name`）和host（`$host`)等。现在支持的所有内置变量：\n\n### $host\n当前请求的URL对应的`host`或者请求头部的`Host`字段。\n\n### $hostname\n当前请求的URL对应的`hostname`或者请求头部的`Host`字段对应的`hostname`。\n\n### $server_port\n请求的服务端口号，默认`80`。\n\n### $search\n请求的参数字符串（包括`?`），比如`?from=app&v=19482848253`。\n\n### $query_string\n请求的参数字符串（**不包括`?`**），比如`from=app&v=19482848253`。\n\n### $scheme\n请求的协议，`http`或者`https`。\n\n### $request_uri\n请求的完整地址，比如`http://hiproxy.org:8081/docs/index.html?from=google&v=_1847295727524#get-started`。\n\n### $path\n请求的`path`（包括参数），比如`/docs/index.html?from=google&v=_1847295727524#get-started`。\n\n### $path_name\n请求的`path_name`（不包括参数），比如`/docs/index.html`。\n\n### $base_name\n请求path的最后一部分，比如path为`/docs/index.html`，则$base_name为`index.html`。\n\n### $dir_name\n请求path的目录名称，比如path为`/docs/index.html`，则$dir_name为`/docs/`。\n\n### $hash\n请求url中的`hash`(包括`#`)，比如'#get-started'。\n\n### $hash_value\n请求url中的`hash`值(不包括`#`)，比如'get-started'。\n\n### $uri\n同`$request_uri`。\n\n### $cookie_*name*\n`cookie`的值，`name`表示字段名称，这个名称中的大写字母都改成了小写，`-`替换成了`_`。比如`$cookie_userId`表示`cookie`中`useId`的值。\n\n### $http_*name*\n请求头（request）中的字段值，`name`表示字段名称，这个名称中的大写字母都改成了小写，`-`替换成了`_`。比如请求头信息中包含`User-Agent: user agent`，可以使用变量`$http_user_agent`来获取这个值。\n\n### $arg_*name*\n请求参数的值，`name`表示字段名称，这个名称中的大写字母都改成了小写，`-`替换成了`_`。比如请求参数为`?from=google&v=_1847295727524`，可以通过`$arg_from`来获取`from`的值。\n","date":"2017-09-16T15:45:05.000Z","updated":"2017-09-16T15:45:05.000Z","path":"zh-cn/rewrite/built_in_variable.html","comments":1,"layout":"page","_id":"cj7nia0jw0016hy0fvfzfp3co","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<p>hiproxy的rewrite规则配置文件中，我们可以自己定义全局变量（在全局作用域中使用<code>set $var value</code>），也可以在其他作用域中定义变量；</p>\n<p>hiproxy内置了一些变量，这些内置变量可以在相应的作用域中直接使用，不需要去定义并赋值，而且这些内置变量也不能被用户重新定义覆盖。</p>\n<h2 id=\"全局变量\"><a href=\"#全局变量\" class=\"headerlink\" title=\"全局变量\"></a>全局变量</h2><p>这些全局变量，在配置文件的<strong>任何地方都可以使用</strong>。</p>\n<blockquote>\n<p>提示：hiproxy暂时没有内置的全局变量。将来会添加！</p>\n</blockquote>\n<h2 id=\"location块级变量\"><a href=\"#location块级变量\" class=\"headerlink\" title=\"location块级变量\"></a>location块级变量</h2><p>这些变量，只能在<code>location</code>块中使用，这些变量主要是存储与请求相关的一些信息，比如请求的参数（<code>$query_string</code>）、Cookie（<code>$cookie_name</code>）和host（<code>$host</code>)等。现在支持的所有内置变量：</p>\n<h3 id=\"host\"><a href=\"#host\" class=\"headerlink\" title=\"$host\"></a>$host</h3><p>当前请求的URL对应的<code>host</code>或者请求头部的<code>Host</code>字段。</p>\n<h3 id=\"hostname\"><a href=\"#hostname\" class=\"headerlink\" title=\"$hostname\"></a>$hostname</h3><p>当前请求的URL对应的<code>hostname</code>或者请求头部的<code>Host</code>字段对应的<code>hostname</code>。</p>\n<h3 id=\"server-port\"><a href=\"#server-port\" class=\"headerlink\" title=\"$server_port\"></a>$server_port</h3><p>请求的服务端口号，默认<code>80</code>。</p>\n<h3 id=\"search\"><a href=\"#search\" class=\"headerlink\" title=\"$search\"></a>$search</h3><p>请求的参数字符串（包括<code>?</code>），比如<code>?from=app&amp;v=19482848253</code>。</p>\n<h3 id=\"query-string\"><a href=\"#query-string\" class=\"headerlink\" title=\"$query_string\"></a>$query_string</h3><p>请求的参数字符串（<strong>不包括<code>?</code></strong>），比如<code>from=app&amp;v=19482848253</code>。</p>\n<h3 id=\"scheme\"><a href=\"#scheme\" class=\"headerlink\" title=\"$scheme\"></a>$scheme</h3><p>请求的协议，<code>http</code>或者<code>https</code>。</p>\n<h3 id=\"request-uri\"><a href=\"#request-uri\" class=\"headerlink\" title=\"$request_uri\"></a>$request_uri</h3><p>请求的完整地址，比如<code>http://hiproxy.org:8081/docs/index.html?from=google&amp;v=_1847295727524#get-started</code>。</p>\n<h3 id=\"path\"><a href=\"#path\" class=\"headerlink\" title=\"$path\"></a>$path</h3><p>请求的<code>path</code>（包括参数），比如<code>/docs/index.html?from=google&amp;v=_1847295727524#get-started</code>。</p>\n<h3 id=\"path-name\"><a href=\"#path-name\" class=\"headerlink\" title=\"$path_name\"></a>$path_name</h3><p>请求的<code>path_name</code>（不包括参数），比如<code>/docs/index.html</code>。</p>\n<h3 id=\"base-name\"><a href=\"#base-name\" class=\"headerlink\" title=\"$base_name\"></a>$base_name</h3><p>请求path的最后一部分，比如path为<code>/docs/index.html</code>，则$base_name为<code>index.html</code>。</p>\n<h3 id=\"dir-name\"><a href=\"#dir-name\" class=\"headerlink\" title=\"$dir_name\"></a>$dir_name</h3><p>请求path的目录名称，比如path为<code>/docs/index.html</code>，则$dir_name为<code>/docs/</code>。</p>\n<h3 id=\"hash\"><a href=\"#hash\" class=\"headerlink\" title=\"$hash\"></a>$hash</h3><p>请求url中的<code>hash</code>(包括<code>#</code>)，比如’#get-started’。</p>\n<h3 id=\"hash-value\"><a href=\"#hash-value\" class=\"headerlink\" title=\"$hash_value\"></a>$hash_value</h3><p>请求url中的<code>hash</code>值(不包括<code>#</code>)，比如’get-started’。</p>\n<h3 id=\"uri\"><a href=\"#uri\" class=\"headerlink\" title=\"$uri\"></a>$uri</h3><p>同<code>$request_uri</code>。</p>\n<h3 id=\"cookie-name\"><a href=\"#cookie-name\" class=\"headerlink\" title=\"$cookie_name\"></a>$cookie_<em>name</em></h3><p><code>cookie</code>的值，<code>name</code>表示字段名称，这个名称中的大写字母都改成了小写，<code>-</code>替换成了<code>_</code>。比如<code>$cookie_userId</code>表示<code>cookie</code>中<code>useId</code>的值。</p>\n<h3 id=\"http-name\"><a href=\"#http-name\" class=\"headerlink\" title=\"$http_name\"></a>$http_<em>name</em></h3><p>请求头（request）中的字段值，<code>name</code>表示字段名称，这个名称中的大写字母都改成了小写，<code>-</code>替换成了<code>_</code>。比如请求头信息中包含<code>User-Agent: user agent</code>，可以使用变量<code>$http_user_agent</code>来获取这个值。</p>\n<h3 id=\"arg-name\"><a href=\"#arg-name\" class=\"headerlink\" title=\"$arg_name\"></a>$arg_<em>name</em></h3><p>请求参数的值，<code>name</code>表示字段名称，这个名称中的大写字母都改成了小写，<code>-</code>替换成了<code>_</code>。比如请求参数为<code>?from=google&amp;v=_1847295727524</code>，可以通过<code>$arg_from</code>来获取<code>from</code>的值。</p>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<p>hiproxy的rewrite规则配置文件中，我们可以自己定义全局变量（在全局作用域中使用<code>set $var value</code>），也可以在其他作用域中定义变量；</p>\n<p>hiproxy内置了一些变量，这些内置变量可以在相应的作用域中直接使用，不需要去定义并赋值，而且这些内置变量也不能被用户重新定义覆盖。</p>\n<h2 id=\"全局变量\"><a href=\"#全局变量\" class=\"headerlink\" title=\"全局变量\"></a>全局变量</h2><p>这些全局变量，在配置文件的<strong>任何地方都可以使用</strong>。</p>\n<blockquote>\n<p>提示：hiproxy暂时没有内置的全局变量。将来会添加！</p>\n</blockquote>\n<h2 id=\"location块级变量\"><a href=\"#location块级变量\" class=\"headerlink\" title=\"location块级变量\"></a>location块级变量</h2><p>这些变量，只能在<code>location</code>块中使用，这些变量主要是存储与请求相关的一些信息，比如请求的参数（<code>$query_string</code>）、Cookie（<code>$cookie_name</code>）和host（<code>$host</code>)等。现在支持的所有内置变量：</p>\n<h3 id=\"host\"><a href=\"#host\" class=\"headerlink\" title=\"$host\"></a>$host</h3><p>当前请求的URL对应的<code>host</code>或者请求头部的<code>Host</code>字段。</p>\n<h3 id=\"hostname\"><a href=\"#hostname\" class=\"headerlink\" title=\"$hostname\"></a>$hostname</h3><p>当前请求的URL对应的<code>hostname</code>或者请求头部的<code>Host</code>字段对应的<code>hostname</code>。</p>\n<h3 id=\"server-port\"><a href=\"#server-port\" class=\"headerlink\" title=\"$server_port\"></a>$server_port</h3><p>请求的服务端口号，默认<code>80</code>。</p>\n<h3 id=\"search\"><a href=\"#search\" class=\"headerlink\" title=\"$search\"></a>$search</h3><p>请求的参数字符串（包括<code>?</code>），比如<code>?from=app&amp;v=19482848253</code>。</p>\n<h3 id=\"query-string\"><a href=\"#query-string\" class=\"headerlink\" title=\"$query_string\"></a>$query_string</h3><p>请求的参数字符串（<strong>不包括<code>?</code></strong>），比如<code>from=app&amp;v=19482848253</code>。</p>\n<h3 id=\"scheme\"><a href=\"#scheme\" class=\"headerlink\" title=\"$scheme\"></a>$scheme</h3><p>请求的协议，<code>http</code>或者<code>https</code>。</p>\n<h3 id=\"request-uri\"><a href=\"#request-uri\" class=\"headerlink\" title=\"$request_uri\"></a>$request_uri</h3><p>请求的完整地址，比如<code>http://hiproxy.org:8081/docs/index.html?from=google&amp;v=_1847295727524#get-started</code>。</p>\n<h3 id=\"path\"><a href=\"#path\" class=\"headerlink\" title=\"$path\"></a>$path</h3><p>请求的<code>path</code>（包括参数），比如<code>/docs/index.html?from=google&amp;v=_1847295727524#get-started</code>。</p>\n<h3 id=\"path-name\"><a href=\"#path-name\" class=\"headerlink\" title=\"$path_name\"></a>$path_name</h3><p>请求的<code>path_name</code>（不包括参数），比如<code>/docs/index.html</code>。</p>\n<h3 id=\"base-name\"><a href=\"#base-name\" class=\"headerlink\" title=\"$base_name\"></a>$base_name</h3><p>请求path的最后一部分，比如path为<code>/docs/index.html</code>，则$base_name为<code>index.html</code>。</p>\n<h3 id=\"dir-name\"><a href=\"#dir-name\" class=\"headerlink\" title=\"$dir_name\"></a>$dir_name</h3><p>请求path的目录名称，比如path为<code>/docs/index.html</code>，则$dir_name为<code>/docs/</code>。</p>\n<h3 id=\"hash\"><a href=\"#hash\" class=\"headerlink\" title=\"$hash\"></a>$hash</h3><p>请求url中的<code>hash</code>(包括<code>#</code>)，比如’#get-started’。</p>\n<h3 id=\"hash-value\"><a href=\"#hash-value\" class=\"headerlink\" title=\"$hash_value\"></a>$hash_value</h3><p>请求url中的<code>hash</code>值(不包括<code>#</code>)，比如’get-started’。</p>\n<h3 id=\"uri\"><a href=\"#uri\" class=\"headerlink\" title=\"$uri\"></a>$uri</h3><p>同<code>$request_uri</code>。</p>\n<h3 id=\"cookie-name\"><a href=\"#cookie-name\" class=\"headerlink\" title=\"$cookie_name\"></a>$cookie_<em>name</em></h3><p><code>cookie</code>的值，<code>name</code>表示字段名称，这个名称中的大写字母都改成了小写，<code>-</code>替换成了<code>_</code>。比如<code>$cookie_userId</code>表示<code>cookie</code>中<code>useId</code>的值。</p>\n<h3 id=\"http-name\"><a href=\"#http-name\" class=\"headerlink\" title=\"$http_name\"></a>$http_<em>name</em></h3><p>请求头（request）中的字段值，<code>name</code>表示字段名称，这个名称中的大写字母都改成了小写，<code>-</code>替换成了<code>_</code>。比如请求头信息中包含<code>User-Agent: user agent</code>，可以使用变量<code>$http_user_agent</code>来获取这个值。</p>\n<h3 id=\"arg-name\"><a href=\"#arg-name\" class=\"headerlink\" title=\"$arg_name\"></a>$arg_<em>name</em></h3><p>请求参数的值，<code>name</code>表示字段名称，这个名称中的大写字母都改成了小写，<code>-</code>替换成了<code>_</code>。比如请求参数为<code>?from=google&amp;v=_1847295727524</code>，可以通过<code>$arg_from</code>来获取<code>from</code>的值。</p>\n"},{"title":"安装","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 安装hiproxy\n\n### 通过npm安装\n\nhiproxy已经发布到[npm](https://www.npmjs.com/)，您可以通过npm来安装：\n```bash\nnpm install -g hiproxy\n```\n\n如果您希望使用最新的测试版本功能（可能不稳定），可以选择安装hiproxy的beta版本：\n```bash\nnpm install -g hiproxy@beta\n```\n\n此外，您也可以直接使用github源码安装：\n```bash\nnpm install -g hiproxy/hiproxy\n```\n\n**提示**：如果您还没有安装Node.js，可以到[Node.js官网](https://nodejs.org/en/)下载安装。\n\n### 通过yarn安装\n\nhiproxy也支持通过[yarn](https://yarnpkg.com)来安装：\n```bash\nyarn global add hiproxy\n```\n\n## 安装插件\n\nhiproxy也支持插件扩展。插件可以独立于hiproxy安装，直接安装到全局即可。\n\n比如我们要安装插件[hiporxy-plugin-dashboard](https://www.npmjs.com/package/hiproxy-plugin-dashboard)，可以执行下面的命令：\n\n```bash\nnpm install hiproxy-plugin-dashboard -g\n```\n\n安装之后，hiproxy下次启动的时候，会自动加载安装好的插件。\n","source":"zh-cn/get_started/installation.md","raw":"title: 安装\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 安装hiproxy\n\n### 通过npm安装\n\nhiproxy已经发布到[npm](https://www.npmjs.com/)，您可以通过npm来安装：\n```bash\nnpm install -g hiproxy\n```\n\n如果您希望使用最新的测试版本功能（可能不稳定），可以选择安装hiproxy的beta版本：\n```bash\nnpm install -g hiproxy@beta\n```\n\n此外，您也可以直接使用github源码安装：\n```bash\nnpm install -g hiproxy/hiproxy\n```\n\n**提示**：如果您还没有安装Node.js，可以到[Node.js官网](https://nodejs.org/en/)下载安装。\n\n### 通过yarn安装\n\nhiproxy也支持通过[yarn](https://yarnpkg.com)来安装：\n```bash\nyarn global add hiproxy\n```\n\n## 安装插件\n\nhiproxy也支持插件扩展。插件可以独立于hiproxy安装，直接安装到全局即可。\n\n比如我们要安装插件[hiporxy-plugin-dashboard](https://www.npmjs.com/package/hiproxy-plugin-dashboard)，可以执行下面的命令：\n\n```bash\nnpm install hiproxy-plugin-dashboard -g\n```\n\n安装之后，hiproxy下次启动的时候，会自动加载安装好的插件。\n","date":"2017-09-16T15:44:34.000Z","updated":"2017-09-16T15:44:34.000Z","path":"zh-cn/get_started/installation.html","comments":1,"layout":"page","_id":"cj7nia0k10017hy0fb4jpkay8","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"安装hiproxy\"><a href=\"#安装hiproxy\" class=\"headerlink\" title=\"安装hiproxy\"></a>安装hiproxy</h2><h3 id=\"通过npm安装\"><a href=\"#通过npm安装\" class=\"headerlink\" title=\"通过npm安装\"></a>通过npm安装</h3><p>hiproxy已经发布到<a href=\"https://www.npmjs.com/\" target=\"_blank\" rel=\"external\">npm</a>，您可以通过npm来安装：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g hiproxy</div></pre></td></tr></table></figure></p>\n<p>如果您希望使用最新的测试版本功能（可能不稳定），可以选择安装hiproxy的beta版本：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g hiproxy@beta</div></pre></td></tr></table></figure></p>\n<p>此外，您也可以直接使用github源码安装：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g hiproxy/hiproxy</div></pre></td></tr></table></figure></p>\n<p><strong>提示</strong>：如果您还没有安装Node.js，可以到<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">Node.js官网</a>下载安装。</p>\n<h3 id=\"通过yarn安装\"><a href=\"#通过yarn安装\" class=\"headerlink\" title=\"通过yarn安装\"></a>通过yarn安装</h3><p>hiproxy也支持通过<a href=\"https://yarnpkg.com\" target=\"_blank\" rel=\"external\">yarn</a>来安装：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yarn global add hiproxy</div></pre></td></tr></table></figure></p>\n<h2 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h2><p>hiproxy也支持插件扩展。插件可以独立于hiproxy安装，直接安装到全局即可。</p>\n<p>比如我们要安装插件<a href=\"https://www.npmjs.com/package/hiproxy-plugin-dashboard\" target=\"_blank\" rel=\"external\">hiporxy-plugin-dashboard</a>，可以执行下面的命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hiproxy-plugin-dashboard -g</div></pre></td></tr></table></figure>\n<p>安装之后，hiproxy下次启动的时候，会自动加载安装好的插件。</p>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"安装hiproxy\"><a href=\"#安装hiproxy\" class=\"headerlink\" title=\"安装hiproxy\"></a>安装hiproxy</h2><h3 id=\"通过npm安装\"><a href=\"#通过npm安装\" class=\"headerlink\" title=\"通过npm安装\"></a>通过npm安装</h3><p>hiproxy已经发布到<a href=\"https://www.npmjs.com/\" target=\"_blank\" rel=\"external\">npm</a>，您可以通过npm来安装：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g hiproxy</div></pre></td></tr></table></figure></p>\n<p>如果您希望使用最新的测试版本功能（可能不稳定），可以选择安装hiproxy的beta版本：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g hiproxy@beta</div></pre></td></tr></table></figure></p>\n<p>此外，您也可以直接使用github源码安装：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g hiproxy/hiproxy</div></pre></td></tr></table></figure></p>\n<p><strong>提示</strong>：如果您还没有安装Node.js，可以到<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">Node.js官网</a>下载安装。</p>\n<h3 id=\"通过yarn安装\"><a href=\"#通过yarn安装\" class=\"headerlink\" title=\"通过yarn安装\"></a>通过yarn安装</h3><p>hiproxy也支持通过<a href=\"https://yarnpkg.com\" target=\"_blank\" rel=\"external\">yarn</a>来安装：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yarn global add hiproxy</div></pre></td></tr></table></figure></p>\n<h2 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h2><p>hiproxy也支持插件扩展。插件可以独立于hiproxy安装，直接安装到全局即可。</p>\n<p>比如我们要安装插件<a href=\"https://www.npmjs.com/package/hiproxy-plugin-dashboard\" target=\"_blank\" rel=\"external\">hiporxy-plugin-dashboard</a>，可以执行下面的命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hiproxy-plugin-dashboard -g</div></pre></td></tr></table></figure>\n<p>安装之后，hiproxy下次启动的时候，会自动加载安装好的插件。</p>\n"},{"title":"rewrite指令","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 指令\n\n`指令`（也称：`命令`）用于设置变量，或者对request/response做一些操作。\n\n### set\n\n描述：定义变量\n\n语法：**set** key value\n\n**作用域链**：global, domain, location\n\n例子：\n\n```bash\nset $server hiipack;\n```\n\n### 代理请求相关指令\n\n代理请求相关的指令，用于操作代理服务向目标服务器发送请求的`Request`对象。\n\n**作用域链**：domain, location\n\n#### * proxy_set_header\n\n描述：设置请求头部字段\n\n语法：**proxy_set_header** key value\n\n例子：\n\n```bash\nproxy_set_header Host some.example.com;\n```\n\n#### * proxy_hide_header\n\n描述：删除请求头部字段\n\n语法：**proxy_hide_header** key\n\n例子：\n\n```bash\nproxy_hide_header Host;\n```\n\n#### * proxy_set_cookie\n\n描述：设置请求Cookie\n\n语法：**proxy_set_cookie** key value\n\n例子：\n\n```bash\nproxy_set_cookie from hiproxy;\n```\n\n#### * proxy_hide_cookie\n\n描述：删除请求Cookie字段\n\n语法：**proxy_hide_cookie** key\n\n例子：\n\n```bash\nproxy_hide_cookie from;\n```\n\n### 代理响应相关指令\n\n代理响应相关的指令用于配置代理服务器响应浏览器的`Response`对象。\n\n**作用域链**：domain, location\n\n#### * set_header\n\n描述：添加Header字段\n\n语法：**set_header** key value\n\n例子：\n\n```bash\nset_header SERVER hiproxy;\n```\n\n#### * hide_header\n\n描述：删除Header字段\n\n语法：**hide_header** key\n\n*例子*：\n\n```bash\nhide_header SERVER;\n```\n\n#### * set_cookie\n\n描述：设置Cookie字段\n\n语法：**set_cookie** key value\n\n例子\n\n```bash\nset_cookie SESSION_ID 2BF36A09CB35FD71E;\n```\n\n#### * hide_cookie\n\n描述：删除Cookie字段\n\n语法：**hide_cookie** key\n\n*例子*：\n\n```bash\nhide_cookie SESSION_ID;\n```\n\n#### * send_file\n\n描述：返回指定的文件\n\n语法：**send_file** file_name\n\n例子：\n\n```bash\nsend_file index.html;\nsend_file /site/index.html;\n```\n\n#### * echo\n\n描述：返回指定内容\n\n语法：**echo** string\n\n例子：\n\n```bash\necho <h1>hello_echo</h1>;\necho <p>finish</p>;\n```\n\n\n### domain内部指令\n\n只在同一个domain内有效，且覆盖全局同名指令\n\n**作用域链**：domain\n\n#### * ssl_certificate\n\n描述：手动指定证书文件\n\n参数：**ssl_certificate** file.crt（只支持相对路径，后期完善）\n\n例子：\n\n```bash\nexample.com => {\n    ssl_certificate /user/root/.hiproxy/cert/example.crt;\n}\n\n```\n\n#### * ssl_certificate_key\n\n描述：手动指定私钥文件\n\n参数：**ssl_certificate_key** file.key（只支持相对路径，后期完善）\n\n例子：\n\n```bash\nexample.com => {\n    ssl_certificate_key /user/root/.hiproxy/cert/example.key;\n}\n\n```\n\n\n### location内部指令\n\n只在同一个location内有效，且覆盖全局及domain同名指令\n\n**作用域链**：domain, location\n\n#### * proxy_pass\n\n描述：设置请求转发的目标地址\n\n参数：**proxy_pass** url\n\n例子：\n\n```bash\nproxy_pass http://some.example.com/some/path/;\n```\n\n#### * alias\n\n描述：将对应的`location`映射到本地目录\n\n参数：**alias** path\n\n例子：\n\n```bash\nalias /Users/root/some/path/;\n```\n\n#### * root\n\n描述：将对应的`location`映射到本地目录时的默认文件，默认文件名为`index.html`\n\n参数：**root** file_name\n\n*例子*：\n\n```bash\nroot app.html;\n```\n","source":"zh-cn/rewrite/directive.md","raw":"title: rewrite指令\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 指令\n\n`指令`（也称：`命令`）用于设置变量，或者对request/response做一些操作。\n\n### set\n\n描述：定义变量\n\n语法：**set** key value\n\n**作用域链**：global, domain, location\n\n例子：\n\n```bash\nset $server hiipack;\n```\n\n### 代理请求相关指令\n\n代理请求相关的指令，用于操作代理服务向目标服务器发送请求的`Request`对象。\n\n**作用域链**：domain, location\n\n#### * proxy_set_header\n\n描述：设置请求头部字段\n\n语法：**proxy_set_header** key value\n\n例子：\n\n```bash\nproxy_set_header Host some.example.com;\n```\n\n#### * proxy_hide_header\n\n描述：删除请求头部字段\n\n语法：**proxy_hide_header** key\n\n例子：\n\n```bash\nproxy_hide_header Host;\n```\n\n#### * proxy_set_cookie\n\n描述：设置请求Cookie\n\n语法：**proxy_set_cookie** key value\n\n例子：\n\n```bash\nproxy_set_cookie from hiproxy;\n```\n\n#### * proxy_hide_cookie\n\n描述：删除请求Cookie字段\n\n语法：**proxy_hide_cookie** key\n\n例子：\n\n```bash\nproxy_hide_cookie from;\n```\n\n### 代理响应相关指令\n\n代理响应相关的指令用于配置代理服务器响应浏览器的`Response`对象。\n\n**作用域链**：domain, location\n\n#### * set_header\n\n描述：添加Header字段\n\n语法：**set_header** key value\n\n例子：\n\n```bash\nset_header SERVER hiproxy;\n```\n\n#### * hide_header\n\n描述：删除Header字段\n\n语法：**hide_header** key\n\n*例子*：\n\n```bash\nhide_header SERVER;\n```\n\n#### * set_cookie\n\n描述：设置Cookie字段\n\n语法：**set_cookie** key value\n\n例子\n\n```bash\nset_cookie SESSION_ID 2BF36A09CB35FD71E;\n```\n\n#### * hide_cookie\n\n描述：删除Cookie字段\n\n语法：**hide_cookie** key\n\n*例子*：\n\n```bash\nhide_cookie SESSION_ID;\n```\n\n#### * send_file\n\n描述：返回指定的文件\n\n语法：**send_file** file_name\n\n例子：\n\n```bash\nsend_file index.html;\nsend_file /site/index.html;\n```\n\n#### * echo\n\n描述：返回指定内容\n\n语法：**echo** string\n\n例子：\n\n```bash\necho <h1>hello_echo</h1>;\necho <p>finish</p>;\n```\n\n\n### domain内部指令\n\n只在同一个domain内有效，且覆盖全局同名指令\n\n**作用域链**：domain\n\n#### * ssl_certificate\n\n描述：手动指定证书文件\n\n参数：**ssl_certificate** file.crt（只支持相对路径，后期完善）\n\n例子：\n\n```bash\nexample.com => {\n    ssl_certificate /user/root/.hiproxy/cert/example.crt;\n}\n\n```\n\n#### * ssl_certificate_key\n\n描述：手动指定私钥文件\n\n参数：**ssl_certificate_key** file.key（只支持相对路径，后期完善）\n\n例子：\n\n```bash\nexample.com => {\n    ssl_certificate_key /user/root/.hiproxy/cert/example.key;\n}\n\n```\n\n\n### location内部指令\n\n只在同一个location内有效，且覆盖全局及domain同名指令\n\n**作用域链**：domain, location\n\n#### * proxy_pass\n\n描述：设置请求转发的目标地址\n\n参数：**proxy_pass** url\n\n例子：\n\n```bash\nproxy_pass http://some.example.com/some/path/;\n```\n\n#### * alias\n\n描述：将对应的`location`映射到本地目录\n\n参数：**alias** path\n\n例子：\n\n```bash\nalias /Users/root/some/path/;\n```\n\n#### * root\n\n描述：将对应的`location`映射到本地目录时的默认文件，默认文件名为`index.html`\n\n参数：**root** file_name\n\n*例子*：\n\n```bash\nroot app.html;\n```\n","date":"2017-09-16T15:45:15.000Z","updated":"2017-09-16T15:45:15.000Z","path":"zh-cn/rewrite/directive.html","comments":1,"layout":"page","_id":"cj7nia0k10018hy0f4ivkb6ww","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"指令\"><a href=\"#指令\" class=\"headerlink\" title=\"指令\"></a>指令</h2><p><code>指令</code>（也称：<code>命令</code>）用于设置变量，或者对request/response做一些操作。</p>\n<h3 id=\"set\"><a href=\"#set\" class=\"headerlink\" title=\"set\"></a>set</h3><p>描述：定义变量</p>\n<p>语法：<strong>set</strong> key value</p>\n<p><strong>作用域链</strong>：global, domain, location</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$server</span> hiipack;</div></pre></td></tr></table></figure>\n<h3 id=\"代理请求相关指令\"><a href=\"#代理请求相关指令\" class=\"headerlink\" title=\"代理请求相关指令\"></a>代理请求相关指令</h3><p>代理请求相关的指令，用于操作代理服务向目标服务器发送请求的<code>Request</code>对象。</p>\n<p><strong>作用域链</strong>：domain, location</p>\n<h4 id=\"proxy-set-header\"><a href=\"#proxy-set-header\" class=\"headerlink\" title=\"* proxy_set_header\"></a>* proxy_set_header</h4><p>描述：设置请求头部字段</p>\n<p>语法：<strong>proxy_set_header</strong> key value</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_set_header Host some.example.com;</div></pre></td></tr></table></figure>\n<h4 id=\"proxy-hide-header\"><a href=\"#proxy-hide-header\" class=\"headerlink\" title=\"* proxy_hide_header\"></a>* proxy_hide_header</h4><p>描述：删除请求头部字段</p>\n<p>语法：<strong>proxy_hide_header</strong> key</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_hide_header Host;</div></pre></td></tr></table></figure>\n<h4 id=\"proxy-set-cookie\"><a href=\"#proxy-set-cookie\" class=\"headerlink\" title=\"* proxy_set_cookie\"></a>* proxy_set_cookie</h4><p>描述：设置请求Cookie</p>\n<p>语法：<strong>proxy_set_cookie</strong> key value</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_set_cookie from hiproxy;</div></pre></td></tr></table></figure>\n<h4 id=\"proxy-hide-cookie\"><a href=\"#proxy-hide-cookie\" class=\"headerlink\" title=\"* proxy_hide_cookie\"></a>* proxy_hide_cookie</h4><p>描述：删除请求Cookie字段</p>\n<p>语法：<strong>proxy_hide_cookie</strong> key</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_hide_cookie from;</div></pre></td></tr></table></figure>\n<h3 id=\"代理响应相关指令\"><a href=\"#代理响应相关指令\" class=\"headerlink\" title=\"代理响应相关指令\"></a>代理响应相关指令</h3><p>代理响应相关的指令用于配置代理服务器响应浏览器的<code>Response</code>对象。</p>\n<p><strong>作用域链</strong>：domain, location</p>\n<h4 id=\"set-header\"><a href=\"#set-header\" class=\"headerlink\" title=\"* set_header\"></a>* set_header</h4><p>描述：添加Header字段</p>\n<p>语法：<strong>set_header</strong> key value</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">set_header SERVER hiproxy;</div></pre></td></tr></table></figure>\n<h4 id=\"hide-header\"><a href=\"#hide-header\" class=\"headerlink\" title=\"* hide_header\"></a>* hide_header</h4><p>描述：删除Header字段</p>\n<p>语法：<strong>hide_header</strong> key</p>\n<p><em>例子</em>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hide_header SERVER;</div></pre></td></tr></table></figure>\n<h4 id=\"set-cookie\"><a href=\"#set-cookie\" class=\"headerlink\" title=\"* set_cookie\"></a>* set_cookie</h4><p>描述：设置Cookie字段</p>\n<p>语法：<strong>set_cookie</strong> key value</p>\n<p>例子</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">set_cookie SESSION_ID 2BF36A09CB35FD71E;</div></pre></td></tr></table></figure>\n<h4 id=\"hide-cookie\"><a href=\"#hide-cookie\" class=\"headerlink\" title=\"* hide_cookie\"></a>* hide_cookie</h4><p>描述：删除Cookie字段</p>\n<p>语法：<strong>hide_cookie</strong> key</p>\n<p><em>例子</em>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hide_cookie SESSION_ID;</div></pre></td></tr></table></figure>\n<h4 id=\"send-file\"><a href=\"#send-file\" class=\"headerlink\" title=\"* send_file\"></a>* send_file</h4><p>描述：返回指定的文件</p>\n<p>语法：<strong>send_file</strong> file_name</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">send_file index.html;</div><div class=\"line\">send_file /site/index.html;</div></pre></td></tr></table></figure>\n<h4 id=\"echo\"><a href=\"#echo\" class=\"headerlink\" title=\"* echo\"></a>* echo</h4><p>描述：返回指定内容</p>\n<p>语法：<strong>echo</strong> string</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">echo</span> &lt;h1&gt;hello_echo&lt;/h1&gt;;</div><div class=\"line\"><span class=\"built_in\">echo</span> &lt;p&gt;finish&lt;/p&gt;;</div></pre></td></tr></table></figure>\n<h3 id=\"domain内部指令\"><a href=\"#domain内部指令\" class=\"headerlink\" title=\"domain内部指令\"></a>domain内部指令</h3><p>只在同一个domain内有效，且覆盖全局同名指令</p>\n<p><strong>作用域链</strong>：domain</p>\n<h4 id=\"ssl-certificate\"><a href=\"#ssl-certificate\" class=\"headerlink\" title=\"* ssl_certificate\"></a>* ssl_certificate</h4><p>描述：手动指定证书文件</p>\n<p>参数：<strong>ssl_certificate</strong> file.crt（只支持相对路径，后期完善）</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">example.com =&gt; &#123;</div><div class=\"line\">    ssl_certificate /user/root/.hiproxy/cert/example.crt;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"ssl-certificate-key\"><a href=\"#ssl-certificate-key\" class=\"headerlink\" title=\"* ssl_certificate_key\"></a>* ssl_certificate_key</h4><p>描述：手动指定私钥文件</p>\n<p>参数：<strong>ssl_certificate_key</strong> file.key（只支持相对路径，后期完善）</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">example.com =&gt; &#123;</div><div class=\"line\">    ssl_certificate_key /user/root/.hiproxy/cert/example.key;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"location内部指令\"><a href=\"#location内部指令\" class=\"headerlink\" title=\"location内部指令\"></a>location内部指令</h3><p>只在同一个location内有效，且覆盖全局及domain同名指令</p>\n<p><strong>作用域链</strong>：domain, location</p>\n<h4 id=\"proxy-pass\"><a href=\"#proxy-pass\" class=\"headerlink\" title=\"* proxy_pass\"></a>* proxy_pass</h4><p>描述：设置请求转发的目标地址</p>\n<p>参数：<strong>proxy_pass</strong> url</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_pass http://some.example.com/some/path/;</div></pre></td></tr></table></figure>\n<h4 id=\"alias\"><a href=\"#alias\" class=\"headerlink\" title=\"* alias\"></a>* alias</h4><p>描述：将对应的<code>location</code>映射到本地目录</p>\n<p>参数：<strong>alias</strong> path</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">alias</span> /Users/root/some/path/;</div></pre></td></tr></table></figure>\n<h4 id=\"root\"><a href=\"#root\" class=\"headerlink\" title=\"* root\"></a>* root</h4><p>描述：将对应的<code>location</code>映射到本地目录时的默认文件，默认文件名为<code>index.html</code></p>\n<p>参数：<strong>root</strong> file_name</p>\n<p><em>例子</em>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">root app.html;</div></pre></td></tr></table></figure>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"指令\"><a href=\"#指令\" class=\"headerlink\" title=\"指令\"></a>指令</h2><p><code>指令</code>（也称：<code>命令</code>）用于设置变量，或者对request/response做一些操作。</p>\n<h3 id=\"set\"><a href=\"#set\" class=\"headerlink\" title=\"set\"></a>set</h3><p>描述：定义变量</p>\n<p>语法：<strong>set</strong> key value</p>\n<p><strong>作用域链</strong>：global, domain, location</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$server</span> hiipack;</div></pre></td></tr></table></figure>\n<h3 id=\"代理请求相关指令\"><a href=\"#代理请求相关指令\" class=\"headerlink\" title=\"代理请求相关指令\"></a>代理请求相关指令</h3><p>代理请求相关的指令，用于操作代理服务向目标服务器发送请求的<code>Request</code>对象。</p>\n<p><strong>作用域链</strong>：domain, location</p>\n<h4 id=\"proxy-set-header\"><a href=\"#proxy-set-header\" class=\"headerlink\" title=\"* proxy_set_header\"></a>* proxy_set_header</h4><p>描述：设置请求头部字段</p>\n<p>语法：<strong>proxy_set_header</strong> key value</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_set_header Host some.example.com;</div></pre></td></tr></table></figure>\n<h4 id=\"proxy-hide-header\"><a href=\"#proxy-hide-header\" class=\"headerlink\" title=\"* proxy_hide_header\"></a>* proxy_hide_header</h4><p>描述：删除请求头部字段</p>\n<p>语法：<strong>proxy_hide_header</strong> key</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_hide_header Host;</div></pre></td></tr></table></figure>\n<h4 id=\"proxy-set-cookie\"><a href=\"#proxy-set-cookie\" class=\"headerlink\" title=\"* proxy_set_cookie\"></a>* proxy_set_cookie</h4><p>描述：设置请求Cookie</p>\n<p>语法：<strong>proxy_set_cookie</strong> key value</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_set_cookie from hiproxy;</div></pre></td></tr></table></figure>\n<h4 id=\"proxy-hide-cookie\"><a href=\"#proxy-hide-cookie\" class=\"headerlink\" title=\"* proxy_hide_cookie\"></a>* proxy_hide_cookie</h4><p>描述：删除请求Cookie字段</p>\n<p>语法：<strong>proxy_hide_cookie</strong> key</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_hide_cookie from;</div></pre></td></tr></table></figure>\n<h3 id=\"代理响应相关指令\"><a href=\"#代理响应相关指令\" class=\"headerlink\" title=\"代理响应相关指令\"></a>代理响应相关指令</h3><p>代理响应相关的指令用于配置代理服务器响应浏览器的<code>Response</code>对象。</p>\n<p><strong>作用域链</strong>：domain, location</p>\n<h4 id=\"set-header\"><a href=\"#set-header\" class=\"headerlink\" title=\"* set_header\"></a>* set_header</h4><p>描述：添加Header字段</p>\n<p>语法：<strong>set_header</strong> key value</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">set_header SERVER hiproxy;</div></pre></td></tr></table></figure>\n<h4 id=\"hide-header\"><a href=\"#hide-header\" class=\"headerlink\" title=\"* hide_header\"></a>* hide_header</h4><p>描述：删除Header字段</p>\n<p>语法：<strong>hide_header</strong> key</p>\n<p><em>例子</em>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hide_header SERVER;</div></pre></td></tr></table></figure>\n<h4 id=\"set-cookie\"><a href=\"#set-cookie\" class=\"headerlink\" title=\"* set_cookie\"></a>* set_cookie</h4><p>描述：设置Cookie字段</p>\n<p>语法：<strong>set_cookie</strong> key value</p>\n<p>例子</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">set_cookie SESSION_ID 2BF36A09CB35FD71E;</div></pre></td></tr></table></figure>\n<h4 id=\"hide-cookie\"><a href=\"#hide-cookie\" class=\"headerlink\" title=\"* hide_cookie\"></a>* hide_cookie</h4><p>描述：删除Cookie字段</p>\n<p>语法：<strong>hide_cookie</strong> key</p>\n<p><em>例子</em>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hide_cookie SESSION_ID;</div></pre></td></tr></table></figure>\n<h4 id=\"send-file\"><a href=\"#send-file\" class=\"headerlink\" title=\"* send_file\"></a>* send_file</h4><p>描述：返回指定的文件</p>\n<p>语法：<strong>send_file</strong> file_name</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">send_file index.html;</div><div class=\"line\">send_file /site/index.html;</div></pre></td></tr></table></figure>\n<h4 id=\"echo\"><a href=\"#echo\" class=\"headerlink\" title=\"* echo\"></a>* echo</h4><p>描述：返回指定内容</p>\n<p>语法：<strong>echo</strong> string</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">echo</span> &lt;h1&gt;hello_echo&lt;/h1&gt;;</div><div class=\"line\"><span class=\"built_in\">echo</span> &lt;p&gt;finish&lt;/p&gt;;</div></pre></td></tr></table></figure>\n<h3 id=\"domain内部指令\"><a href=\"#domain内部指令\" class=\"headerlink\" title=\"domain内部指令\"></a>domain内部指令</h3><p>只在同一个domain内有效，且覆盖全局同名指令</p>\n<p><strong>作用域链</strong>：domain</p>\n<h4 id=\"ssl-certificate\"><a href=\"#ssl-certificate\" class=\"headerlink\" title=\"* ssl_certificate\"></a>* ssl_certificate</h4><p>描述：手动指定证书文件</p>\n<p>参数：<strong>ssl_certificate</strong> file.crt（只支持相对路径，后期完善）</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">example.com =&gt; &#123;</div><div class=\"line\">    ssl_certificate /user/root/.hiproxy/cert/example.crt;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"ssl-certificate-key\"><a href=\"#ssl-certificate-key\" class=\"headerlink\" title=\"* ssl_certificate_key\"></a>* ssl_certificate_key</h4><p>描述：手动指定私钥文件</p>\n<p>参数：<strong>ssl_certificate_key</strong> file.key（只支持相对路径，后期完善）</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">example.com =&gt; &#123;</div><div class=\"line\">    ssl_certificate_key /user/root/.hiproxy/cert/example.key;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"location内部指令\"><a href=\"#location内部指令\" class=\"headerlink\" title=\"location内部指令\"></a>location内部指令</h3><p>只在同一个location内有效，且覆盖全局及domain同名指令</p>\n<p><strong>作用域链</strong>：domain, location</p>\n<h4 id=\"proxy-pass\"><a href=\"#proxy-pass\" class=\"headerlink\" title=\"* proxy_pass\"></a>* proxy_pass</h4><p>描述：设置请求转发的目标地址</p>\n<p>参数：<strong>proxy_pass</strong> url</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_pass http://some.example.com/some/path/;</div></pre></td></tr></table></figure>\n<h4 id=\"alias\"><a href=\"#alias\" class=\"headerlink\" title=\"* alias\"></a>* alias</h4><p>描述：将对应的<code>location</code>映射到本地目录</p>\n<p>参数：<strong>alias</strong> path</p>\n<p>例子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">alias</span> /Users/root/some/path/;</div></pre></td></tr></table></figure>\n<h4 id=\"root\"><a href=\"#root\" class=\"headerlink\" title=\"* root\"></a>* root</h4><p>描述：将对应的<code>location</code>映射到本地目录时的默认文件，默认文件名为<code>index.html</code></p>\n<p>参数：<strong>root</strong> file_name</p>\n<p><em>例子</em>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">root app.html;</div></pre></td></tr></table></figure>\n"},{"title":"Rewrite简介","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 简介\n\n**rewrite** 参考了[Nginx][Nginx]配置语法，通过简单的配置，就可以帮助前端开发在本地调试的基础上，方便的利用其他环境或者线上的API接口进行测试。\n\n当服务启动后，将自动扫描并监听各项目根目录下的`rewrite`文件，生成及实时更新转发规则，无需重启服务。\n\n**注**：hiproxy同时支持项目`rewrite`及[hosts][hosts]文件。如果仅需要简单的`域名+端口`转发，请参考[hosts][hosts]。\n\n## 基本语法\n\n### 变量\n\n**语法**\n```bash\n$变量名\n```\n**例子**\n\n```bash\n# 定义变量\nset $var_name value\n\n# 使用变量\n$var_name\n```\n### domain\n\n`domain` 用来指定一个域名，这个域名的所有配置都在 `domain` 块中。\n\n**语法**\n\n```bash\n[域名|变量] => {\n    # ...\n}\n```\n**例子**\n\n```bash\nset $domain some.example.com\n\n# 直接使用域名\nsome.example.com => {\n    # ...\n}\n\n# 或者使用变量\n$domain => {\n    # ...\n}\n```\n### location\n\nlocation 用来指定域名中的一个具体的路径，这个路径的所有配置都在 location 块中。\n\n**注意**：location必须位于domain块中。\n\n**语法**\n\n```bash\nlocation [目录|文件|正则表达式|变量] {\n    # ...\n}\n```\n**例子**\n\n```bash\n# 目录\nlocation /some/path/ {\n    # ...\n}\n\n# 具体文件\nlocation /some/file.htm {\n    # ...\n}\n\n# 正则表达式\nlocation ~ ^/some/(path|path1)/.* {\n    # ...\n}\n\n# 变量\nlocation $some/$path {\n    # ...\n}\n```\n### 命令\n\n命令用于设置一些变量，或者对`request`\\/`response`做一些操作。\n\n**语法**\n\n```bash\n命令 参数1 参数2 ... 参数N\n```\n\n**例子**\n\n```bash\n# 设置代理时的头部\nproxy_set_header Host some.example.com;\n\n# 设置response的cookie\nset_cookie UserID some_user_id;\n```\n\n### 注释\n\n用来注释某些不需要的内容，**只支持单行注释**。\n\n**语法**\n\n```bash\n# 注释内容\n```\n\n### 简写语法\n\n简写语法，可以用来定义一些基本的规则，不需要写`location`和其他的命令。\n\n**语法**\n\n```bash\n域名 ==> 域名|路径\n```\n\n**例子**\n\n```bash\njson.example.com => 127.0.0.1:8800;\n```\n\n## 更多例子\n\n```bash\nset $local 127.0.0.1:8800\n# simple rewrite rule\napi.hiproxy.org => local.hiproxy.org;\napi.hiproxy.org => 127.0.0.1:8800;\napi.hiproxy.org/mock => $local/mock;\n```\n\n```bash\n# rewrite folder\napi.hiproxy.org/user/ => {\n    proxy_pass local.hiproxy.org/user/;\n\n    # proxy request config\n    proxy_set_header Host api.hiproxy.org;\n    proxy_set_header other value;\n    proxy_hide_header other;\n\n    proxy_set_cookie userid 20150910121359;\n    proxy_hide_cookie sessionid;\n\n    # response config\n    set_cookie sessionID E3BF86A90ACDD6C5FF49ACB09;\n    set_header proxy hiproxy;\n\n    # allow CORS\n    set_header Access-Control-Allow-Origin *;\n\n    hide_header proxy;\n    hide_cookie sessionID;\n}\n```\n\n```bash\n# regexp support\n~ /(demo|example)/([^\\/]*\\.(html|htm))$ => {\n   proxy_pass http://127.0.0.1:9999/$1/src/$2;\n}\n```\n\n```bash\nset $domain api.hiproxy.org;\nset $local 127.0.0.1:8800;\nset $api api;\nset $test $api.example.com;\nset $id 1234567;\n\n# standard rewrite url\n$domain => {\n    proxy_pass http://$local/api/mock/;\n    set $id 1234;\n    set $mock_user user_$id;\n    set_header Host $domain;\n    set_header UserID $mock_user;\n    set_header Access-Control-Allow-Origin *;\n}\n\nblog.hiproxy.org => {\n    set_header Access-Control-Allow-Origin *;\n\n    set $node_server 127.0.0.1:3008;\n    set $order order;\n    set $cookie1 login=true;expires=20160909;\n\n    location /$api/$order/detail {\n        proxy_pass http://$node_server/user/?domain=$domain;\n        set_header Set-Cookie userID 200908204140;\n    }\n\n    location ~ /(usercenter|userinfo)/ {\n        set $cookie login=true;expires=20180808;\n        set $id 56789;\n\n        proxy_pass http://127.0.0.1:3008/info/;\n\n        set_cookie userID 200908204140;\n        set_cookie userName user_$id;\n    }\n\n    location ~ /local\\/(.*)(\\?(.*))? {\n        send_file ./mock/$1.json;\n    }\n\n    location /dev {\n        #alias /site/path/;\n        alias ./src/view/;\n        root app.html\n    }\n\n    location /multiple {\n        echo <h1>hello_echo</h1>;\n        echo <p>test echo directive</p>;\n        echo <p>finish</p>;\n    }\n\n}\n```\n\n\n[hosts]: ../configuration/hosts.html\n[Nginx]: http://nginx.org/en/docs/\n","source":"zh-cn/rewrite/index.md","raw":"title: Rewrite简介\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 简介\n\n**rewrite** 参考了[Nginx][Nginx]配置语法，通过简单的配置，就可以帮助前端开发在本地调试的基础上，方便的利用其他环境或者线上的API接口进行测试。\n\n当服务启动后，将自动扫描并监听各项目根目录下的`rewrite`文件，生成及实时更新转发规则，无需重启服务。\n\n**注**：hiproxy同时支持项目`rewrite`及[hosts][hosts]文件。如果仅需要简单的`域名+端口`转发，请参考[hosts][hosts]。\n\n## 基本语法\n\n### 变量\n\n**语法**\n```bash\n$变量名\n```\n**例子**\n\n```bash\n# 定义变量\nset $var_name value\n\n# 使用变量\n$var_name\n```\n### domain\n\n`domain` 用来指定一个域名，这个域名的所有配置都在 `domain` 块中。\n\n**语法**\n\n```bash\n[域名|变量] => {\n    # ...\n}\n```\n**例子**\n\n```bash\nset $domain some.example.com\n\n# 直接使用域名\nsome.example.com => {\n    # ...\n}\n\n# 或者使用变量\n$domain => {\n    # ...\n}\n```\n### location\n\nlocation 用来指定域名中的一个具体的路径，这个路径的所有配置都在 location 块中。\n\n**注意**：location必须位于domain块中。\n\n**语法**\n\n```bash\nlocation [目录|文件|正则表达式|变量] {\n    # ...\n}\n```\n**例子**\n\n```bash\n# 目录\nlocation /some/path/ {\n    # ...\n}\n\n# 具体文件\nlocation /some/file.htm {\n    # ...\n}\n\n# 正则表达式\nlocation ~ ^/some/(path|path1)/.* {\n    # ...\n}\n\n# 变量\nlocation $some/$path {\n    # ...\n}\n```\n### 命令\n\n命令用于设置一些变量，或者对`request`\\/`response`做一些操作。\n\n**语法**\n\n```bash\n命令 参数1 参数2 ... 参数N\n```\n\n**例子**\n\n```bash\n# 设置代理时的头部\nproxy_set_header Host some.example.com;\n\n# 设置response的cookie\nset_cookie UserID some_user_id;\n```\n\n### 注释\n\n用来注释某些不需要的内容，**只支持单行注释**。\n\n**语法**\n\n```bash\n# 注释内容\n```\n\n### 简写语法\n\n简写语法，可以用来定义一些基本的规则，不需要写`location`和其他的命令。\n\n**语法**\n\n```bash\n域名 ==> 域名|路径\n```\n\n**例子**\n\n```bash\njson.example.com => 127.0.0.1:8800;\n```\n\n## 更多例子\n\n```bash\nset $local 127.0.0.1:8800\n# simple rewrite rule\napi.hiproxy.org => local.hiproxy.org;\napi.hiproxy.org => 127.0.0.1:8800;\napi.hiproxy.org/mock => $local/mock;\n```\n\n```bash\n# rewrite folder\napi.hiproxy.org/user/ => {\n    proxy_pass local.hiproxy.org/user/;\n\n    # proxy request config\n    proxy_set_header Host api.hiproxy.org;\n    proxy_set_header other value;\n    proxy_hide_header other;\n\n    proxy_set_cookie userid 20150910121359;\n    proxy_hide_cookie sessionid;\n\n    # response config\n    set_cookie sessionID E3BF86A90ACDD6C5FF49ACB09;\n    set_header proxy hiproxy;\n\n    # allow CORS\n    set_header Access-Control-Allow-Origin *;\n\n    hide_header proxy;\n    hide_cookie sessionID;\n}\n```\n\n```bash\n# regexp support\n~ /(demo|example)/([^\\/]*\\.(html|htm))$ => {\n   proxy_pass http://127.0.0.1:9999/$1/src/$2;\n}\n```\n\n```bash\nset $domain api.hiproxy.org;\nset $local 127.0.0.1:8800;\nset $api api;\nset $test $api.example.com;\nset $id 1234567;\n\n# standard rewrite url\n$domain => {\n    proxy_pass http://$local/api/mock/;\n    set $id 1234;\n    set $mock_user user_$id;\n    set_header Host $domain;\n    set_header UserID $mock_user;\n    set_header Access-Control-Allow-Origin *;\n}\n\nblog.hiproxy.org => {\n    set_header Access-Control-Allow-Origin *;\n\n    set $node_server 127.0.0.1:3008;\n    set $order order;\n    set $cookie1 login=true;expires=20160909;\n\n    location /$api/$order/detail {\n        proxy_pass http://$node_server/user/?domain=$domain;\n        set_header Set-Cookie userID 200908204140;\n    }\n\n    location ~ /(usercenter|userinfo)/ {\n        set $cookie login=true;expires=20180808;\n        set $id 56789;\n\n        proxy_pass http://127.0.0.1:3008/info/;\n\n        set_cookie userID 200908204140;\n        set_cookie userName user_$id;\n    }\n\n    location ~ /local\\/(.*)(\\?(.*))? {\n        send_file ./mock/$1.json;\n    }\n\n    location /dev {\n        #alias /site/path/;\n        alias ./src/view/;\n        root app.html\n    }\n\n    location /multiple {\n        echo <h1>hello_echo</h1>;\n        echo <p>test echo directive</p>;\n        echo <p>finish</p>;\n    }\n\n}\n```\n\n\n[hosts]: ../configuration/hosts.html\n[Nginx]: http://nginx.org/en/docs/\n","date":"2017-09-16T15:45:24.000Z","updated":"2017-09-16T15:45:24.000Z","path":"zh-cn/rewrite/index.html","comments":1,"layout":"page","_id":"cj7nia0k20019hy0fol5ktfg3","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><strong>rewrite</strong> 参考了<a href=\"http://nginx.org/en/docs/\" target=\"_blank\" rel=\"external\">Nginx</a>配置语法，通过简单的配置，就可以帮助前端开发在本地调试的基础上，方便的利用其他环境或者线上的API接口进行测试。</p>\n<p>当服务启动后，将自动扫描并监听各项目根目录下的<code>rewrite</code>文件，生成及实时更新转发规则，无需重启服务。</p>\n<p><strong>注</strong>：hiproxy同时支持项目<code>rewrite</code>及<a href=\"../configuration/hosts.html\">hosts</a>文件。如果仅需要简单的<code>域名+端口</code>转发，请参考<a href=\"../configuration/hosts.html\">hosts</a>。</p>\n<h2 id=\"基本语法\"><a href=\"#基本语法\" class=\"headerlink\" title=\"基本语法\"></a>基本语法</h2><h3 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h3><p><strong>语法</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$变量名</div></pre></td></tr></table></figure></p>\n<p><strong>例子</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 定义变量</span></div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$var_name</span> value</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 使用变量</span></div><div class=\"line\"><span class=\"variable\">$var_name</span></div></pre></td></tr></table></figure>\n<h3 id=\"domain\"><a href=\"#domain\" class=\"headerlink\" title=\"domain\"></a>domain</h3><p><code>domain</code> 用来指定一个域名，这个域名的所有配置都在 <code>domain</code> 块中。</p>\n<p><strong>语法</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[域名|变量] =&gt; &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong>例子</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$domain</span> some.example.com</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 直接使用域名</span></div><div class=\"line\">some.example.com =&gt; &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 或者使用变量</span></div><div class=\"line\"><span class=\"variable\">$domain</span> =&gt; &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"location\"><a href=\"#location\" class=\"headerlink\" title=\"location\"></a>location</h3><p>location 用来指定域名中的一个具体的路径，这个路径的所有配置都在 location 块中。</p>\n<p><strong>注意</strong>：location必须位于domain块中。</p>\n<p><strong>语法</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">location [目录|文件|正则表达式|变量] &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong>例子</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 目录</span></div><div class=\"line\">location /some/path/ &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 具体文件</span></div><div class=\"line\">location /some/file.htm &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 正则表达式</span></div><div class=\"line\">location ~ ^/some/(path|path1)/.* &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 变量</span></div><div class=\"line\">location <span class=\"variable\">$some</span>/<span class=\"variable\">$path</span> &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h3><p>命令用于设置一些变量，或者对<code>request</code>\\/<code>response</code>做一些操作。</p>\n<p><strong>语法</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">命令 参数1 参数2 ... 参数N</div></pre></td></tr></table></figure>\n<p><strong>例子</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 设置代理时的头部</span></div><div class=\"line\">proxy_set_header Host some.example.com;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 设置response的cookie</span></div><div class=\"line\">set_cookie UserID some_user_id;</div></pre></td></tr></table></figure>\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><p>用来注释某些不需要的内容，<strong>只支持单行注释</strong>。</p>\n<p><strong>语法</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 注释内容</span></div></pre></td></tr></table></figure>\n<h3 id=\"简写语法\"><a href=\"#简写语法\" class=\"headerlink\" title=\"简写语法\"></a>简写语法</h3><p>简写语法，可以用来定义一些基本的规则，不需要写<code>location</code>和其他的命令。</p>\n<p><strong>语法</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">域名 ==&gt; 域名|路径</div></pre></td></tr></table></figure>\n<p><strong>例子</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">json.example.com =&gt; 127.0.0.1:8800;</div></pre></td></tr></table></figure>\n<h2 id=\"更多例子\"><a href=\"#更多例子\" class=\"headerlink\" title=\"更多例子\"></a>更多例子</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$local</span> 127.0.0.1:8800</div><div class=\"line\"><span class=\"comment\"># simple rewrite rule</span></div><div class=\"line\">api.hiproxy.org =&gt; local.hiproxy.org;</div><div class=\"line\">api.hiproxy.org =&gt; 127.0.0.1:8800;</div><div class=\"line\">api.hiproxy.org/mock =&gt; <span class=\"variable\">$local</span>/mock;</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># rewrite folder</span></div><div class=\"line\">api.hiproxy.org/user/ =&gt; &#123;</div><div class=\"line\">    proxy_pass local.hiproxy.org/user/;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># proxy request config</span></div><div class=\"line\">    proxy_set_header Host api.hiproxy.org;</div><div class=\"line\">    proxy_set_header other value;</div><div class=\"line\">    proxy_hide_header other;</div><div class=\"line\"></div><div class=\"line\">    proxy_set_cookie userid 20150910121359;</div><div class=\"line\">    proxy_hide_cookie sessionid;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># response config</span></div><div class=\"line\">    set_cookie sessionID E3BF86A90ACDD6C5FF49ACB09;</div><div class=\"line\">    set_header proxy hiproxy;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># allow CORS</span></div><div class=\"line\">    set_header Access-Control-Allow-Origin *;</div><div class=\"line\"></div><div class=\"line\">    hide_header proxy;</div><div class=\"line\">    hide_cookie sessionID;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># regexp support</span></div><div class=\"line\">~ /(demo|example)/([^\\/]*\\.(html|htm))$ =&gt; &#123;</div><div class=\"line\">   proxy_pass http://127.0.0.1:9999/<span class=\"variable\">$1</span>/src/<span class=\"variable\">$2</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$domain</span> api.hiproxy.org;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$local</span> 127.0.0.1:8800;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$api</span> api;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$test</span> <span class=\"variable\">$api</span>.example.com;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$id</span> 1234567;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># standard rewrite url</span></div><div class=\"line\"><span class=\"variable\">$domain</span> =&gt; &#123;</div><div class=\"line\">    proxy_pass http://<span class=\"variable\">$local</span>/api/mock/;</div><div class=\"line\">    <span class=\"built_in\">set</span> <span class=\"variable\">$id</span> 1234;</div><div class=\"line\">    <span class=\"built_in\">set</span> <span class=\"variable\">$mock_user</span> user_<span class=\"variable\">$id</span>;</div><div class=\"line\">    set_header Host <span class=\"variable\">$domain</span>;</div><div class=\"line\">    set_header UserID <span class=\"variable\">$mock_user</span>;</div><div class=\"line\">    set_header Access-Control-Allow-Origin *;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">blog.hiproxy.org =&gt; &#123;</div><div class=\"line\">    set_header Access-Control-Allow-Origin *;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">set</span> <span class=\"variable\">$node_server</span> 127.0.0.1:3008;</div><div class=\"line\">    <span class=\"built_in\">set</span> <span class=\"variable\">$order</span> order;</div><div class=\"line\">    <span class=\"built_in\">set</span> <span class=\"variable\">$cookie1</span> login=<span class=\"literal\">true</span>;expires=20160909;</div><div class=\"line\"></div><div class=\"line\">    location /<span class=\"variable\">$api</span>/<span class=\"variable\">$order</span>/detail &#123;</div><div class=\"line\">        proxy_pass http://<span class=\"variable\">$node_server</span>/user/?domain=<span class=\"variable\">$domain</span>;</div><div class=\"line\">        set_header Set-Cookie userID 200908204140;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location ~ /(usercenter|userinfo)/ &#123;</div><div class=\"line\">        <span class=\"built_in\">set</span> <span class=\"variable\">$cookie</span> login=<span class=\"literal\">true</span>;expires=20180808;</div><div class=\"line\">        <span class=\"built_in\">set</span> <span class=\"variable\">$id</span> 56789;</div><div class=\"line\"></div><div class=\"line\">        proxy_pass http://127.0.0.1:3008/info/;</div><div class=\"line\"></div><div class=\"line\">        set_cookie userID 200908204140;</div><div class=\"line\">        set_cookie userName user_<span class=\"variable\">$id</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location ~ /<span class=\"built_in\">local</span>\\/(.*)(\\?(.*))? &#123;</div><div class=\"line\">        send_file ./mock/<span class=\"variable\">$1</span>.json;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location /dev &#123;</div><div class=\"line\">        <span class=\"comment\">#alias /site/path/;</span></div><div class=\"line\">        <span class=\"built_in\">alias</span> ./src/view/;</div><div class=\"line\">        root app.html</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location /multiple &#123;</div><div class=\"line\">        <span class=\"built_in\">echo</span> &lt;h1&gt;hello_echo&lt;/h1&gt;;</div><div class=\"line\">        <span class=\"built_in\">echo</span> &lt;p&gt;<span class=\"built_in\">test</span> <span class=\"built_in\">echo</span> directive&lt;/p&gt;;</div><div class=\"line\">        <span class=\"built_in\">echo</span> &lt;p&gt;finish&lt;/p&gt;;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><strong>rewrite</strong> 参考了<a href=\"http://nginx.org/en/docs/\" target=\"_blank\" rel=\"external\">Nginx</a>配置语法，通过简单的配置，就可以帮助前端开发在本地调试的基础上，方便的利用其他环境或者线上的API接口进行测试。</p>\n<p>当服务启动后，将自动扫描并监听各项目根目录下的<code>rewrite</code>文件，生成及实时更新转发规则，无需重启服务。</p>\n<p><strong>注</strong>：hiproxy同时支持项目<code>rewrite</code>及<a href=\"../configuration/hosts.html\">hosts</a>文件。如果仅需要简单的<code>域名+端口</code>转发，请参考<a href=\"../configuration/hosts.html\">hosts</a>。</p>\n<h2 id=\"基本语法\"><a href=\"#基本语法\" class=\"headerlink\" title=\"基本语法\"></a>基本语法</h2><h3 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h3><p><strong>语法</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$变量名</div></pre></td></tr></table></figure></p>\n<p><strong>例子</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 定义变量</span></div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$var_name</span> value</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 使用变量</span></div><div class=\"line\"><span class=\"variable\">$var_name</span></div></pre></td></tr></table></figure>\n<h3 id=\"domain\"><a href=\"#domain\" class=\"headerlink\" title=\"domain\"></a>domain</h3><p><code>domain</code> 用来指定一个域名，这个域名的所有配置都在 <code>domain</code> 块中。</p>\n<p><strong>语法</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[域名|变量] =&gt; &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong>例子</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$domain</span> some.example.com</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 直接使用域名</span></div><div class=\"line\">some.example.com =&gt; &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 或者使用变量</span></div><div class=\"line\"><span class=\"variable\">$domain</span> =&gt; &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"location\"><a href=\"#location\" class=\"headerlink\" title=\"location\"></a>location</h3><p>location 用来指定域名中的一个具体的路径，这个路径的所有配置都在 location 块中。</p>\n<p><strong>注意</strong>：location必须位于domain块中。</p>\n<p><strong>语法</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">location [目录|文件|正则表达式|变量] &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong>例子</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 目录</span></div><div class=\"line\">location /some/path/ &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 具体文件</span></div><div class=\"line\">location /some/file.htm &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 正则表达式</span></div><div class=\"line\">location ~ ^/some/(path|path1)/.* &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 变量</span></div><div class=\"line\">location <span class=\"variable\">$some</span>/<span class=\"variable\">$path</span> &#123;</div><div class=\"line\">    <span class=\"comment\"># ...</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h3><p>命令用于设置一些变量，或者对<code>request</code>\\/<code>response</code>做一些操作。</p>\n<p><strong>语法</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">命令 参数1 参数2 ... 参数N</div></pre></td></tr></table></figure>\n<p><strong>例子</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 设置代理时的头部</span></div><div class=\"line\">proxy_set_header Host some.example.com;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 设置response的cookie</span></div><div class=\"line\">set_cookie UserID some_user_id;</div></pre></td></tr></table></figure>\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><p>用来注释某些不需要的内容，<strong>只支持单行注释</strong>。</p>\n<p><strong>语法</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 注释内容</span></div></pre></td></tr></table></figure>\n<h3 id=\"简写语法\"><a href=\"#简写语法\" class=\"headerlink\" title=\"简写语法\"></a>简写语法</h3><p>简写语法，可以用来定义一些基本的规则，不需要写<code>location</code>和其他的命令。</p>\n<p><strong>语法</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">域名 ==&gt; 域名|路径</div></pre></td></tr></table></figure>\n<p><strong>例子</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">json.example.com =&gt; 127.0.0.1:8800;</div></pre></td></tr></table></figure>\n<h2 id=\"更多例子\"><a href=\"#更多例子\" class=\"headerlink\" title=\"更多例子\"></a>更多例子</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$local</span> 127.0.0.1:8800</div><div class=\"line\"><span class=\"comment\"># simple rewrite rule</span></div><div class=\"line\">api.hiproxy.org =&gt; local.hiproxy.org;</div><div class=\"line\">api.hiproxy.org =&gt; 127.0.0.1:8800;</div><div class=\"line\">api.hiproxy.org/mock =&gt; <span class=\"variable\">$local</span>/mock;</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># rewrite folder</span></div><div class=\"line\">api.hiproxy.org/user/ =&gt; &#123;</div><div class=\"line\">    proxy_pass local.hiproxy.org/user/;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># proxy request config</span></div><div class=\"line\">    proxy_set_header Host api.hiproxy.org;</div><div class=\"line\">    proxy_set_header other value;</div><div class=\"line\">    proxy_hide_header other;</div><div class=\"line\"></div><div class=\"line\">    proxy_set_cookie userid 20150910121359;</div><div class=\"line\">    proxy_hide_cookie sessionid;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># response config</span></div><div class=\"line\">    set_cookie sessionID E3BF86A90ACDD6C5FF49ACB09;</div><div class=\"line\">    set_header proxy hiproxy;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># allow CORS</span></div><div class=\"line\">    set_header Access-Control-Allow-Origin *;</div><div class=\"line\"></div><div class=\"line\">    hide_header proxy;</div><div class=\"line\">    hide_cookie sessionID;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># regexp support</span></div><div class=\"line\">~ /(demo|example)/([^\\/]*\\.(html|htm))$ =&gt; &#123;</div><div class=\"line\">   proxy_pass http://127.0.0.1:9999/<span class=\"variable\">$1</span>/src/<span class=\"variable\">$2</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$domain</span> api.hiproxy.org;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$local</span> 127.0.0.1:8800;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$api</span> api;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$test</span> <span class=\"variable\">$api</span>.example.com;</div><div class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$id</span> 1234567;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># standard rewrite url</span></div><div class=\"line\"><span class=\"variable\">$domain</span> =&gt; &#123;</div><div class=\"line\">    proxy_pass http://<span class=\"variable\">$local</span>/api/mock/;</div><div class=\"line\">    <span class=\"built_in\">set</span> <span class=\"variable\">$id</span> 1234;</div><div class=\"line\">    <span class=\"built_in\">set</span> <span class=\"variable\">$mock_user</span> user_<span class=\"variable\">$id</span>;</div><div class=\"line\">    set_header Host <span class=\"variable\">$domain</span>;</div><div class=\"line\">    set_header UserID <span class=\"variable\">$mock_user</span>;</div><div class=\"line\">    set_header Access-Control-Allow-Origin *;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">blog.hiproxy.org =&gt; &#123;</div><div class=\"line\">    set_header Access-Control-Allow-Origin *;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">set</span> <span class=\"variable\">$node_server</span> 127.0.0.1:3008;</div><div class=\"line\">    <span class=\"built_in\">set</span> <span class=\"variable\">$order</span> order;</div><div class=\"line\">    <span class=\"built_in\">set</span> <span class=\"variable\">$cookie1</span> login=<span class=\"literal\">true</span>;expires=20160909;</div><div class=\"line\"></div><div class=\"line\">    location /<span class=\"variable\">$api</span>/<span class=\"variable\">$order</span>/detail &#123;</div><div class=\"line\">        proxy_pass http://<span class=\"variable\">$node_server</span>/user/?domain=<span class=\"variable\">$domain</span>;</div><div class=\"line\">        set_header Set-Cookie userID 200908204140;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location ~ /(usercenter|userinfo)/ &#123;</div><div class=\"line\">        <span class=\"built_in\">set</span> <span class=\"variable\">$cookie</span> login=<span class=\"literal\">true</span>;expires=20180808;</div><div class=\"line\">        <span class=\"built_in\">set</span> <span class=\"variable\">$id</span> 56789;</div><div class=\"line\"></div><div class=\"line\">        proxy_pass http://127.0.0.1:3008/info/;</div><div class=\"line\"></div><div class=\"line\">        set_cookie userID 200908204140;</div><div class=\"line\">        set_cookie userName user_<span class=\"variable\">$id</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location ~ /<span class=\"built_in\">local</span>\\/(.*)(\\?(.*))? &#123;</div><div class=\"line\">        send_file ./mock/<span class=\"variable\">$1</span>.json;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location /dev &#123;</div><div class=\"line\">        <span class=\"comment\">#alias /site/path/;</span></div><div class=\"line\">        <span class=\"built_in\">alias</span> ./src/view/;</div><div class=\"line\">        root app.html</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location /multiple &#123;</div><div class=\"line\">        <span class=\"built_in\">echo</span> &lt;h1&gt;hello_echo&lt;/h1&gt;;</div><div class=\"line\">        <span class=\"built_in\">echo</span> &lt;p&gt;<span class=\"built_in\">test</span> <span class=\"built_in\">echo</span> directive&lt;/p&gt;;</div><div class=\"line\">        <span class=\"built_in\">echo</span> &lt;p&gt;finish&lt;/p&gt;;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"title":"作用域","_content":"\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 代码块\n\nhiproxy的代码块，分为三类：\n\n* **全局块**：所有的配置文件中不在其他块的代码，都在全局块中；\n* **domain块**：位于全局块中；\n* **location块**：位于domain块中；\n\n## 作用域\n\nhiproxy 配置文件中涉及到的作用域有5种：\n\n* **全局作用域**：*全局块*对应的作用域。这里的变量可以在任何地方访问到；\n* **domain作用域**：*domain块*对应的作用域。\n* **location作用域**：*location块*对应的作用域。\n* **request作用域**：隐式作用域，不对应具体的代码块，这些作用域中的指令，可以分布在任何代码块中。\n* **response作用域**：隐式作用域，不对应具体的代码块，这些作用域中的指令，可以分布在任何代码块中。\n\n## 代码块层级关系\n\n```\nglobal\n    |- domain\n        |- location\n        |- location\n        |- ...\n    |- domain\n        |- location\n        |- location\n        |- ...\n```\n\n## 变量查找\n\n当前作用域中查找变量的规则为：\n\n1. 如果当前作用域有这个变量，*返回* 这个变量的值。\n2. 查找上一级作用域，如果上一级作用域中有这个变量，*返回* 这个变量的值。\n3. 否则，如果上一级作用域是全局作用域，*返回* 变量名称（包括`$`符号\\)。\n4. 重复步骤*[2-3]*。\n\n## 指令执行\n\n代码块中的指令在对应的时机（request／response）会自动执行，此外，还会执行上一级代码块中的指令，比如：\n\n```bash\nwww1.test.com => {\n    # 1    \n    proxy_set_header Host www.test.com;\n\n    location / {\n        # 2\n        proxy_pass http://52.88.88.88/;\n    }\n\n    location /index.html {\n        # 3\n        proxy_pass http://127.0.0.1:8800/girl/view/index.html;\n    }\n\n    location ~ /\\/(native|gallery|picture|font)\\/(.*)/ {\n        # 4\n        proxy_pass http://88.88.88.88/$1/$2;\n    }\n}\n```\n\n上面的配置中，在执行\\#2、\\#3和\\#4处的指令同时，都会执行配置在\\#1处的指令，也就是说: \n\n`/`、`/index.html`和`/\\/(native|gallery|picture|font)\\/(.*)/`对应的请求，都会加上请求头部`Host`，值为`www.test.com`\n\n","source":"zh-cn/rewrite/scope.md","raw":"title: 作用域\n---\n\n> 如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！\n>\n> If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!\n\n## 代码块\n\nhiproxy的代码块，分为三类：\n\n* **全局块**：所有的配置文件中不在其他块的代码，都在全局块中；\n* **domain块**：位于全局块中；\n* **location块**：位于domain块中；\n\n## 作用域\n\nhiproxy 配置文件中涉及到的作用域有5种：\n\n* **全局作用域**：*全局块*对应的作用域。这里的变量可以在任何地方访问到；\n* **domain作用域**：*domain块*对应的作用域。\n* **location作用域**：*location块*对应的作用域。\n* **request作用域**：隐式作用域，不对应具体的代码块，这些作用域中的指令，可以分布在任何代码块中。\n* **response作用域**：隐式作用域，不对应具体的代码块，这些作用域中的指令，可以分布在任何代码块中。\n\n## 代码块层级关系\n\n```\nglobal\n    |- domain\n        |- location\n        |- location\n        |- ...\n    |- domain\n        |- location\n        |- location\n        |- ...\n```\n\n## 变量查找\n\n当前作用域中查找变量的规则为：\n\n1. 如果当前作用域有这个变量，*返回* 这个变量的值。\n2. 查找上一级作用域，如果上一级作用域中有这个变量，*返回* 这个变量的值。\n3. 否则，如果上一级作用域是全局作用域，*返回* 变量名称（包括`$`符号\\)。\n4. 重复步骤*[2-3]*。\n\n## 指令执行\n\n代码块中的指令在对应的时机（request／response）会自动执行，此外，还会执行上一级代码块中的指令，比如：\n\n```bash\nwww1.test.com => {\n    # 1    \n    proxy_set_header Host www.test.com;\n\n    location / {\n        # 2\n        proxy_pass http://52.88.88.88/;\n    }\n\n    location /index.html {\n        # 3\n        proxy_pass http://127.0.0.1:8800/girl/view/index.html;\n    }\n\n    location ~ /\\/(native|gallery|picture|font)\\/(.*)/ {\n        # 4\n        proxy_pass http://88.88.88.88/$1/$2;\n    }\n}\n```\n\n上面的配置中，在执行\\#2、\\#3和\\#4处的指令同时，都会执行配置在\\#1处的指令，也就是说: \n\n`/`、`/index.html`和`/\\/(native|gallery|picture|font)\\/(.*)/`对应的请求，都会加上请求头部`Host`，值为`www.test.com`\n\n","date":"2017-09-16T15:45:30.000Z","updated":"2017-09-16T15:45:30.000Z","path":"zh-cn/rewrite/scope.html","comments":1,"layout":"page","_id":"cj7nia0k2001ahy0fyuhu1wd9","content":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h2><p>hiproxy的代码块，分为三类：</p>\n<ul>\n<li><strong>全局块</strong>：所有的配置文件中不在其他块的代码，都在全局块中；</li>\n<li><strong>domain块</strong>：位于全局块中；</li>\n<li><strong>location块</strong>：位于domain块中；</li>\n</ul>\n<h2 id=\"作用域\"><a href=\"#作用域\" class=\"headerlink\" title=\"作用域\"></a>作用域</h2><p>hiproxy 配置文件中涉及到的作用域有5种：</p>\n<ul>\n<li><strong>全局作用域</strong>：<em>全局块</em>对应的作用域。这里的变量可以在任何地方访问到；</li>\n<li><strong>domain作用域</strong>：<em>domain块</em>对应的作用域。</li>\n<li><strong>location作用域</strong>：<em>location块</em>对应的作用域。</li>\n<li><strong>request作用域</strong>：隐式作用域，不对应具体的代码块，这些作用域中的指令，可以分布在任何代码块中。</li>\n<li><strong>response作用域</strong>：隐式作用域，不对应具体的代码块，这些作用域中的指令，可以分布在任何代码块中。</li>\n</ul>\n<h2 id=\"代码块层级关系\"><a href=\"#代码块层级关系\" class=\"headerlink\" title=\"代码块层级关系\"></a>代码块层级关系</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">global</div><div class=\"line\">    |- domain</div><div class=\"line\">        |- location</div><div class=\"line\">        |- location</div><div class=\"line\">        |- ...</div><div class=\"line\">    |- domain</div><div class=\"line\">        |- location</div><div class=\"line\">        |- location</div><div class=\"line\">        |- ...</div></pre></td></tr></table></figure>\n<h2 id=\"变量查找\"><a href=\"#变量查找\" class=\"headerlink\" title=\"变量查找\"></a>变量查找</h2><p>当前作用域中查找变量的规则为：</p>\n<ol>\n<li>如果当前作用域有这个变量，<em>返回</em> 这个变量的值。</li>\n<li>查找上一级作用域，如果上一级作用域中有这个变量，<em>返回</em> 这个变量的值。</li>\n<li>否则，如果上一级作用域是全局作用域，<em>返回</em> 变量名称（包括<code>$</code>符号)。</li>\n<li>重复步骤<em>[2-3]</em>。</li>\n</ol>\n<h2 id=\"指令执行\"><a href=\"#指令执行\" class=\"headerlink\" title=\"指令执行\"></a>指令执行</h2><p>代码块中的指令在对应的时机（request／response）会自动执行，此外，还会执行上一级代码块中的指令，比如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">www1.test.com =&gt; &#123;</div><div class=\"line\">    <span class=\"comment\"># 1    </span></div><div class=\"line\">    proxy_set_header Host www.test.com;</div><div class=\"line\"></div><div class=\"line\">    location / &#123;</div><div class=\"line\">        <span class=\"comment\"># 2</span></div><div class=\"line\">        proxy_pass http://52.88.88.88/;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location /index.html &#123;</div><div class=\"line\">        <span class=\"comment\"># 3</span></div><div class=\"line\">        proxy_pass http://127.0.0.1:8800/girl/view/index.html;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location ~ /\\/(native|gallery|picture|font)\\/(.*)/ &#123;</div><div class=\"line\">        <span class=\"comment\"># 4</span></div><div class=\"line\">        proxy_pass http://88.88.88.88/<span class=\"variable\">$1</span>/<span class=\"variable\">$2</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的配置中，在执行#2、#3和#4处的指令同时，都会执行配置在#1处的指令，也就是说: </p>\n<p><code>/</code>、<code>/index.html</code>和<code>/\\/(native|gallery|picture|font)\\/(.*)/</code>对应的请求，都会加上请求头部<code>Host</code>，值为<code>www.test.com</code></p>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<blockquote>\n<p>如果你愿意帮助hiproxy编写文档，请联系zdying@live.com, 谢谢！</p>\n<p>If you are willing to help hiproxy to write documentation, please contact zdying@live.com, thank you!</p>\n</blockquote>\n<h2 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h2><p>hiproxy的代码块，分为三类：</p>\n<ul>\n<li><strong>全局块</strong>：所有的配置文件中不在其他块的代码，都在全局块中；</li>\n<li><strong>domain块</strong>：位于全局块中；</li>\n<li><strong>location块</strong>：位于domain块中；</li>\n</ul>\n<h2 id=\"作用域\"><a href=\"#作用域\" class=\"headerlink\" title=\"作用域\"></a>作用域</h2><p>hiproxy 配置文件中涉及到的作用域有5种：</p>\n<ul>\n<li><strong>全局作用域</strong>：<em>全局块</em>对应的作用域。这里的变量可以在任何地方访问到；</li>\n<li><strong>domain作用域</strong>：<em>domain块</em>对应的作用域。</li>\n<li><strong>location作用域</strong>：<em>location块</em>对应的作用域。</li>\n<li><strong>request作用域</strong>：隐式作用域，不对应具体的代码块，这些作用域中的指令，可以分布在任何代码块中。</li>\n<li><strong>response作用域</strong>：隐式作用域，不对应具体的代码块，这些作用域中的指令，可以分布在任何代码块中。</li>\n</ul>\n<h2 id=\"代码块层级关系\"><a href=\"#代码块层级关系\" class=\"headerlink\" title=\"代码块层级关系\"></a>代码块层级关系</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">global</div><div class=\"line\">    |- domain</div><div class=\"line\">        |- location</div><div class=\"line\">        |- location</div><div class=\"line\">        |- ...</div><div class=\"line\">    |- domain</div><div class=\"line\">        |- location</div><div class=\"line\">        |- location</div><div class=\"line\">        |- ...</div></pre></td></tr></table></figure>\n<h2 id=\"变量查找\"><a href=\"#变量查找\" class=\"headerlink\" title=\"变量查找\"></a>变量查找</h2><p>当前作用域中查找变量的规则为：</p>\n<ol>\n<li>如果当前作用域有这个变量，<em>返回</em> 这个变量的值。</li>\n<li>查找上一级作用域，如果上一级作用域中有这个变量，<em>返回</em> 这个变量的值。</li>\n<li>否则，如果上一级作用域是全局作用域，<em>返回</em> 变量名称（包括<code>$</code>符号)。</li>\n<li>重复步骤<em>[2-3]</em>。</li>\n</ol>\n<h2 id=\"指令执行\"><a href=\"#指令执行\" class=\"headerlink\" title=\"指令执行\"></a>指令执行</h2><p>代码块中的指令在对应的时机（request／response）会自动执行，此外，还会执行上一级代码块中的指令，比如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">www1.test.com =&gt; &#123;</div><div class=\"line\">    <span class=\"comment\"># 1    </span></div><div class=\"line\">    proxy_set_header Host www.test.com;</div><div class=\"line\"></div><div class=\"line\">    location / &#123;</div><div class=\"line\">        <span class=\"comment\"># 2</span></div><div class=\"line\">        proxy_pass http://52.88.88.88/;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location /index.html &#123;</div><div class=\"line\">        <span class=\"comment\"># 3</span></div><div class=\"line\">        proxy_pass http://127.0.0.1:8800/girl/view/index.html;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location ~ /\\/(native|gallery|picture|font)\\/(.*)/ &#123;</div><div class=\"line\">        <span class=\"comment\"># 4</span></div><div class=\"line\">        proxy_pass http://88.88.88.88/<span class=\"variable\">$1</span>/<span class=\"variable\">$2</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的配置中，在执行#2、#3和#4处的指令同时，都会执行配置在#1处的指令，也就是说: </p>\n<p><code>/</code>、<code>/index.html</code>和<code>/\\/(native|gallery|picture|font)\\/(.*)/</code>对应的请求，都会加上请求头部<code>Host</code>，值为<code>www.test.com</code></p>\n"}],"Post":[{"title":"test","_content":"\nTest","source":"_posts/2014-07-13-test.md","raw":"title: test\n---\n\nTest","slug":"2014-07-13-test","published":1,"date":"2017-09-15T13:21:42.000Z","updated":"2017-09-15T13:21:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7nia0cx0001hy0f6cfvknpf","content":"<p>Test</p>\n","site":{"data":{"footerlinks":{"en":{"licenses":{"hiproxy LICENSE: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","Doc LICENSE: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"Organization":"https://github.com/hiproxy","Project Code":"https://github.com/hiproxy/hiproxy","Docmentation Code":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}},"zh-cn":{"licenses":{"hiproxy许可: MIT":"https://github.com/hiproxy/hiproxy/blob/master/LICENSE","文档许可: CC BY 4.0":"http://creativecommons.org/licenses/by/4.0/"},"github":{"组织":"https://github.com/hiproxy","项目源码":"https://github.com/hiproxy/hiproxy","文档源码":"https://github.com/hiproxy/documentation"},"libs":{"hemsl":"https://github.com/hemsl/hemsl","step-flow":"https://github.com/hiproxy/step-flow","conf-parser":"https://github.com/hiproxy/conf-parser","open-browser":"https://github.com/hiproxy/open-browser"},"links":{"qfight":"https://github.com/qfight","YMFE":"http://ued.qunar.com/ymfe/about","Qunar UED":"http://ued.qunar.com/","去哪儿网":"https://www.qunar.com"}}},"nav":{"en":{"Home":"/","Get Started":"/get_started/","Configuration":"/configuration/","Rewrite":"/rewrite/","API":"/api/","Developers":"/developers/","FAQs":"/faqs/"},"zh-cn":{"首页":"/","快速开始":"/get_started/","配置":"/configuration/","Rewrite":"/rewrite/","开发者":"/developers/","API":"/api/","常见问题":"/faqs/"}},"languages":{"zh-cn":{"name":"简体中文","disqus_lang":"zh"},"en":{"name":"English","disqus_lang":"en"}},"sidebar":{"en":{"get_started":{"Get Started":{"Introduction":"index.html","Installation":"installation.html","Run Example":"run_example.html","Applied To Existing Projects":"applied_to_existing_projects.html","CLI Options":"cli_options.html"}},"configuration":{"Configuration":{"Introduction":"index.html","Configuration file lookup":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS Certificate":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"Introduction":"index.html","Scope":"scope.html","Directive":"directive.html","Built-in Variables":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","Events":"events.html"}},"developers":{"Developers":{"Plugin":"plugin.html","Extend Command":"cli_command.html","Extend Directive":"directive.html","Extend Route":"route.html"}},"faqs":{"FAQs":{"FAQs":"index.html"}}},"zh-cn":{"get_started":{"快速开始":{"开始":"index.html","安装":"installation.html","运行示例":"run_example.html","现有项目":"applied_to_existing_projects.html","CLI选项":"cli_options.html"}},"configuration":{"配置":{"简介":"index.html","配置文件查找":"find_conf.html","hosts":"hosts.html","rewrite":"rewrite.html","SSL/TLS证书配置":"ssl_certificate.html"}},"rewrite":{"Rewrite":{"简介":"index.html","作用域":"scope.html","内置指令":"directive.html","内置变量":"built_in_variable.html"}},"api":{"Node.js API":{"API":"index.html","事件":"events.html"}},"developers":{"开发者":{"插件机制":"plugin.html","扩展CLI命令":"cli_command.html","扩展指令":"directive.html","扩展页面":"route.html"}},"faqs":{"常见问题":{"FAQs":"index.html"}}}}}},"excerpt":"","more":"<p>Test</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}